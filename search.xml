<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[用ctypes调用C函数]]></title>
      <url>https://whu-pzhang.github.io/python-ctypes.html</url>
      <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>现在已有一些C语言函数被编译成共享库，我们想从纯Python中直接调用这些函数，而不必额外编写C代码或者使用第三方的扩展工具。</p>
<p>对于这样的需求，使用Python标准库中的<code>ctypes</code>模块来实现是非常容易的。</p>
<a id="more"></a>
<p>要使用ctypes，必须确保要访问的C代码已经被编译成与Python解释器相兼容（即，采用相同的体系结构、字长、编译器等）的共享库。</p>
<h2 id="c源码">C源码</h2>
<p>现有如下的C代码：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sample.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算最大公约数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> g = y;</span><br><span class="line">    <span class="keyword">while</span> (x &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        g = x;</span><br><span class="line">        x = y % x;</span><br><span class="line">        y = g;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查（x0,y0）是否在Mandelbort集合中</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">in_mandel</span><span class="params">(<span class="keyword">double</span> x0, <span class="keyword">double</span> y0, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x=<span class="number">0</span>, y=<span class="number">0</span>, xtemp;</span><br><span class="line">    <span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        xtemp = x*x -y*y + y0;</span><br><span class="line">        y = <span class="number">2</span>*x*y + y0;</span><br><span class="line">        x = xtemp;</span><br><span class="line">        n -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (x*x + y*y &gt; <span class="number">4</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 两数相除</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> *remainder)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> quot = a / b;</span><br><span class="line">    *remainder = a % b;</span><br><span class="line">    <span class="keyword">return</span> quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算数组平均值</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">avg</span><span class="params">(<span class="keyword">double</span> *a, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        sum += a[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sum / n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// C 结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">&#125; Point;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">distance</span><span class="params">(Point *p1, Point *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hypot(p1-&gt;x - p2-&gt;x, p1-&gt;y - p2-&gt;y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这份代码中包含了C语言中不同的特性。其中<code>gcd</code>和<code>in_mandel</code>为不同参数类型的简单函数。<code>divide</code>则是C语言中返回多个值的例子，其中一个以指针的形式返回。<code>avg</code>函数遍历了数组且做了数据转换。<code>distance</code>则涉及到C语言结构体类型。</p>
<p>将上面的代码写入了一个名叫“sample.c”的文件中， 然后它们的声明写入名为“sample.h”的头文件中。</p>
<p>我们首先将上述源码编译成共享库：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -std=c99 -Wall -fPIC -shared sample.c -o libsample.so</span><br></pre></td></tr></table></figure>
<h2 id="利用ctype访问c代码">利用ctype访问C代码</h2>
<p>要访问我们编译好的共享库<code>libsample.so</code>，需要先构建一个Python模块来包装它，示例如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位到共享库文件</span></span><br><span class="line">_file = <span class="string">'libsample.so'</span></span><br><span class="line">_path = os.path.join(*(os.path.split(__file__)[:<span class="number">-1</span>] + (_file,)))</span><br><span class="line">_mod = ctypes.cdll.LoadLibrary(_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># int gcd(int, int)</span></span><br><span class="line">gcd = _mod.gcd</span><br><span class="line">gcd.argtypes = (ctypes.c_int, ctypes.c_int)</span><br><span class="line">gcd.restype = ctypes.c_int</span><br><span class="line"></span><br><span class="line"><span class="comment"># bool in_mandel(double, double, int)</span></span><br><span class="line">in_mandel = _mod.in_mandel</span><br><span class="line">in_mandel.argtypes = (ctypes.c_double, ctypes.c_double, ctypes.c_int)</span><br><span class="line">in_mandel.restype = ctypes.c_bool</span><br><span class="line"></span><br><span class="line"><span class="comment"># int divide(int, int, int *)</span></span><br><span class="line">_divide = _mod.divide</span><br><span class="line">_divide.argtypes = (ctypes.c_int, ctypes.c_int, ctypes.POINTER(ctypes.c_int))</span><br><span class="line">_divide.restype = ctypes.c_int</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divide</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    rem = ctypes.c_int()</span><br><span class="line">    quot = _divide(x, y, rem)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> quot, rem.value</span><br><span class="line"></span><br><span class="line"><span class="comment"># double avg(doubel *, int n)</span></span><br><span class="line"><span class="comment"># 定义一个类来处理 "doubel *" 参数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubleArrayType</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">from_param</span><span class="params">(self, param)</span>:</span></span><br><span class="line">        typename = type(param).__name__</span><br><span class="line">        <span class="keyword">if</span> hasattr(self, <span class="string">'from_'</span> + typename):</span><br><span class="line">            <span class="keyword">return</span> getattr(self, <span class="string">'from_'</span> + typename)(param)</span><br><span class="line">        <span class="keyword">elif</span> isinstance(param, ctypes.Array):</span><br><span class="line">            <span class="keyword">return</span> param</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">"Can't convert %s"</span> % typename)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从列表和元组转换</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">from_list</span><span class="params">(self, param)</span>:</span></span><br><span class="line">        val = ((ctypes.c_double) * len(param))(*param)</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line">    from_tuple = from_list</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从array.array对象转换</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">from_array</span><span class="params">(self, param)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> param.typecode != <span class="string">'d'</span>:</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">"must be an array of doubles"</span>)</span><br><span class="line">        ptr, _ = param.buffer_info()</span><br><span class="line">        <span class="keyword">return</span> ctypes.cast(ptr, ctypes.POINTER(ctypes.c_double))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从nump数组对象转换</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">from_ndarray</span><span class="params">(self, param)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> param.dtype.name != <span class="string">'float64'</span>:</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">"The dtype of array must be float64"</span>)</span><br><span class="line">        <span class="keyword">return</span> param.ctypes.data_as(ctypes.POINTER(ctypes.c_double))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DoubleArray = DoubleArrayType()</span><br><span class="line">_avg = _mod.avg</span><br><span class="line">_avg.argtypes = (DoubleArray, ctypes.c_int)</span><br><span class="line">_avg.restype = ctypes.c_double</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">avg</span><span class="params">(values)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> _avg(values, len(values))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># struct Point &#123;&#125;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span><span class="params">(ctypes.Structure)</span>:</span></span><br><span class="line">    _fields_ = [(<span class="string">'x'</span>, ctypes.c_double),</span><br><span class="line">                (<span class="string">'y'</span>, ctypes.c_double)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># double distance(Point *, Point *)</span></span><br><span class="line">distance = _mod.distance</span><br><span class="line">distance.argtypes = (ctypes.POINTER(Point), ctypes.POINTER(Point))</span><br><span class="line">distance.restype = ctypes.c_double</span><br></pre></td></tr></table></figure>
<p>如果一切正常，就可以加载并使用里面定义的C函数了：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sample</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample.gcd(<span class="number">35</span>, <span class="number">42</span>), sample.in_mandel(<span class="number">0</span>, <span class="number">0</span>, <span class="number">500</span>), sample.divide(<span class="number">42</span>, <span class="number">8</span>)</span><br></pre></td></tr></table></figure>
<pre><code>(7, True, (5, 2))</code></pre>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> array</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = list(range(<span class="number">100</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = array.array(<span class="string">'d'</span>, a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = np.array(a, dtype=np.double)  <span class="comment"># dtype需为int64</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample.avg(a), sample.avg(b), sample.avg(c)</span><br></pre></td></tr></table></figure>
<pre><code>(49.5, 49.5, 49.5)</code></pre>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p1 = sample.Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p2 = sample.Point(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sample.distance(p1, p2)</span><br></pre></td></tr></table></figure>
<pre><code>4.242640687119285</code></pre>
<p>测试下速度：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.random.rand(<span class="number">100</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>%timeit a.mean()</span><br></pre></td></tr></table></figure>
<pre><code>4.28 µs ± 20.7 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)</code></pre>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>%timeit sample.avg(a)</span><br></pre></td></tr></table></figure>
<pre><code>6.45 µs ± 72 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)</code></pre>
<p>可以看到，调用C函数的速度随比不上NumPy，但已经很快了！</p>
<h2 id="细节剖析">细节剖析</h2>
<h3 id="搜索路径">搜索路径</h3>
<p>用ctypes来调用自己编译的C程序，需要把共享库放在驱动模块可以找到的地方，上述例子中将共享库文件与所支撑的Python文件放在同一目录下：<code>sample.py</code>通过<code>__file__</code>获得当前目录，然后在相同目录下构建一个指向<code>libsample.so</code>的路径。</p>
<p>如果想将C程序共享库安装到别的地方，则需要调整路径。若C共享库已经作为标准库安装在机器上了，那么可以直接使用<code>ctypes.util.find_library()</code>函数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> ctypes.util <span class="keyword">import</span> find_library</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>find_library(<span class="string">'m'</span>)</span><br></pre></td></tr></table></figure>
<pre><code>&#39;libm.so.6&#39;</code></pre>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>find_library(<span class="string">'fftw3'</span>)</span><br></pre></td></tr></table></figure>
<pre><code>&#39;libfftw3.so.3&#39;</code></pre>
<p>一旦ctypes无法找到C共享库则无法工作。</p>
<p>知道C共享库的位置后，就可以使用<code>ctypes.cdll.LoadLibrary()</code>函数来加载。上述例子中，<code>_path</code> 为指向共享库的完整路径，用以下语句来加载：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_mod = ctypes.cdll.LoadLibraay(_path)</span><br></pre></td></tr></table></figure>
<h3 id="源码说明">源码说明</h3>
<p>C共享库加载完成后，我们还需要将Python的数据类型转换成C语言可以直接使用的参数类型。</p>
<p>对不同的C函数，需要不同的处理方案，这里将其分为三类。</p>
<h4 id="常规函数">常规函数</h4>
<p>这里的常规函数指的是像<code>int gcd(int, int);</code>和<code>bool in_mandel(double, double, int)</code>这样参数中不含指针，返回值单一的函数。我们摘录一段代码来看：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># int gcd(int, int)</span></span><br><span class="line">gcd = _mod.gcd</span><br><span class="line">gcd.argtypes = (ctypes.c_int, ctypes.c_int)</span><br><span class="line">gcd.restype = ctypes.c_int</span><br></pre></td></tr></table></figure>
<p>其中，<code>.argtypes</code> 属性为一个包含函数输入参数的元组，而<code>.restype</code>代表返回值类型。<code>ctypes</code>中定义了很多类型对象：<code>c_int</code>，<code>c_float</code>，<code>c_uint</code>等，用来表示常见的C数据类型。</p>
<p>用Python调用时，需要传递正确的参数类型并对数据作正确的转换，代码才能正常工作。 因此，类型签名的绑定至关重要。</p>
<p>对于常规C函数，只需要对数据类型作相应的转换就行。</p>
<h4 id="多返回值的函数">多返回值的函数</h4>
<p>由于C语言不支持返回多个值，此类需求通常以指针的形式实现。例子中的<code>int divide(int, int, int *);</code>函数便是这类函数。</p>
<p>对于这类函数，我们不能和常规函数一样处理：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> ctypes</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>_mod = ctypes.cdll.LoadLibrary(<span class="string">'./libsample.so'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>divide = _mod.divide</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>divide.argtypes = (ctypes.c_int, ctypes.c_int, ctypes.POINTER(ctypes.c_int))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>divide(<span class="number">10</span>, <span class="number">3</span>, x)</span><br></pre></td></tr></table></figure>
<pre><code>---------------------------------------------------------------------------

ArgumentError                             Traceback (most recent call last)

&lt;ipython-input-20-f3752d915faa&gt; in &lt;module&gt;()
      4 divide.argtypes = (ctypes.c_int, ctypes.c_int, ctypes.POINTER(ctypes.c_int))
      5 x = 0
----&gt; 6 divide(10, 3, x)


ArgumentError: argument 3: &lt;class &#39;TypeError&#39;&gt;: expected LP_c_int instance instead of int</code></pre>
<p>即使这样行的通，也违反了Python中整数不可变的原则，可能会导致整个进程卡死。</p>
<p>对于涉及指针的参数，必须构建一个兼容的<code>ctypes</code>对象才行</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = ctypes.c_int()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>divide(<span class="number">10</span>, <span class="number">3</span>, x)</span><br></pre></td></tr></table></figure>
<pre><code>3</code></pre>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.value</span><br></pre></td></tr></table></figure>
<pre><code>1</code></pre>
<p>这里，我们创建了一个<code>ctypes.c_int</code>对象，并把它作为指针对象传递给函数，与普通的Python整数不同，<code>ctypes.c_int</code>对象是可变的，可以根据需要通过<code>.value</code>属性来获取或者修改值。</p>
<p>对于那些不Pythonic的C函数调用，通常需要写一个包装函数。这里，<code>divide()</code>函数通过元组返回两个结果。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># int divide(int, int, int *)</span></span><br><span class="line">_divide = _mod.divide</span><br><span class="line">_divide.argtypes = (ctypes.c_int, ctypes.c_int, ctypes.POINTER(ctypes.c_int))</span><br><span class="line">_divide.restype = ctypes.c_int</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divide</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    rem = ctypes.c_int()</span><br><span class="line">    quot = _divide(x, y, rem)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> quot, rem.value</span><br></pre></td></tr></table></figure>
<h4 id="处理数组的函数">处理数组的函数</h4>
<p>对于<code>avg()</code>函数来说，C代码需要接收一个指针和一个表示数组长度的整型。从Python的角度来看，我们需要考虑以下问题：数组是什么？是列表还是元组？是<code>array</code>模块中的<code>array</code>对象还是<code>numpy</code>中的<code>ndarray</code>对象？ 实际上，Python中的数组有多种形式，我们这里就需要考虑这多种形式。</p>
<p><code>DoubleArrayType</code>类展示了如何处理这种情况。在这个类中，<code>from_param()</code>方法的作用就是接收一个单独的 参数并将其范围缩小为一个兼容的<code>ctypes</code>对象，在本例中就是指向<code>ctypes.c_double</code>的指针。在<code>from_param()</code>方法中，参数的类型名被提取出来并被分发给一个更具体的方法中，如果<code>typename</code>为列表，就调用<code>from_list()</code>方法。</p>
<p>对于列表和元组，<code>from_list()</code> 方法将其转换为一个 <code>ctypes</code> 的数组对象。</p>
<p>对于数组对象，<code>from_array()</code> 提取底层的内存指针并将其转换为一个 <code>ctypes</code> 指针对象。</p>
<p><code>from_ndarray()</code> 演示了对于 <code>numpy</code> 数组的转换操作。</p>
<p>这样，通过定义 <code>DoubleArrayType</code> 类并在 avg() 类型签名中使用它， 那么这个函数就能接受多个不同的类数组输入了。</p>
<h4 id="结构体">结构体</h4>
<p>对于C结构体，只需要定义一个类，在其中包含适当的字段和类型：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># struct Point &#123;&#125;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span><span class="params">(ctypes.Structure)</span>:</span></span><br><span class="line">    _fields_ = [(<span class="string">'x'</span>, ctypes.c_double),</span><br><span class="line">                (<span class="string">'y'</span>, ctypes.c_double)]</span><br></pre></td></tr></table></figure>
<p>类被定义后，你就可以在类型签名中或者是需要实例化结构体的代码中使用它。</p>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://chimera.labs.oreilly.com/books/1230000000393" target="_blank" rel="noopener">Python Cookbook</a></li>
<li><a href="https://docs.python.org/3/library/ctypes.html#module-ctypes" target="_blank" rel="noopener">ctypes</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Programming </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Madagascar之colormap]]></title>
      <url>https://whu-pzhang.github.io/mada-colormaps.html</url>
      <content type="html"><![CDATA[<p>平常作图时都会遇到如何选择colormap的问题。 而Madagascar文档也没有对各种colormap作系统的说明。</p>
<p>本文梳理了Madagascar中现有的各种colormap。</p>
<a id="more"></a>
<p>Madagascar中的配色方案在<code>sfgrey</code>和<code>sfgrey3</code>中由参数<code>color=</code>控制。 默认为灰阶的，参数为<code>color=i</code></p>
<h2 id="标准配色">标准配色</h2>
<p>Madagascar 中自带的配色方案如下表所示：</p>
<table>
<thead>
<tr class="header">
<th>配色</th>
<th>参数</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Rainbow</td>
<td><code>color=a</code></td>
</tr>
<tr class="even">
<td>Bone</td>
<td><code>color=b</code></td>
</tr>
<tr class="odd">
<td>Cool</td>
<td><code>color=c</code></td>
</tr>
<tr class="even">
<td>Blue-white-red</td>
<td><code>color=e</code></td>
</tr>
<tr class="odd">
<td>Flag</td>
<td><code>color=f</code></td>
</tr>
<tr class="even">
<td>Black-white-red</td>
<td><code>color=g</code></td>
</tr>
<tr class="odd">
<td>Hot</td>
<td><code>color=h</code></td>
</tr>
<tr class="even">
<td>Greyscale</td>
<td><code>color=i</code></td>
</tr>
<tr class="odd">
<td>Jet</td>
<td><code>color=j</code></td>
</tr>
<tr class="even">
<td>Linear</td>
<td><code>color=l</code></td>
</tr>
<tr class="odd">
<td>Pink</td>
<td><code>color=p</code></td>
</tr>
<tr class="even">
<td>Traffic</td>
<td><code>color=t</code></td>
</tr>
</tbody>
</table>
<p>效果图如下：</p>
<div class="figure">
<img src="http://opq72e2wz.bkt.clouddn.com/mona.jpg" alt="Different colorschemes">
<p class="caption">Different colorschemes</p>
</div>
<p>将小写改为大写就可以获得翻转的配色方案。</p>
<p>而配色方案中加入<code>C</code>可以高亮显示被裁剪的值。</p>
<h2 id="新加入的配色">新加入的配色</h2>
<p>除了上述基础配色，Madagascar中还有一些后续加入的配色方案。</p>
<h3 id="light-bartlein">Light Bartlein</h3>
<p>这种橙色，白色和紫色主导的配色提出在以下文章中：</p>
<p>Light, A. and P.J. Bartlein (2004) <a href="http://geog.uoregon.edu/datagraphics/EOS/" target="_blank" rel="noopener">The end of the rainbow? Color schemes for improved data graphics</a>. EOS Transactions of the American Geophysical Union 85(40):385</p>
<p><a href="https://mycarta.wordpress.com/2012/03/15/a-good-divergent-color-palette-for-matlab/" target="_blank" rel="noopener">Matteo Niccoli</a>推荐其作为红-白-蓝（Madagascar中<code>color=g</code>的配色）地震数据显示配色的替代品。</p>
<p>该配色在Madagascar中的参数为<code>color=lb</code>。</p>
<div class="figure">
<img src="http://opq72e2wz.bkt.clouddn.com/lb.jpg" alt="Light Bartlein">
<p class="caption">Light Bartlein</p>
</div>
<h3 id="cube-helix">Cube-helix</h3>
<p>这种配色被设计成根据其感知亮度单调增加，用黑白打印机打印时可以产生了很好的灰度。</p>
<p>该种配色在Madagascar中的参数为<code>color=x</code>。</p>
<div class="figure">
<img src="http://opq72e2wz.bkt.clouddn.com/x.jpg" alt="Cube-helix">
<p class="caption">Cube-helix</p>
</div>
<h3 id="其他配色">其他配色</h3>
<div class="figure">
<img src="http://opq72e2wz.bkt.clouddn.com/colorbars.jpg" alt="Other color schemes">
<p class="caption">Other color schemes</p>
</div>
<h2 id="自定义配色">自定义配色</h2>
<p>目前够用，先不折腾了！</p>
<p>只知道自定义配色方案要用csv格式！</p>
<p>可以参考<code>rsf/tutorials/colormaps</code></p>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://ahay.org/blog/2005/03/28/color-schemes/" target="_blank" rel="noopener">Color schemes</a></li>
<li><a href="http://wiki.seg.org/wiki/How_to_evaluate_and_compare_color_maps" target="_blank" rel="noopener">How to evaluate and compare color maps</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Exploration Seismology </category>
            
        </categories>
        
        
        <tags>
            
            <tag> madagascar </tag>
            
            <tag> colormap </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[添加程序到Madagascar中]]></title>
      <url>https://whu-pzhang.github.io/2016-11-03-add-new-program-to-madagascar.html</url>
      <content type="html"><![CDATA[<p>有时候自己利用Madagascar编写了一些数据处理的程序，每次调用都需要将源码放到需要用的目 录重新编译，然后再在SConstruct中调用,类似这样：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prog = Program(<span class="string">'Mcode.c'</span>)</span><br><span class="line">exe = str(prog[<span class="number">0</span>])</span><br><span class="line"><span class="comment"># proj = Project()</span></span><br><span class="line"><span class="comment"># prog = proj.Program('Mcode.c')</span></span><br><span class="line">Flow(<span class="string">'out'</span>, [<span class="string">'inp1'</span>, <span class="string">'inp2'</span>, exe],</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    $&#123;SOURCES[2].abspath&#125; inp2=$&#123;SOURCES[1]&#125;</span></span><br><span class="line"><span class="string">    '''</span>)</span><br></pre></td></tr></table></figure>
<p>若是只在一个project中用到倒还好，但若是比较通用的程序，在不同的文件夹中都要这么来调 用的话未免太麻烦。而将我们的代码直接加入Mada中，就可以直接调用。不用将源码拷来拷去还 要编译了。当然了，加入Mada的程序一般是我们的最终版本，测试的程序还是就放在测试目录中 比较好。</p>
<p>本文介绍怎么样将自己的程序加入到Madagascar中。</p>
<a id="more"></a>
<h2 id="怎么样添加程序">怎么样添加程序</h2>
<p>添加程序简单的说，就以下两步：</p>
<ul>
<li>在 <code>$RSFROOT/user</code> 目录下创建属于你自己的文件夹，通常以自己的名字命名，作为程序源 码文件夹，例如我的 <code>pzhang</code></li>
<li>将自己的源码放入该目录</li>
<li>创建<code>SConstruct</code>文件进行编译</li>
<li>在<code>$RSFROOT</code> 目录下执行 <code>scons install</code></li>
</ul>
<h2 id="一些规范">一些规范</h2>
<ol style="list-style-type: decimal">
<li>主程序文件名必须以<code>M</code>开始，例如：<code>Mprog.c</code>或者<code>Mprog.py</code>。而且文件开始 最好加上对程序进行简短描述的注释。</li>
<li>函数命名用小写字母开始。</li>
<li>头文件<code>myprog.h</code>是根据<code>myprog.c</code>自动生成的。这里的规范有：
<ul>
<li>对要加入头文件中的block，在其下方紧接着添加<code>/*^*/</code> 注释</li>
<li>对于函数，在函数定义下添加 <code>/*&lt; function description &gt;*/</code> 注释</li>
</ul></li>
</ol>
<h2 id="怎样添加注释">怎样添加注释</h2>
<p>描述程序的注释</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Short description line</span></span><br><span class="line"><span class="comment">Comments here blablabla lorem ipsum dolores sit amet...</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">You can use several paragraphs for comments, no problem.*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Copyright notice */</span></span><br></pre></td></tr></table></figure>
<p>参数注释：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!sf_getbool(<span class="string">"su"</span>,&amp;su)) su=<span class="literal">false</span>;</span><br><span class="line"><span class="comment">/* y if input is SU, n if input is SEGY */</span></span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<ul>
<li><a href="http://www.ahay.org/wiki/Adding_new_programs_to_Madagascar" target="_blank" rel="noopener">Adding programs</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Exploration Seismology </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Madagascar </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux下安装SEPlib]]></title>
      <url>https://whu-pzhang.github.io/install-SEPlib-under-linux.html</url>
      <content type="html"><![CDATA[<p><a href="http://sepwww.stanford.edu/doku.php?id=sep:software:seplib" target="_blank" rel="noopener">SEPlib</a> 是由 Stanford Exploration Project 开发并维护的地震勘探开源软件包。</p>
<a id="more"></a>
<h2 id="依赖">依赖</h2>
<ul>
<li>intel Fortran complier</li>
<li>flex</li>
<li>fftw3</li>
<li>lesstif (or openmotif)</li>
<li>netpbm (for vplot)</li>
</ul>
<p>安装依赖包::</p>
<pre><code>$ sudo yum install fftw3 fftw3-devel
$ sudo yum install flex flex-devel
$ sudo yum install lesstif lesstif-devel
$ sudo yum install netpbm netpbm-devel netpbm-progs</code></pre>
<h2 id="编译安装">编译安装</h2>
<p>SEPlib 安装需要配置，可以在 <code>seplib-6.5.3/docs/config_examples</code> 目录下找到一些 配置文件的例子参考。</p>
<p>我选择的是将以下内容保存为脚本 <code>run_config.sh</code> 来进行配置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># COMPILE SCRIPT FOR INTEL</span></span><br><span class="line"><span class="built_in">export</span> FC=<span class="string">"ifort -O3"</span></span><br><span class="line"><span class="built_in">export</span> FFTW_FCLD=<span class="string">"-L/usr/lib64 -lfftw3f"</span></span><br><span class="line"><span class="comment"># MPI支持目前报错，暂时先注释掉</span></span><br><span class="line"><span class="comment">#export MPI_FLAGS="-I/usr/include/mpich-x86_64/"</span></span><br><span class="line"><span class="comment">#export MPI_FCLD="-L/usr/lib64/mpich/lib -lmpichf90 -lfmpich -lmpich"</span></span><br><span class="line"><span class="built_in">export</span> PERL=<span class="string">"/usr/bin/perl"</span></span><br><span class="line"><span class="built_in">export</span> PPM_INC=<span class="string">"-I/usr/include/netpbm"</span></span><br><span class="line"><span class="built_in">export</span> PPM_LD=<span class="string">"-L/usr/lib64 -lnetpbm"</span></span><br><span class="line"></span><br><span class="line">./configure --prefix=/opt/seplib --with-local --with-su=/opt/cwp --with-fftw</span><br></pre></td></tr></table></figure>
<h2 id="debug">Debug</h2>
<p>然后在终端里输入</p>
<pre><code>$ bash run_config.sh
$ gmake</code></pre>
<p>这时会报错，</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">super_chain_mod.f90(<span class="number">79</span>): error #<span class="number">7061</span>: The characteristics of dummy argument <span class="number">1</span> of the <span class="built_in">associated</span> actual <span class="keyword">procedure</span> differ from the characteristics of dummy argument <span class="number">1</span> of the dummy <span class="keyword">procedure</span>.   [FLAT_CHAIN_ADJ_EXEC]</span><br><span class="line"><span class="keyword">call</span> chain20( flat_chain_adj_exec,flat_chain_exec,adj, add, model, <span class="keyword">data</span>,temp2)</span><br><span class="line">------------------^</span><br></pre></td></tr></table></figure>
<p>经过Google后发现是由于在调用 <code>chain20</code> 这个函数时，传入的函数类型和声明的不匹配。</p>
<p>我们需要修改 <code>seplib-6.5.3/seplib_base/lib/seis/dip/super_chain_mod.f90</code> 文件。</p>
<p>修改第50行，将</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">logical</span>       :: adj, add,adj_new</span><br></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">logical</span>,<span class="keyword">intent</span>(<span class="keyword">in</span>)  :: adj, add</span><br><span class="line"><span class="keyword">logical</span>             :: adj_new</span><br></pre></td></tr></table></figure>
<p>其他出错的地方作类型的修改，分别位于第28，114以及141行处。总共需要修改5处！</p>
<p>除了该处错误，在编译 <code>RickMoive</code> 和 <code>Ricksep</code> 这两个包时，也会报错。这是由于没有 链接一些库文件导致的，需要进到相关目录中修改 <code>Makefile</code> 。</p>
<p>进入 <code>interact/RickMoive</code> 目录下，将<code>Makefile</code>中125行的 <code>LIBS</code>加上缺失的库:</p>
<pre><code>LIBS =  -L/usr/lib64 -lXm   -L/usr/lib64 -L/usr/lib64 -lXt -lX11</code></pre>
<p>对于 <code>interact/Ricksep/Makefile</code> 同样按上修改保存。 然后接着编译。</p>
<h2 id="安装">安装</h2>
<p>编译全部通过之后，::</p>
<pre><code>$ make install</code></pre>
<p>然后添加环境变量即可</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> SEPROOT=/opt/seplib</span><br><span class="line"><span class="built_in">export</span> SEPINC=<span class="variable">$&#123;SEPROOT&#125;</span>/include</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;SEPROOT&#125;</span>/bin</span><br><span class="line"><span class="built_in">export</span> DATAPATH=/var/tmp/</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$PYTHONPATH</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">export</span> PYTHONPATH=<span class="variable">$&#123;PYTHONPATH&#125;</span>:<span class="variable">$SEPROOT</span>/lib/python</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">export</span> PYTHONPATH=<span class="variable">$SEPROOT</span>/lib/python</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h2 id="测试">测试</h2>
<p>安装完成后，在终端输入::</p>
<pre><code>$ Spike n1=1000 k1=300 title=&quot;\s200 Welcome to \c2 SEP\c5 lib&quot; \
    | Bandpass fhi=2. phase=1 | Wiggle | Tube</code></pre>
<p>出现如下图形即安装成功：</p>
<div class="figure">
<img src="/images/2016041800.png">

</div>
<h2 id="参考">参考</h2>
<ul>
<li>https://software.intel.com/en-us/forums/intel-fortran-compiler-for-linux-and-mac-os-x/topic/472080</li>
<li>http://www.linuxidc.com/Linux/2010-01/23959.htm</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Exploration Seismology </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> SEPlib </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python科学计算环境Anaconda]]></title>
      <url>https://whu-pzhang.github.io/python-anaconda.html</url>
      <content type="html"><![CDATA[<p>本文记录Python科学计算发行版Anaconda的介绍，安装以及后续的一些应用。</p>
<h2 id="anaconda-特性">Anaconda 特性</h2>
<p>主页： https://www.continuum.io/</p>
<ul>
<li>包含了众多流行的科学、教学、工程和数据分析的Python包</li>
<li>完全开源、免费</li>
<li>对于学术用途可以申请免费的加速 icense</li>
<li>全平台支持： Linux、Windows、Mac</li>
<li>支持Python2.6、2.7、3.4、3.5</li>
</ul>
<a id="more"></a>
<h2 id="安装">安装</h2>
<h3 id="安装pyenv">安装pyenv</h3>
<p>利用 <a href="https://github.com/yyuu/pyenv" target="_blank" rel="noopener">pyenv</a> 来对多个版本的python进行管理。</p>
<p>首先安装好pyenv。具体见 <a href="/python-pyenv.html">Python多版本共存之pyenv</a></p>
<h3 id="安装anaconda">安装Anaconda</h3>
<p>pyenv支持很多版本的anaconda</p>
<p>python2.7</p>
<pre><code>$ pyenv install anaconda-2.0.1 -v</code></pre>
<p>或者python3</p>
<pre><code>$ pyenv install anaconda3-2.5.1 -v</code></pre>
<h3 id="申请免费的学术license">申请免费的学术License</h3>
<p>对于由教育邮箱的学生或者教职工，可以申请免费的学术License，实现计算过程的加速。</p>
<p>申请地址：https://www.continuum.io/anaconda-academic-subscriptions-available</p>
<p>注册一个帐号，然后在 My settings–&gt;Add ons里就可以找到额外的加速License了， 下载下来后是几个txt后缀的文本，将其移动到 <code>$HOME/.continuum</code> 目录下 （若不存在该目录，则新建一个）</p>
<p>这些额外的包包括：</p>
<ul>
<li><p>MKL Optimizations</p>
Boost the speed of NumPy, SciPy, NumExpr, and scikit-learn through Intel’s Math Kernel Library (MKL)</li>
<li><p>IOPro</p>
Fast, memory-efficient Python interface for databases, NoSQL stores, Amazon S3, and large data files.</li>
<li><p>Anaconda Accelerate</p>
<p>Fast Python for GPUs and multi-core with NumbaPro and MKL Optimizations.</p></li>
</ul>
<h3 id="安装额外加速包">安装额外加速包</h3>
<pre><code>$ conda update conda
$ conda install accelerate
$ conda update numbapro
$ conda install iopro</code></pre>
<h2 id="模块管理">模块管理</h2>
<p>Anaconda自带了conda用于模块的管理。</p>
<pre><code># 安装模块
$ conda install scipy
# 更新模块
$ conda update scipy
# 更新所有模块
$ conda update --all</code></pre>
<p>也可以利用conda来对Anaconda进行升级</p>
<pre><code>$ conda update anaconda</code></pre>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="https://docs.continuum.io/advanced-installation" target="_blank" rel="noopener">ADVANCED INSTALL INSTRUCTIONS</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Programming </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在C程序中读写SU格式文件]]></title>
      <url>https://whu-pzhang.github.io/read-and-write-SU-in-c-program.html</url>
      <content type="html"><![CDATA[<h2 id="序言">序言</h2>
<p>Seismic_Unix是处理勘探地震数据的好工具，SU文件格式是其内部的默认格式，有时候需要自己在程序 中读写SU文件。本文介绍如何在C程序中读写SU格式文件。</p>
<h2 id="子函数库">子函数库</h2>
<p>Seismic_Unix程序自带有子函数库，但是我没有找到相关的程序源码。。。。</p>
<p>但是其中自带的 <code>segy.h</code> 头文件可以帮助我们了解SU文件的道头格式，而且可以利用该头文件 来对SU格式的文件进行读写。</p>
<p>关于SU文件格式可以参考<a href="/SU-and-Segy-format.html">SU/SEGY文件格式</a> 一文。</p>
<a id="more"></a>
<p>在 <code>segy.h</code> 中定义了名为 <code>segy</code> 的结构体，其包含了SU格式的所有道头变量。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* Copyright (c) Colorado School of Mines, 2011.*/</span></span><br><span class="line"><span class="comment">/* All rights reserved.                       */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* segy.h - include file for SEGY traces</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * declarations for:</span></span><br><span class="line"><span class="comment"> *	typedef struct &#123;&#125; segy - the trace identification header</span></span><br><span class="line"><span class="comment"> *	typedef struct &#123;&#125; bhed - binary header</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *	If header words are added, run the makefile in this directory</span></span><br><span class="line"><span class="comment"> *	to recreate hdr.h.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Reference:</span></span><br><span class="line"><span class="comment"> *	K. M. Barry, D. A. Cavers and C. W. Kneale, "Special Report:</span></span><br><span class="line"><span class="comment"> *		Recommended Standards for Digital Tape Formats",</span></span><br><span class="line"><span class="comment"> *		Geophysics, vol. 40, no. 2 (April 1975), P. 344-352.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * $Author: john $</span></span><br><span class="line"><span class="comment"> * $Source: /usr/local/cwp/src/su/include/RCS/segy.h,v $</span></span><br><span class="line"><span class="comment"> * $Revision: 1.33 $ ; $Date: 2011/11/11 23:56:14 $</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"par.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> SEGY_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEGY_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRCBYTES		240</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SU_NFLTS	32767	<span class="comment">/* Arbitrary limit on data array size	*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* TYPEDEFS */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span>	<span class="comment">/* segy - trace identification header */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> tracl;	<span class="comment">/* Trace sequence number within line</span></span><br><span class="line"><span class="comment">			   --numbers continue to increase if the</span></span><br><span class="line"><span class="comment">			   same line continues across multiple</span></span><br><span class="line"><span class="comment">			   SEG Y files.</span></span><br><span class="line"><span class="comment">			   byte# 1-4</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> tracr;	<span class="comment">/* Trace sequence number within SEG Y file</span></span><br><span class="line"><span class="comment">			   ---each file starts with trace sequence</span></span><br><span class="line"><span class="comment">			   one</span></span><br><span class="line"><span class="comment">			   byte# 5-8</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> fldr;	<span class="comment">/* Original field record number</span></span><br><span class="line"><span class="comment">			   byte# 9-12</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> tracf;	<span class="comment">/* Trace number within original field record</span></span><br><span class="line"><span class="comment">			   byte# 13-16</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> ep;		<span class="comment">/* energy source point number</span></span><br><span class="line"><span class="comment">			   ---Used when more than one record occurs</span></span><br><span class="line"><span class="comment">			   at the same effective surface location.</span></span><br><span class="line"><span class="comment">			   byte# 17-20</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> cdp;	<span class="comment">/* Ensemble number (i.e. CDP, CMP, CRP,...)</span></span><br><span class="line"><span class="comment">			   byte# 21-24</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> cdpt;	<span class="comment">/* trace number within the ensemble</span></span><br><span class="line"><span class="comment">			   ---each ensemble starts with trace number one.</span></span><br><span class="line"><span class="comment">			   byte# 25-28</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> trid;	<span class="comment">/* trace identification code:</span></span><br><span class="line"><span class="comment">			-1 = Other</span></span><br><span class="line"><span class="comment">		         0 = Unknown</span></span><br><span class="line"><span class="comment">			 1 = Seismic data</span></span><br><span class="line"><span class="comment">			 2 = Dead</span></span><br><span class="line"><span class="comment">			 3 = Dummy</span></span><br><span class="line"><span class="comment">			 4 = Time break</span></span><br><span class="line"><span class="comment">			 5 = Uphole</span></span><br><span class="line"><span class="comment">			 6 = Sweep</span></span><br><span class="line"><span class="comment">			 7 = Timing</span></span><br><span class="line"><span class="comment">			 8 = Water break</span></span><br><span class="line"><span class="comment">			 9 = Near-field gun signature</span></span><br><span class="line"><span class="comment">			10 = Far-field gun signature</span></span><br><span class="line"><span class="comment">			11 = Seismic pressure sensor</span></span><br><span class="line"><span class="comment">			12 = Multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">				- Vertical component</span></span><br><span class="line"><span class="comment">			13 = Multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">				- Cross-line component</span></span><br><span class="line"><span class="comment">			14 = Multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">				- in-line component</span></span><br><span class="line"><span class="comment">			15 = Rotated multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">				- Vertical component</span></span><br><span class="line"><span class="comment">			16 = Rotated multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">				- Transverse component</span></span><br><span class="line"><span class="comment">			17 = Rotated multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">				- Radial component</span></span><br><span class="line"><span class="comment">			18 = Vibrator reaction mass</span></span><br><span class="line"><span class="comment">			19 = Vibrator baseplate</span></span><br><span class="line"><span class="comment">			20 = Vibrator estimated ground force</span></span><br><span class="line"><span class="comment">			21 = Vibrator reference</span></span><br><span class="line"><span class="comment">			22 = Time-velocity pairs</span></span><br><span class="line"><span class="comment">			23 ... N = optional use</span></span><br><span class="line"><span class="comment">				(maximum N = 32,767)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">			Following are CWP id flags:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">			109 = autocorrelation</span></span><br><span class="line"><span class="comment">			110 = Fourier transformed - no packing</span></span><br><span class="line"><span class="comment">			     xr[0],xi[0], ..., xr[N-1],xi[N-1]</span></span><br><span class="line"><span class="comment">			111 = Fourier transformed - unpacked Nyquist</span></span><br><span class="line"><span class="comment">			     xr[0],xi[0],...,xr[N/2],xi[N/2]</span></span><br><span class="line"><span class="comment">			112 = Fourier transformed - packed Nyquist</span></span><br><span class="line"><span class="comment">	 		     even N:</span></span><br><span class="line"><span class="comment">			     xr[0],xr[N/2],xr[1],xi[1], ...,</span></span><br><span class="line"><span class="comment">				xr[N/2 -1],xi[N/2 -1]</span></span><br><span class="line"><span class="comment">				(note the exceptional second entry)</span></span><br><span class="line"><span class="comment">			     odd N:</span></span><br><span class="line"><span class="comment">			     xr[0],xr[(N-1)/2],xr[1],xi[1], ...,</span></span><br><span class="line"><span class="comment">				xr[(N-1)/2 -1],xi[(N-1)/2 -1],xi[(N-1)/2]</span></span><br><span class="line"><span class="comment">				(note the exceptional second &amp; last entries)</span></span><br><span class="line"><span class="comment">			113 = Complex signal in the time domain</span></span><br><span class="line"><span class="comment">			     xr[0],xi[0], ..., xr[N-1],xi[N-1]</span></span><br><span class="line"><span class="comment">			114 = Fourier transformed - amplitude/phase</span></span><br><span class="line"><span class="comment">			     a[0],p[0], ..., a[N-1],p[N-1]</span></span><br><span class="line"><span class="comment">			115 = Complex time signal - amplitude/phase</span></span><br><span class="line"><span class="comment">			     a[0],p[0], ..., a[N-1],p[N-1]</span></span><br><span class="line"><span class="comment">			116 = Real part of complex trace from 0 to Nyquist</span></span><br><span class="line"><span class="comment">			117 = Imag part of complex trace from 0 to Nyquist</span></span><br><span class="line"><span class="comment">			118 = Amplitude of complex trace from 0 to Nyquist</span></span><br><span class="line"><span class="comment">			119 = Phase of complex trace from 0 to Nyquist</span></span><br><span class="line"><span class="comment">			121 = Wavenumber time domain (k-t)</span></span><br><span class="line"><span class="comment">			122 = Wavenumber frequency (k-omega)</span></span><br><span class="line"><span class="comment">			123 = Envelope of the complex time trace</span></span><br><span class="line"><span class="comment">			124 = Phase of the complex time trace</span></span><br><span class="line"><span class="comment">			125 = Frequency of the complex time trace</span></span><br><span class="line"><span class="comment">			130 = Depth-Range (z-x) traces</span></span><br><span class="line"><span class="comment">			201 = Seismic data packed to bytes (by supack1)</span></span><br><span class="line"><span class="comment">			202 = Seismic data packed to 2 bytes (by supack2)</span></span><br><span class="line"><span class="comment">			   byte# 29-30</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> nvs;	<span class="comment">/* Number of vertically summed traces yielding</span></span><br><span class="line"><span class="comment">			   this trace. (1 is one trace,</span></span><br><span class="line"><span class="comment">			   2 is two summed traces, etc.)</span></span><br><span class="line"><span class="comment">			   byte# 31-32</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> nhs;	<span class="comment">/* Number of horizontally summed traces yielding</span></span><br><span class="line"><span class="comment">			   this trace. (1 is one trace</span></span><br><span class="line"><span class="comment">			   2 is two summed traces, etc.)</span></span><br><span class="line"><span class="comment">			   byte# 33-34</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> duse;	<span class="comment">/* Data use:</span></span><br><span class="line"><span class="comment">				1 = Production</span></span><br><span class="line"><span class="comment">				2 = Test</span></span><br><span class="line"><span class="comment">			   byte# 35-36</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> offset;	<span class="comment">/* Distance from the center of the source point</span></span><br><span class="line"><span class="comment">			   to the center of the receiver group</span></span><br><span class="line"><span class="comment">			   (negative if opposite to direction in which</span></span><br><span class="line"><span class="comment">			   the line was shot).</span></span><br><span class="line"><span class="comment">			   byte# 37-40</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> gelev;	<span class="comment">/* Receiver group elevation from sea level</span></span><br><span class="line"><span class="comment">			   (all elevations above the Vertical datum are</span></span><br><span class="line"><span class="comment">			   positive and below are negative).</span></span><br><span class="line"><span class="comment">			   byte# 41-44</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> selev;	<span class="comment">/* Surface elevation at source.</span></span><br><span class="line"><span class="comment">			   byte# 45-48</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> sdepth;	<span class="comment">/* Source depth below surface (a positive number).</span></span><br><span class="line"><span class="comment">			   byte# 49-52</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> gdel;	<span class="comment">/* Datum elevation at receiver group.</span></span><br><span class="line"><span class="comment">			   byte# 53-56</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> sdel;	<span class="comment">/* Datum elevation at source.</span></span><br><span class="line"><span class="comment">			   byte# 57-60</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> swdep;	<span class="comment">/* Water depth at source.</span></span><br><span class="line"><span class="comment">			   byte# 61-64</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> gwdep;	<span class="comment">/* Water depth at receiver group.</span></span><br><span class="line"><span class="comment">			   byte# 65-68</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> scalel;	<span class="comment">/* Scalar to be applied to the previous 7 entries</span></span><br><span class="line"><span class="comment">			   to give the real value.</span></span><br><span class="line"><span class="comment">			   Scalar = 1, +10, +100, +1000, +10000.</span></span><br><span class="line"><span class="comment">			   If positive, scalar is used as a multiplier,</span></span><br><span class="line"><span class="comment">			   if negative, scalar is used as a divisor.</span></span><br><span class="line"><span class="comment">			   byte# 69-70</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> scalco;	<span class="comment">/* Scalar to be applied to the next 4 entries</span></span><br><span class="line"><span class="comment">			   to give the real value.</span></span><br><span class="line"><span class="comment">			   Scalar = 1, +10, +100, +1000, +10000.</span></span><br><span class="line"><span class="comment">			   If positive, scalar is used as a multiplier,</span></span><br><span class="line"><span class="comment">			   if negative, scalar is used as a divisor.</span></span><br><span class="line"><span class="comment">			   byte# 71-72</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span>  sx;	<span class="comment">/* Source coordinate - X</span></span><br><span class="line"><span class="comment">			   byte# 73-76</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span>  sy;	<span class="comment">/* Source coordinate - Y</span></span><br><span class="line"><span class="comment">			   byte# 77-80</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span>  gx;	<span class="comment">/* Group coordinate - X</span></span><br><span class="line"><span class="comment">			   byte# 81-84</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span>  gy;	<span class="comment">/* Group coordinate - Y</span></span><br><span class="line"><span class="comment">			   byte# 85-88</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> counit;	<span class="comment">/* Coordinate units: (for previous 4 entries and</span></span><br><span class="line"><span class="comment">				for the 7 entries before scalel)</span></span><br><span class="line"><span class="comment">			   1 = Length (meters or feet)</span></span><br><span class="line"><span class="comment">			   2 = Seconds of arc</span></span><br><span class="line"><span class="comment">			   3 = Decimal degrees</span></span><br><span class="line"><span class="comment">			   4 = Degrees, minutes, seconds (DMS)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">			In case 2, the X values are longitude and</span></span><br><span class="line"><span class="comment">			the Y values are latitude, a positive value designates</span></span><br><span class="line"><span class="comment">			the number of seconds east of Greenwich</span></span><br><span class="line"><span class="comment">				or north of the equator</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">			In case 4, to encode +-DDDMMSS</span></span><br><span class="line"><span class="comment">			counit = +-DDD*10^4 + MM*10^2 + SS,</span></span><br><span class="line"><span class="comment">			with scalco = 1. To encode +-DDDMMSS.ss</span></span><br><span class="line"><span class="comment">			counit = +-DDD*10^6 + MM*10^4 + SS*10^2</span></span><br><span class="line"><span class="comment">			with scalco = -100.</span></span><br><span class="line"><span class="comment">			   byte# 89-90</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> wevel;	<span class="comment">/* Weathering velocity.</span></span><br><span class="line"><span class="comment">			   byte# 91-92</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> swevel;	<span class="comment">/* Subweathering velocity.</span></span><br><span class="line"><span class="comment">			   byte# 93-94</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> sut;	<span class="comment">/* Uphole time at source in milliseconds.</span></span><br><span class="line"><span class="comment">			   byte# 95-96</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> gut;	<span class="comment">/* Uphole time at receiver group in milliseconds.</span></span><br><span class="line"><span class="comment">			   byte# 97-98</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> sstat;	<span class="comment">/* Source static correction in milliseconds.</span></span><br><span class="line"><span class="comment">			   byte# 99-100</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> gstat;	<span class="comment">/* Group static correction  in milliseconds.</span></span><br><span class="line"><span class="comment">			   byte# 101-102</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> tstat;	<span class="comment">/* Total static applied  in milliseconds.</span></span><br><span class="line"><span class="comment">			   (Zero if no static has been applied.)</span></span><br><span class="line"><span class="comment">			   byte# 103-104</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> laga;	<span class="comment">/* Lag time A, time in ms between end of 240-</span></span><br><span class="line"><span class="comment">			   byte trace identification header and time</span></span><br><span class="line"><span class="comment">			   break, positive if time break occurs after</span></span><br><span class="line"><span class="comment">			   end of header, time break is defined as</span></span><br><span class="line"><span class="comment">			   the initiation pulse which maybe recorded</span></span><br><span class="line"><span class="comment">			   on an auxiliary trace or as otherwise</span></span><br><span class="line"><span class="comment">			   specified by the recording system</span></span><br><span class="line"><span class="comment">			   byte# 105-106</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> lagb;	<span class="comment">/* lag time B, time in ms between the time break</span></span><br><span class="line"><span class="comment">			   and the initiation time of the energy source,</span></span><br><span class="line"><span class="comment">			   may be positive or negative</span></span><br><span class="line"><span class="comment">			   byte# 107-108</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> delrt;	<span class="comment">/* delay recording time, time in ms between</span></span><br><span class="line"><span class="comment">			   initiation time of energy source and time</span></span><br><span class="line"><span class="comment">			   when recording of data samples begins</span></span><br><span class="line"><span class="comment">			   (for deep water work if recording does not</span></span><br><span class="line"><span class="comment">			   start at zero time)</span></span><br><span class="line"><span class="comment">			   byte# 109-110</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> muts;	<span class="comment">/* mute time--start</span></span><br><span class="line"><span class="comment">			   byte# 111-112</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> mute;	<span class="comment">/* mute time--end</span></span><br><span class="line"><span class="comment">			   byte# 113-114</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> ns;	<span class="comment">/* number of samples in this trace</span></span><br><span class="line"><span class="comment">			   byte# 115-116</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> dt;	<span class="comment">/* sample interval; in micro-seconds</span></span><br><span class="line"><span class="comment">			   byte# 117-118</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> gain;	<span class="comment">/* gain type of field instruments code:</span></span><br><span class="line"><span class="comment">				1 = fixed</span></span><br><span class="line"><span class="comment">				2 = binary</span></span><br><span class="line"><span class="comment">				3 = floating point</span></span><br><span class="line"><span class="comment">				4 ---- N = optional use</span></span><br><span class="line"><span class="comment">			   byte# 119-120</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> igc;	<span class="comment">/* instrument gain constant</span></span><br><span class="line"><span class="comment">			   byte# 121-122</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> igi;	<span class="comment">/* instrument early or initial gain</span></span><br><span class="line"><span class="comment">			   byte# 123-124</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> corr;	<span class="comment">/* correlated:</span></span><br><span class="line"><span class="comment">				1 = no</span></span><br><span class="line"><span class="comment">				2 = yes</span></span><br><span class="line"><span class="comment">			   byte# 125-126</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> sfs;	<span class="comment">/* sweep frequency at start</span></span><br><span class="line"><span class="comment">			   byte# 127-128</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> sfe;	<span class="comment">/* sweep frequency at end</span></span><br><span class="line"><span class="comment">			   byte# 129-130</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> slen;	<span class="comment">/* sweep length in ms</span></span><br><span class="line"><span class="comment">			   byte# 131-132</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> styp;	<span class="comment">/* sweep type code:</span></span><br><span class="line"><span class="comment">				1 = linear</span></span><br><span class="line"><span class="comment">				2 = cos-squared</span></span><br><span class="line"><span class="comment">				3 = other</span></span><br><span class="line"><span class="comment">			   byte# 133-134</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> stas;	<span class="comment">/* sweep trace length at start in ms</span></span><br><span class="line"><span class="comment">			   byte# 135-136</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> stae;	<span class="comment">/* sweep trace length at end in ms</span></span><br><span class="line"><span class="comment">			   byte# 137-138</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> tatyp;	<span class="comment">/* taper type: 1=linear, 2=cos^2, 3=other</span></span><br><span class="line"><span class="comment">			   byte# 139-140</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> afilf;	<span class="comment">/* alias filter frequency if used</span></span><br><span class="line"><span class="comment">			   byte# 141-142</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> afils;	<span class="comment">/* alias filter slope</span></span><br><span class="line"><span class="comment">			   byte# 143-144</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> nofilf;	<span class="comment">/* notch filter frequency if used</span></span><br><span class="line"><span class="comment">			   byte# 145-146</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> nofils;	<span class="comment">/* notch filter slope</span></span><br><span class="line"><span class="comment">			   byte# 147-148</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> lcf;	<span class="comment">/* low cut frequency if used</span></span><br><span class="line"><span class="comment">			   byte# 149-150</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hcf;	<span class="comment">/* high cut frequncy if used</span></span><br><span class="line"><span class="comment">			   byte# 151-152</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> lcs;	<span class="comment">/* low cut slope</span></span><br><span class="line"><span class="comment">			   byte# 153-154</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hcs;	<span class="comment">/* high cut slope</span></span><br><span class="line"><span class="comment">			   byte# 155-156</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> year;	<span class="comment">/* year data recorded</span></span><br><span class="line"><span class="comment">			   byte# 157-158</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> day;	<span class="comment">/* day of year</span></span><br><span class="line"><span class="comment">			   byte# 159-160</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hour;	<span class="comment">/* hour of day (24 hour clock)</span></span><br><span class="line"><span class="comment">			   byte# 161-162</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> minute;	<span class="comment">/* minute of hour</span></span><br><span class="line"><span class="comment">			   byte# 163-164</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> sec;	<span class="comment">/* second of minute</span></span><br><span class="line"><span class="comment">			   byte# 165-166</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> timbas;	<span class="comment">/* time basis code:</span></span><br><span class="line"><span class="comment">				1 = local</span></span><br><span class="line"><span class="comment">				2 = GMT</span></span><br><span class="line"><span class="comment">				3 = other</span></span><br><span class="line"><span class="comment">			   byte# 167-168</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> trwf;	<span class="comment">/* trace weighting factor, defined as 1/2^N</span></span><br><span class="line"><span class="comment">			   volts for the least sigificant bit</span></span><br><span class="line"><span class="comment">			   byte# 169-170</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> grnors;	<span class="comment">/* geophone group number of roll switch</span></span><br><span class="line"><span class="comment">			   position one</span></span><br><span class="line"><span class="comment">			   byte# 171-172</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> grnofr;	<span class="comment">/* geophone group number of trace one within</span></span><br><span class="line"><span class="comment">			   original field record</span></span><br><span class="line"><span class="comment">			   byte# 173-174</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> grnlof;	<span class="comment">/* geophone group number of last trace within</span></span><br><span class="line"><span class="comment">			   original field record</span></span><br><span class="line"><span class="comment">			   byte# 175-176</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> gaps;	<span class="comment">/* gap size (total number of groups dropped)</span></span><br><span class="line"><span class="comment">			   byte# 177-178</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> otrav;	<span class="comment">/* overtravel taper code:</span></span><br><span class="line"><span class="comment">				1 = down (or behind)</span></span><br><span class="line"><span class="comment">				2 = up (or ahead)</span></span><br><span class="line"><span class="comment">			   byte# 179-180</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SLTSU_SEGY_H  <span class="comment">/* begin Unocal SU segy.h differences */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/* cwp local assignments */</span></span><br><span class="line">	<span class="keyword">float</span> d1;	<span class="comment">/* sample spacing for non-seismic data</span></span><br><span class="line"><span class="comment">			   byte# 181-184</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> f1;	<span class="comment">/* first sample location for non-seismic data</span></span><br><span class="line"><span class="comment">			   byte# 185-188</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> d2;	<span class="comment">/* sample spacing between traces</span></span><br><span class="line"><span class="comment">			   byte# 189-192</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> f2;	<span class="comment">/* first trace location</span></span><br><span class="line"><span class="comment">			   byte# 193-196</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> ungpow;	<span class="comment">/* negative of power used for dynamic</span></span><br><span class="line"><span class="comment">			   range compression</span></span><br><span class="line"><span class="comment">			   byte# 197-200</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> unscale;	<span class="comment">/* reciprocal of scaling factor to normalize</span></span><br><span class="line"><span class="comment">			   range</span></span><br><span class="line"><span class="comment">			   byte# 201-204</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> mark;	<span class="comment">/* mark selected traces</span></span><br><span class="line"><span class="comment">			   byte# 205-206</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/* SLTSU local assignments */</span></span><br><span class="line">	<span class="keyword">short</span> mutb;	<span class="comment">/* mute time at bottom (start time)</span></span><br><span class="line"><span class="comment">			   bottom mute ends at last sample</span></span><br><span class="line"><span class="comment">			   byte# 207-208</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line">	<span class="keyword">float</span> dz;	<span class="comment">/* depth sampling interval in (m or ft)</span></span><br><span class="line"><span class="comment">			if =0.0, input are time samples</span></span><br><span class="line"><span class="comment">			   byte# 209-212</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> fz;	<span class="comment">/* depth of first sample in (m or ft)</span></span><br><span class="line"><span class="comment">			   byte# 213-116</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> n2;	<span class="comment">/* number of traces per cdp or per shot</span></span><br><span class="line"><span class="comment">			   byte# 217-218</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">short</span> shortpad; <span class="comment">/* alignment padding</span></span><br><span class="line"><span class="comment">			   byte# 219-220</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> ntr; 	<span class="comment">/* number of traces</span></span><br><span class="line"><span class="comment">			   byte# 221-224</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/* SLTSU local assignments end */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> unass[<span class="number">8</span>];	<span class="comment">/* unassigned</span></span><br><span class="line"><span class="comment">			   byte# 225-240</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/* cwp local assignments */</span></span><br><span class="line">	<span class="keyword">float</span> d1;	<span class="comment">/* sample spacing for non-seismic data</span></span><br><span class="line"><span class="comment">			   byte# 181-184</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> f1;	<span class="comment">/* first sample location for non-seismic data</span></span><br><span class="line"><span class="comment">			   byte# 185-188</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> d2;	<span class="comment">/* sample spacing between traces</span></span><br><span class="line"><span class="comment">			   byte# 189-192</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> f2;	<span class="comment">/* first trace location</span></span><br><span class="line"><span class="comment">			   byte# 193-196</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> ungpow;	<span class="comment">/* negative of power used for dynamic</span></span><br><span class="line"><span class="comment">			   range compression</span></span><br><span class="line"><span class="comment">			   byte# 197-200</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">float</span> unscale;	<span class="comment">/* reciprocal of scaling factor to normalize</span></span><br><span class="line"><span class="comment">			   range</span></span><br><span class="line"><span class="comment">			   byte# 201-204</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> ntr; 	<span class="comment">/* number of traces</span></span><br><span class="line"><span class="comment">			   byte# 205-208</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> mark;	<span class="comment">/* mark selected traces</span></span><br><span class="line"><span class="comment">			   byte# 209-210</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">short</span> shortpad; <span class="comment">/* alignment padding</span></span><br><span class="line"><span class="comment">			   byte# 211-212</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> unass[<span class="number">14</span>];	<span class="comment">/* unassigned--<span class="doctag">NOTE:</span> last entry causes</span></span><br><span class="line"><span class="comment">			   a break in the word alignment, if we REALLY</span></span><br><span class="line"><span class="comment">			   want to maintain 240 bytes, the following</span></span><br><span class="line"><span class="comment">			   entry should be an odd number of short/UINT2</span></span><br><span class="line"><span class="comment">			   OR do the insertion above the "mark" keyword</span></span><br><span class="line"><span class="comment">			   entry</span></span><br><span class="line"><span class="comment">			   byte# 213-240</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">&#125; segy;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span>	<span class="comment">/* bhed - binary header */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> jobid;	<span class="comment">/* job identification number */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> lino;	<span class="comment">/* line number (only one line per reel) */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> reno;	<span class="comment">/* reel number */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> ntrpr;	<span class="comment">/* number of data traces per record */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">short</span> nart;	<span class="comment">/* number of auxiliary traces per record */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> hdt; <span class="comment">/* sample interval in micro secs for this reel */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> dto; <span class="comment">/* same for original field recording */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> hns; <span class="comment">/* number of samples per trace for this reel */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> nso; <span class="comment">/* same for original field recording */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> format;	<span class="comment">/* data sample format code:</span></span><br><span class="line"><span class="comment">				1 = floating point, 4 byte (32 bits)</span></span><br><span class="line"><span class="comment">				2 = fixed point, 4 byte (32 bits)</span></span><br><span class="line"><span class="comment">				3 = fixed point, 2 byte (16 bits)</span></span><br><span class="line"><span class="comment">				4 = fixed point w/gain code, 4 byte (32 bits)</span></span><br><span class="line"><span class="comment">				5 = IEEE floating point, 4 byte (32 bits)</span></span><br><span class="line"><span class="comment">				8 = two's complement integer, 1 byte (8 bits)</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> fold;	<span class="comment">/* CDP fold expected per CDP ensemble */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> tsort;	<span class="comment">/* trace sorting code:</span></span><br><span class="line"><span class="comment">				1 = as recorded (no sorting)</span></span><br><span class="line"><span class="comment">				2 = CDP ensemble</span></span><br><span class="line"><span class="comment">				3 = single fold continuous profile</span></span><br><span class="line"><span class="comment">				4 = horizontally stacked */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> vscode;	<span class="comment">/* vertical sum code:</span></span><br><span class="line"><span class="comment">				1 = no sum</span></span><br><span class="line"><span class="comment">				2 = two sum ...</span></span><br><span class="line"><span class="comment">				N = N sum (N = 32,767) */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hsfs;	<span class="comment">/* sweep frequency at start */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hsfe;	<span class="comment">/* sweep frequency at end */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hslen;	<span class="comment">/* sweep length (ms) */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hstyp;	<span class="comment">/* sweep type code:</span></span><br><span class="line"><span class="comment">				1 = linear</span></span><br><span class="line"><span class="comment">				2 = parabolic</span></span><br><span class="line"><span class="comment">				3 = exponential</span></span><br><span class="line"><span class="comment">				4 = other */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> schn;	<span class="comment">/* trace number of sweep channel */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hstas;	<span class="comment">/* sweep trace taper length at start if</span></span><br><span class="line"><span class="comment">			   tapered (the taper starts at zero time</span></span><br><span class="line"><span class="comment">			   and is effective for this length) */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hstae;	<span class="comment">/* sweep trace taper length at end (the ending</span></span><br><span class="line"><span class="comment">			   taper starts at sweep length minus the taper</span></span><br><span class="line"><span class="comment">			   length at end) */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> htatyp;	<span class="comment">/* sweep trace taper type code:</span></span><br><span class="line"><span class="comment">				1 = linear</span></span><br><span class="line"><span class="comment">				2 = cos-squared</span></span><br><span class="line"><span class="comment">				3 = other */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hcorr;	<span class="comment">/* correlated data traces code:</span></span><br><span class="line"><span class="comment">				1 = no</span></span><br><span class="line"><span class="comment">				2 = yes */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> bgrcv;	<span class="comment">/* binary gain recovered code:</span></span><br><span class="line"><span class="comment">				1 = yes</span></span><br><span class="line"><span class="comment">				2 = no */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> rcvm;	<span class="comment">/* amplitude recovery method code:</span></span><br><span class="line"><span class="comment">				1 = none</span></span><br><span class="line"><span class="comment">				2 = spherical divergence</span></span><br><span class="line"><span class="comment">				3 = AGC</span></span><br><span class="line"><span class="comment">				4 = other */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> mfeet;	<span class="comment">/* measurement system code:</span></span><br><span class="line"><span class="comment">				1 = meters</span></span><br><span class="line"><span class="comment">				2 = feet */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> polyt;	<span class="comment">/* impulse signal polarity code:</span></span><br><span class="line"><span class="comment">				1 = increase in pressure or upward</span></span><br><span class="line"><span class="comment">				    geophone case movement gives</span></span><br><span class="line"><span class="comment">				    negative number on tape</span></span><br><span class="line"><span class="comment">				2 = increase in pressure or upward</span></span><br><span class="line"><span class="comment">				    geophone case movement gives</span></span><br><span class="line"><span class="comment">				    positive number on tape */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> vpol;	<span class="comment">/* vibratory polarity code:</span></span><br><span class="line"><span class="comment">				code	seismic signal lags pilot by</span></span><br><span class="line"><span class="comment">				1	337.5 to  22.5 degrees</span></span><br><span class="line"><span class="comment">				2	 22.5 to  67.5 degrees</span></span><br><span class="line"><span class="comment">				3	 67.5 to 112.5 degrees</span></span><br><span class="line"><span class="comment">				4	112.5 to 157.5 degrees</span></span><br><span class="line"><span class="comment">				5	157.5 to 202.5 degrees</span></span><br><span class="line"><span class="comment">				6	202.5 to 247.5 degrees</span></span><br><span class="line"><span class="comment">				7	247.5 to 292.5 degrees</span></span><br><span class="line"><span class="comment">				8	293.5 to 337.5 degrees */</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">short</span> hunass[<span class="number">170</span>];	<span class="comment">/* unassigned */</span></span><br><span class="line"></span><br><span class="line">&#125; bhed;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* DEFINES */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gettr(x)	fgettr(stdin, (x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> vgettr(x)	fvgettr(stdin, (x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> puttr(x)	fputtr(stdout, (x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> vputtr(x)	fvputtr(stdout, (x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gettra(x, y)    fgettra(stdin, (x), (y))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* TOTHER represents "other"					*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TOTHER		-1</span></span><br><span class="line"><span class="comment">/* TUNK represents time traces of an unknown type		*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TUNK		0</span></span><br><span class="line"><span class="comment">/* TREAL represents real time traces 				*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TREAL		1</span></span><br><span class="line"><span class="comment">/* TDEAD represents dead time traces 				*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TDEAD		2</span></span><br><span class="line"><span class="comment">/* TDUMMY represents dummy time traces 				*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TDUMMY		3</span></span><br><span class="line"><span class="comment">/* TBREAK represents time break traces 				*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TBREAK		4</span></span><br><span class="line"><span class="comment">/* UPHOLE represents uphole traces 				*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		UPHOLE		5</span></span><br><span class="line"><span class="comment">/* SWEEP represents sweep traces 				*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		SWEEP		6</span></span><br><span class="line"><span class="comment">/* TIMING represents timing traces 				*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TIMING		7</span></span><br><span class="line"><span class="comment">/* WBREAK represents timing traces 				*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		WBREAK		8</span></span><br><span class="line"><span class="comment">/* NFGUNSIG represents near field gun signature 		*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		NFGUNSIG	9</span></span><br><span class="line"><span class="comment">/* FFGUNSIG represents far field gun signature	 		*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		FFGUNSIG	10</span></span><br><span class="line"><span class="comment">/* SPSENSOR represents seismic pressure sensor	 		*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		SPSENSOR	11</span></span><br><span class="line"><span class="comment">/* TVERT represents multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">	- vertical component */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TVERT		12</span></span><br><span class="line"><span class="comment">/* TXLIN represents multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">	- cross-line component */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TXLIN		13</span></span><br><span class="line"><span class="comment">/* TINLIN represents multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">	- in-line component */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TINLIN	14</span></span><br><span class="line"><span class="comment">/* ROTVERT represents rotated multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">	- vertical component */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		ROTVERT		15</span></span><br><span class="line"><span class="comment">/* TTRANS represents rotated multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">	- transverse component */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TTRANS		16</span></span><br><span class="line"><span class="comment">/* TRADIAL represents rotated multicomponent seismic sensor</span></span><br><span class="line"><span class="comment">	- radial component */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TRADIAL		17</span></span><br><span class="line"><span class="comment">/* VRMASS represents vibrator reaction mass */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		VRMASS		18</span></span><br><span class="line"><span class="comment">/* VBASS represents vibrator baseplate */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		VBASS		19</span></span><br><span class="line"><span class="comment">/* VEGF represents vibrator estimated ground force */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		VEGF		20</span></span><br><span class="line"><span class="comment">/* VREF represents vibrator reference */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		VREF		21</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** CWP trid assignments ***/</span></span><br><span class="line"><span class="comment">/* ACOR represents autocorrelation  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		ACOR		109</span></span><br><span class="line"><span class="comment">/* FCMPLX represents fourier transformed - no packing</span></span><br><span class="line"><span class="comment">   xr[0],xi[0], ..., xr[N-1],xi[N-1] */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		FCMPLX		110</span></span><br><span class="line"><span class="comment">/* FUNPACKNYQ represents fourier transformed - unpacked Nyquist</span></span><br><span class="line"><span class="comment">   xr[0],xi[0],...,xr[N/2],xi[N/2] */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		FUNPACKNYQ	111</span></span><br><span class="line"><span class="comment">/* FTPACK represents fourier transformed - packed Nyquist</span></span><br><span class="line"><span class="comment">   even N: xr[0],xr[N/2],xr[1],xi[1], ...,</span></span><br><span class="line"><span class="comment">	xr[N/2 -1],xi[N/2 -1]</span></span><br><span class="line"><span class="comment">   (note the exceptional second entry)</span></span><br><span class="line"><span class="comment">    odd N:</span></span><br><span class="line"><span class="comment">     xr[0],xr[(N-1)/2],xr[1],xi[1], ...,</span></span><br><span class="line"><span class="comment">     xr[(N-1)/2 -1],xi[(N-1)/2 -1],xi[(N-1)/2]</span></span><br><span class="line"><span class="comment">   (note the exceptional second &amp; last entries)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		FTPACK		112</span></span><br><span class="line"><span class="comment">/* TCMPLX represents complex time traces 			*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TCMPLX		113</span></span><br><span class="line"><span class="comment">/* FAMPH represents freq domain data in amplitude/phase form	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		FAMPH		114</span></span><br><span class="line"><span class="comment">/* TAMPH represents time domain data in amplitude/phase form	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TAMPH		115</span></span><br><span class="line"><span class="comment">/* REALPART represents the real part of a trace to Nyquist	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		REALPART	116</span></span><br><span class="line"><span class="comment">/* IMAGPART represents the real part of a trace to Nyquist	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		IMAGPART	117</span></span><br><span class="line"><span class="comment">/* AMPLITUDE represents the amplitude of a trace to Nyquist	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		AMPLITUDE	118</span></span><br><span class="line"><span class="comment">/* PHASE represents the phase of a trace to Nyquist		*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		PHASE		119</span></span><br><span class="line"><span class="comment">/* KT represents wavenumber-time domain data 			*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		KT		121</span></span><br><span class="line"><span class="comment">/* KOMEGA represents wavenumber-frequency domain data		*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		KOMEGA		122</span></span><br><span class="line"><span class="comment">/* ENVELOPE represents the envelope of the complex time trace	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		ENVELOPE	123</span></span><br><span class="line"><span class="comment">/* INSTPHASE represents the phase of the complex time trace	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		INSTPHASE	124</span></span><br><span class="line"><span class="comment">/* INSTFREQ represents the frequency of the complex time trace	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		INSTFREQ	125</span></span><br><span class="line"><span class="comment">/* DEPTH represents traces in depth-range (z-x)			*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		TRID_DEPTH	130</span></span><br><span class="line"><span class="comment">/* 3C data...  v,h1,h2=(11,12,13)+32 so a bitmask will convert  */</span></span><br><span class="line"><span class="comment">/* between conventions */</span></span><br><span class="line"><span class="comment">/* CHARPACK represents byte packed seismic data from supack1	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		CHARPACK	201</span></span><br><span class="line"><span class="comment">/* SHORTPACK represents 2 byte packed seismic data from supack2	*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>		SHORTPACK	202</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ISSEISMIC(id) (( (id)==TUNK || (id)==TREAL || (id)==TDEAD || (id)==TDUMMY || (id)==TBREAK || (id)==UPHOLE || (id)==SWEEP || (id)==TIMING || (id)==WBREAK || (id)==NFGUNSIG || ( id)==FFGUNSIG || (id)==SPSENSOR || (id)==TVERT || (id)==TXLIN || (id)==TINLIN || (id)==ROTVERT || (id)==TTRANS || (id)==TRADIAL || (id)==ACOR ) ? cwp_true : cwp_false )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* FUNCTION PROTOTYPES */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus <span class="comment">/* if C++, specify external linkage to C functions */</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* get trace and put trace */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fgettr</span><span class="params">(FILE *fp, segy *tp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fvgettr</span><span class="params">(FILE *fp, segy *tp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fputtr</span><span class="params">(FILE *fp, segy *tp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fvputtr</span><span class="params">(FILE *fp, segy *tp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fgettra</span><span class="params">(FILE *fp, segy *tp, <span class="keyword">int</span> itr)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get gather and put gather */</span></span><br><span class="line"><span class="function">segy **<span class="title">fget_gather</span><span class="params">(FILE *fp, cwp_String *key,cwp_String *type,Value *n_val,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">int</span> *nt,<span class="keyword">int</span> *ntr, <span class="keyword">float</span> *dt,<span class="keyword">int</span> *first)</span></span>;</span><br><span class="line"><span class="function">segy **<span class="title">get_gather</span><span class="params">(cwp_String *key, cwp_String *type, Value *n_val,</span></span></span><br><span class="line"><span class="function"><span class="params">			<span class="keyword">int</span> *nt, <span class="keyword">int</span> *ntr, <span class="keyword">float</span> *dt, <span class="keyword">int</span> *first)</span></span>;</span><br><span class="line"><span class="function">segy **<span class="title">fput_gather</span><span class="params">(FILE *fp, segy **rec,<span class="keyword">int</span> *nt, <span class="keyword">int</span> *ntr)</span></span>;</span><br><span class="line"><span class="function">segy **<span class="title">put_gather</span><span class="params">(segy **rec,<span class="keyword">int</span> *nt, <span class="keyword">int</span> *ntr)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* hdrpkge */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gethval</span><span class="params">(<span class="keyword">const</span> segy *tp, <span class="keyword">int</span> index, Value *valp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">puthval</span><span class="params">(segy *tp, <span class="keyword">int</span> index, Value *valp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getbhval</span><span class="params">(<span class="keyword">const</span> bhed *bhp, <span class="keyword">int</span> index, Value *valp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putbhval</span><span class="params">(bhed *bhp, <span class="keyword">int</span> index, Value *valp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gethdval</span><span class="params">(<span class="keyword">const</span> segy *tp, <span class="keyword">char</span> *key, Value *valp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">puthdval</span><span class="params">(segy *tp, <span class="keyword">char</span> *key, Value *valp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">hdtype</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getkey</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> index)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getindex</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swaphval</span><span class="params">(segy *tp, <span class="keyword">int</span> index)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swapbhval</span><span class="params">(bhed *bhp, <span class="keyword">int</span> index)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printheader</span><span class="params">(<span class="keyword">const</span> segy *tp)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tabplot</span><span class="params">(segy *tp, <span class="keyword">int</span> itmin, <span class="keyword">int</span> itmax)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus <span class="comment">/* if C++, end external linkage specification */</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<h2 id="示例">示例</h2>
<p>假设我们现在想建立一个简单的一维水平层状模型，上层速度为2000 m/s， 下层速度为3000m/s。 将模型文件存储为SU格式。该模型大小为：2000m，深1000m。z和x方向的步长都为10。那么我们 可以通过以下程序来实现。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"segy.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp_out;</span><br><span class="line">    <span class="keyword">size_t</span> size, nwrite;</span><br><span class="line">    <span class="keyword">int</span> n1, n2; <span class="comment">// n1 number of samples; n2 number of traces</span></span><br><span class="line">    <span class="keyword">float</span> d1, d2, f1, f2; <span class="comment">// d1 samlping interval; d2 trace interval</span></span><br><span class="line">    <span class="keyword">float</span> *data;</span><br><span class="line">    <span class="keyword">char</span> file_out[<span class="number">30</span>];</span><br><span class="line">    segy *hdrs;</span><br><span class="line"></span><br><span class="line">    n1 = <span class="number">101</span>; n2 = <span class="number">201</span>;</span><br><span class="line">    f1 = <span class="number">0.0</span>; f2 = <span class="number">0.0</span>;</span><br><span class="line">    d1 = <span class="number">10.0</span>; d2 = <span class="number">10.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">strcpy</span>(file_out, argv[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    hdrs = (segy *)<span class="built_in">calloc</span>(n2, <span class="keyword">sizeof</span>(segy));</span><br><span class="line">    assert(hdrs != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n2; i++) &#123;  <span class="comment">// n2: number of traces</span></span><br><span class="line">        hdrs[i].f1 = f1;</span><br><span class="line">        hdrs[i].f2 = f2;</span><br><span class="line">        hdrs[i].d1 = d1;</span><br><span class="line">        hdrs[i].d2 = d2;</span><br><span class="line">        hdrs[i].ns = n1;    <span class="comment">//number of samples of this trace</span></span><br><span class="line">        hdrs[i].trwf = n2;</span><br><span class="line">        hdrs[i].tracl = i;    <span class="comment">// Trace sequence number within line</span></span><br><span class="line">        hdrs[i].tracf = i;</span><br><span class="line">        hdrs[i].scalco = <span class="number">-1000</span>;</span><br><span class="line">        hdrs[i].gx = (i*d2)*<span class="number">1000</span>;</span><br><span class="line">        hdrs[i].timbas = <span class="number">3</span>;</span><br><span class="line">        hdrs[i].trid = TRID_DEPTH;   <span class="comment">// trace identification code</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    size = n1*n2;</span><br><span class="line">    data = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>(size * <span class="keyword">sizeof</span>(<span class="keyword">float</span>)); <span class="comment">// the basic cell of data is float</span></span><br><span class="line">    assert(data != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> ix=<span class="number">0</span>; ix&lt;n2; ix++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> iz=<span class="number">0</span>; iz&lt;n1; iz++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (iz &lt; <span class="number">50</span>) &#123;</span><br><span class="line">                data[ix*n1+iz] = <span class="number">2000.0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                data[ix*n1+iz] = <span class="number">3000.0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// creat output file</span></span><br><span class="line">    fp_out = fopen(file_out, <span class="string">"w"</span>);</span><br><span class="line">    assert(fp_out != <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n2; i++) &#123;</span><br><span class="line">        nwrite = fwrite(&amp;hdrs[i], <span class="number">1</span>, TRCBYTES, fp_out); <span class="comment">// TRCBYTES为segy.h中定义的SU文件的240字节头段大小。</span></span><br><span class="line">        assert(nwrite == TRCBYTES);</span><br><span class="line">        nwrite = fwrite(&amp;data[i*n1], <span class="keyword">sizeof</span>(<span class="keyword">float</span>), n1, fp_out);</span><br><span class="line">        assert(nwrite == n1);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp_out);</span><br><span class="line">    <span class="built_in">free</span>(hdrs);</span><br><span class="line">    <span class="built_in">free</span>(data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译链接::</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为segy.h文件包含了par.h头文件，编译时，必须得找得到par.h文件才行</span></span><br><span class="line">$ gcc -g -Wall -o <span class="built_in">test</span> test.c -std=c99</span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">$ ./<span class="built_in">test</span> first_model.su</span><br></pre></td></tr></table></figure>
<p>就可以创建一个SU格式的速度格网文件。然后可以利用 <code>suximage</code> 命令来查看。</p>
<pre><code>$ suximage &lt;first_model.su title=&quot;Firts Model&quot; wbox=1000 hbox=500 \
    label2=&quot;lateral position [m]&quot; label1=&quot;depth [m]&quot; legend=1</code></pre>
<div class="figure">
<img src="/images/2016042200.png">

</div>
<h2 id="后记">后记</h2>
<p>现在来说一说为什么要用SU格式来存储速度格网文件，直接用不带头段的二进制不好吗？ 恩，答案就是不好！ 直接存二进制文件的话，因为文件本身是没有文件描述信息的，过一段时间 就忘了这个文件的格点数，横向和深度方向的大小什么的，很不方便。而且想画图看一下都不行。 二进制的文件得用 <code>ximage</code> 命令来查看，但是该命令必须指定一个维度的格点数才行。</p>
<p>而存成SU格式就没有这个问题了，头段相当于将该模型的格点信息等都存储着，想看的话，直接 用 <code>suximage</code> 命令即可。</p>
<p>PS： <code>segy.h</code> 里还有很多其他的函数在本文里没有涉及到。至于这些函数的功能，后面进一步学习之后 再拿出来讲。</p>
<h2 id="修改历史">修改历史</h2>
<ol>
<li>2016-03-01 初稿</li>
<li>2016-04-22 加入例子</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Exploration Seismology </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Seismic_Unix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SU/SEGY文件格式]]></title>
      <url>https://whu-pzhang.github.io/SU-and-Segy-format.html</url>
      <content type="html"><![CDATA[<h2 id="序言">序言</h2>
<p>地震勘探中，地震数据是以地震道为单位进行组织的，最常用的格式即为SEG-Y格式，这种格式是由 SEG(Society of Exploration Geophysicists)提出的标准磁带数据格式之一，是石油行业使用 最为普遍的格式。而SU格式是 Seismic_Unix 软件包使用的数据格式，可以看作的SEGY格式的简化， 由于 Seismic_Unix 软件的广泛使用，该种格式也有着普遍的使用。</p>
<a id="more"></a>
<h2 id="seg-y数据格式">SEG-Y数据格式</h2>
<p>SEGY数据格式包括三个部分。</p>
<div class="figure">
<img src="/images/2016022900.png">

</div>
<ul>
<li><code>EBCDIC</code>：Extended Binary Coded Decimak Interchange Code,主要用于IBM计算机，</li>
<li><code>32位IBM浮点型</code>: IBM格式和现代IBM PC所用的IEEE格式是不同的</li>
</ul>
<p>对于数据的读写主要在于要弄清楚数据的组成，而SEGY和SU文件格式的重要组成部分都是道头，类似于 SAC文件的头段。道头记录了数据的一些基本信息。</p>
<h3 id="segy卷头文件3200字节ebcdic码内容">SEGY卷头文件3200字节EBCDIC码内容</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">C      This tape was made at the</span><br><span class="line">C</span><br><span class="line">C      Center <span class="keyword">for</span> Wave Phenomena</span><br><span class="line">C      Colorado School of Mines</span><br><span class="line">C      Golden, CO, 80401</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C</span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C                                                                              </span><br><span class="line">C</span><br></pre></td></tr></table></figure>
<h3 id="segy卷头文件400字节二进制内容表">SEGY卷头文件400字节二进制内容表</h3>
<table style="width:97%;">
<colgroup>
<col width="16%">
<col width="19%">
<col width="23%">
<col width="37%">
</colgroup>
<thead>
<tr class="header">
<th>字节</th>
<th>参数名</th>
<th>参数类型</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>3201-3204</p></td>
<td><p>jobid</p></td>
<td><p>int</p></td>
<td><p>任务识别码</p></td>
</tr>
<tr class="even">
<td><p>3205-3208</p></td>
<td><p>lino</p></td>
<td><p>int</p></td>
<td><p>测线号</p></td>
</tr>
<tr class="odd">
<td><p>3209-3212</p></td>
<td><p>reno</p></td>
<td><p>int</p></td>
<td><p>卷号</p></td>
</tr>
<tr class="even">
<td><p>3213-3214</p></td>
<td><p>ntrpr</p></td>
<td><p>short</p></td>
<td><p>每个记录的道数</p></td>
</tr>
<tr class="odd">
<td><p>3215-3216</p></td>
<td><p>nart</p></td>
<td><p>short</p></td>
<td><p>每个记录的辅助道数</p></td>
</tr>
<tr class="even">
<td><p>3217-3218</p></td>
<td><p>hdt</p></td>
<td><p>unsigned short</p></td>
<td><p>该卷采样间隔(微秒)</p></td>
</tr>
<tr class="odd">
<td><p>3219-3220</p></td>
<td><p>dto</p></td>
<td><p>unsigned short</p></td>
<td><p>原始记录的采样间隔(微秒)</p></td>
</tr>
<tr class="even">
<td><p>3221-3222</p></td>
<td><p>hns</p></td>
<td><p>unsigned short</p></td>
<td><p>该卷每道的样点数</p></td>
</tr>
<tr class="odd">
<td><p>3223-3224</p></td>
<td><p>nso</p></td>
<td><p>unsigned short</p></td>
<td><p>原始记录的每道的采样点</p></td>
</tr>
<tr class="even">
<td><p>3225-3226</p></td>
<td><p>format</p></td>
<td><p>short</p></td>
<td><p>数据采样点的记录格式</p></td>
</tr>
<tr class="odd">
<td><p>3227-3228</p></td>
<td><p>fold</p></td>
<td><p>short</p></td>
<td><p>CMP 覆盖次数</p></td>
</tr>
<tr class="even">
<td><p>3229-3230</p></td>
<td><p>tsort</p></td>
<td><p>short</p></td>
<td><p>道分选码</p></td>
</tr>
<tr class="odd">
<td><p>3231-3232</p></td>
<td><p>vscode</p></td>
<td><p>short</p></td>
<td><p>垂直和码</p></td>
</tr>
<tr class="even">
<td><p>3233-3234</p></td>
<td><p>hsfs</p></td>
<td><p>short</p></td>
<td><p>起始扫描频率</p></td>
</tr>
<tr class="odd">
<td><p>3235-3236</p></td>
<td><p>hsfe</p></td>
<td><p>short</p></td>
<td><p>终止扫描频率</p></td>
</tr>
<tr class="even">
<td><p>3237-3238</p></td>
<td><p>hslen</p></td>
<td><p>short</p></td>
<td><p>扫描时窗</p></td>
</tr>
<tr class="odd">
<td><p>3239-3240</p></td>
<td><p>hstyp</p></td>
<td><p>short</p></td>
<td><p>扫描类型</p></td>
</tr>
<tr class="even">
<td><p>3241-3242</p></td>
<td><p>schn</p></td>
<td><p>short</p></td>
<td><p>扫描频带道数</p></td>
</tr>
<tr class="odd">
<td><p>3243-3244</p></td>
<td><p>hstas</p></td>
<td><p>short</p></td>
<td><p>斜坡扫描起始时间</p></td>
</tr>
<tr class="even">
<td><p>3245-3246</p></td>
<td><p>hstae</p></td>
<td><p>short</p></td>
<td><p>斜坡扫描终止时间</p></td>
</tr>
<tr class="odd">
<td><p>3247-3248</p></td>
<td><p>htatyp</p></td>
<td><p>short</p></td>
<td><p>斜坡扫描类型</p></td>
</tr>
<tr class="even">
<td><p>3249-3250</p></td>
<td><p>hcorr</p></td>
<td><p>short</p></td>
<td><p>相关数据道</p></td>
</tr>
<tr class="odd">
<td><p>3251-3252</p></td>
<td><p>bgrcv</p></td>
<td><p>short</p></td>
<td><p>增益恢复</p></td>
</tr>
<tr class="even">
<td><p>3253-3254</p></td>
<td><p>rcvm</p></td>
<td><p>short</p></td>
<td><p>振幅恢复方法</p></td>
</tr>
<tr class="odd">
<td><p>3255-3256</p></td>
<td><p>mfeet</p></td>
<td><p>short</p></td>
<td><p>测量系统</p></td>
</tr>
<tr class="even">
<td><p>3257-3258</p></td>
<td><p>polyt</p></td>
<td><p>short</p></td>
<td><p>激发信号极性</p></td>
</tr>
<tr class="odd">
<td><p>3259-3260</p></td>
<td><p>vpol</p></td>
<td><p>short</p></td>
<td><p>振动极性</p></td>
</tr>
<tr class="even">
<td><p>3261-3600</p></td>
<td><p>hunass[170]</p></td>
<td><p>short</p></td>
<td><p>无定义</p></td>
</tr>
</tbody>
</table>
<h3 id="seg-y定义的240字节道头变量列表">SEG-Y定义的240字节道头变量列表</h3>
<table>
<colgroup>
<col width="7%">
<col width="10%">
<col width="8%">
<col width="73%">
</colgroup>
<thead>
<tr class="header">
<th>字节数</th>
<th>参数名</th>
<th>参数类型</th>
<th>参数描述</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>1-4</p></td>
<td><p><strong>tracl</strong></p></td>
<td><p>int</p></td>
<td><p>Trace sequence number within line.</p></td>
</tr>
<tr class="even">
<td><p>5-8</p></td>
<td><p>tracr</p></td>
<td><p>int</p></td>
<td><p>Trace sequence number within file (reel)</p></td>
</tr>
<tr class="odd">
<td><p>9-12</p></td>
<td><p><strong>fldr</strong></p></td>
<td><p>int</p></td>
<td><p>Original field record number</p></td>
</tr>
<tr class="even">
<td><p>13-16</p></td>
<td><p><strong>tracf</strong></p></td>
<td><p>int</p></td>
<td><p>Trace number within original field record</p></td>
</tr>
<tr class="odd">
<td><p>17-20</p></td>
<td><p>ep</p></td>
<td><p>int</p></td>
<td><p>Energy source point number.</p></td>
</tr>
<tr class="even">
<td><p>21-24</p></td>
<td><p>cdp</p></td>
<td><p>int</p></td>
<td><p>CDP ensemble number.</p></td>
</tr>
<tr class="odd">
<td><p>25-28</p></td>
<td><p>cdpt</p></td>
<td><p>int</p></td>
<td><p>Trace number within the CDP ensemble.</p></td>
</tr>
<tr class="even">
<td><p>29-30</p></td>
<td><p><strong>trid</strong></p></td>
<td><p>short</p></td>
<td><p>Trace identification code: 1 = seismic data</p></td>
</tr>
<tr class="odd">
<td><p>31-32</p></td>
<td><p>nvs</p></td>
<td><p>short</p></td>
<td><p>Number of vertically summed traces yielding this trace</p></td>
</tr>
<tr class="even">
<td><p>33-34</p></td>
<td><p>nhs</p></td>
<td><p>short</p></td>
<td><p>Number of horizontally stacked traces yielding this trace</p></td>
</tr>
<tr class="odd">
<td><p>35-36</p></td>
<td><p>duse</p></td>
<td><p>short</p></td>
<td><p>Data use: 1 = production 2 = test</p></td>
</tr>
<tr class="even">
<td><p>37-40</p></td>
<td><p>offset</p></td>
<td><p>int</p></td>
<td><p>Distance from source point to receiver group.</p></td>
</tr>
<tr class="odd">
<td><p>41-44</p></td>
<td><p>gelev</p></td>
<td><p>int</p></td>
<td><p>Receiver group elevation-above sea level are positive, or are negative.</p></td>
</tr>
<tr class="even">
<td><p>45-48</p></td>
<td><p>selev</p></td>
<td><p>int</p></td>
<td><p>Surface elevation at source.</p></td>
</tr>
<tr class="odd">
<td><p>49-52</p></td>
<td><p>sdepth</p></td>
<td><p>int</p></td>
<td><p>Source depth below surface (positive number).</p></td>
</tr>
<tr class="even">
<td><p>53-56</p></td>
<td><p>gdel</p></td>
<td><p>int</p></td>
<td><p>Datum elevation at receiver group.</p></td>
</tr>
<tr class="odd">
<td><p>57-60</p></td>
<td><p>sdel</p></td>
<td><p>int</p></td>
<td><p>Datum elevation at source.</p></td>
</tr>
<tr class="even">
<td><p>61-64</p></td>
<td><p>swdep</p></td>
<td><p>int</p></td>
<td><p>Water depth at source(this is the Fish depth below the sea surface in meters*10)</p></td>
</tr>
<tr class="odd">
<td><p>65-68</p></td>
<td><p>gwdep</p></td>
<td><p>int</p></td>
<td><p>Water depth at group.</p></td>
</tr>
<tr class="even">
<td><p>69-70</p></td>
<td><p>scalel</p></td>
<td><p>short</p></td>
<td><p>Scalar to be applied to the previous 7 entries</p></td>
</tr>
<tr class="odd">
<td><p>71-72</p></td>
<td><p>scalco</p></td>
<td><p>short</p></td>
<td><p>Scalar to be applied to the next 4 entries</p></td>
</tr>
<tr class="even">
<td><p>73-76</p></td>
<td><p><strong>sx</strong></p></td>
<td><p>int</p></td>
<td><p>Source coordinate -Longitude</p></td>
</tr>
<tr class="odd">
<td><p>77-80</p></td>
<td><p><strong>sy</strong></p></td>
<td><p>int</p></td>
<td><p>Source coordinate - Latitude</p></td>
</tr>
<tr class="even">
<td><p>81-84</p></td>
<td><p><strong>gx</strong></p></td>
<td><p>int</p></td>
<td><p>Group coordinate - Longitude</p></td>
</tr>
<tr class="odd">
<td><p>85-88</p></td>
<td><p><strong>gy</strong></p></td>
<td><p>int</p></td>
<td><p>Group coordinate - Latitude</p></td>
</tr>
<tr class="even">
<td><p>89-90</p></td>
<td><p><strong>conuit</strong></p></td>
<td><p>short</p></td>
<td><p>Coordinate units: 1=length(meters or feet) 2=seconds of arc</p></td>
</tr>
<tr class="odd">
<td><p>91-92</p></td>
<td><p>wevel</p></td>
<td><p>short</p></td>
<td><p>weathering velocity.</p></td>
</tr>
<tr class="even">
<td><p>93-94</p></td>
<td><p>swevel</p></td>
<td><p>short</p></td>
<td><p>Subweathering velocity.</p></td>
</tr>
<tr class="odd">
<td><p>95-96</p></td>
<td><p>sut</p></td>
<td><p>short</p></td>
<td><p>Uphole time at source.</p></td>
</tr>
<tr class="even">
<td><p>97-98</p></td>
<td><p>gut</p></td>
<td><p>short</p></td>
<td><p>Uphole time at group.</p></td>
</tr>
<tr class="odd">
<td><p>99-100</p></td>
<td><p>sstat</p></td>
<td><p>short</p></td>
<td><p>Source static correction.</p></td>
</tr>
<tr class="even">
<td><p>101-102</p></td>
<td><p>gstat</p></td>
<td><p>short</p></td>
<td><p>Group static correction.</p></td>
</tr>
<tr class="odd">
<td><p>103-104</p></td>
<td><p>tstat</p></td>
<td><p>short</p></td>
<td><p>Total static applied.</p></td>
</tr>
<tr class="even">
<td><p>105-106</p></td>
<td><p>laga</p></td>
<td><p>short</p></td>
<td><p>Lag time A (ms).</p></td>
</tr>
<tr class="odd">
<td><p>107-108</p></td>
<td><p>lagb</p></td>
<td><p>short</p></td>
<td><p>Lag time B. Time in ms between the time break and positive or negative.</p></td>
</tr>
<tr class="even">
<td><p>109-110</p></td>
<td><p>delrt</p></td>
<td><p>short</p></td>
<td><p>Delay recording time.</p></td>
</tr>
<tr class="odd">
<td><p>111-112</p></td>
<td><p>muts</p></td>
<td><p>short</p></td>
<td><p>Mute time - start.</p></td>
</tr>
<tr class="even">
<td><p>113-114</p></td>
<td><p>mute</p></td>
<td><p>short</p></td>
<td><p>Mute time - end.</p></td>
</tr>
<tr class="odd">
<td><p>115-116</p></td>
<td><p><strong>ns</strong></p></td>
<td><p>un short</p></td>
<td><p>Number of samples in this trace.</p></td>
</tr>
<tr class="even">
<td><p>117-118</p></td>
<td><p><strong>dt</strong></p></td>
<td><p>un short</p></td>
<td><p>Sample interval of this trace in microseconds .</p></td>
</tr>
<tr class="odd">
<td><p>119-120</p></td>
<td><p>gain</p></td>
<td><p>short</p></td>
<td><p>Gain type of field instruments</p></td>
</tr>
<tr class="even">
<td><p>121-122</p></td>
<td><p>igc</p></td>
<td><p>short</p></td>
<td><p>Instrument gain constant.</p></td>
</tr>
<tr class="odd">
<td><p>123-124</p></td>
<td><p><strong>igi</strong></p></td>
<td><p>short</p></td>
<td><p>Instrument early or initial gain (db).</p></td>
</tr>
<tr class="even">
<td><p>125-126</p></td>
<td><p>corr</p></td>
<td><p>short</p></td>
<td><p>Correlated: 1 = no 2 = yes</p></td>
</tr>
<tr class="odd">
<td><p>127-128</p></td>
<td><p>sfs</p></td>
<td><p>short</p></td>
<td><p>Sweep frequency at start.</p></td>
</tr>
<tr class="even">
<td><p>129-130</p></td>
<td><p>sfe</p></td>
<td><p>short</p></td>
<td><p>Sweep frequency at end.</p></td>
</tr>
<tr class="odd">
<td><p>131-132</p></td>
<td><p>slen</p></td>
<td><p>short</p></td>
<td><p>Sweep length (ms).</p></td>
</tr>
<tr class="even">
<td><p>133-134</p></td>
<td><p>styp</p></td>
<td><p>short</p></td>
<td><p>Sweep type: 1 = linear 2 = parabolic 3 = exponential 4 = other</p></td>
</tr>
<tr class="odd">
<td><p>135-136</p></td>
<td><p>stas</p></td>
<td><p>short</p></td>
<td><p>Sweep trace taper length at start (ms).</p></td>
</tr>
<tr class="even">
<td><p>137-138</p></td>
<td><p>stae</p></td>
<td><p>short</p></td>
<td><p>Sweep trace taper length at end, ms.</p></td>
</tr>
<tr class="odd">
<td><p>139-140</p></td>
<td><p>tatyp</p></td>
<td><p>short</p></td>
<td><p>Taper type: 1 = linear 2 = cos 3 = other</p></td>
</tr>
<tr class="even">
<td><p>141-142</p></td>
<td><p><strong>afilf</strong></p></td>
<td><p>short</p></td>
<td><p>Alias filter frequency.</p></td>
</tr>
<tr class="odd">
<td><p>143-144</p></td>
<td><p><strong>afils</strong></p></td>
<td><p>short</p></td>
<td><p>Alias filter slope.</p></td>
</tr>
<tr class="even">
<td><p>145-146</p></td>
<td><p>nofilf</p></td>
<td><p>short</p></td>
<td><p>Notch filter frequency.</p></td>
</tr>
<tr class="odd">
<td><p>147-148</p></td>
<td><p>nofils</p></td>
<td><p>short</p></td>
<td><p>Notch filter slope.</p></td>
</tr>
<tr class="even">
<td><p>149-150</p></td>
<td><p>lcf</p></td>
<td><p>short</p></td>
<td><p>Low cut frequency.</p></td>
</tr>
<tr class="odd">
<td><p>151-152</p></td>
<td><p>hcf</p></td>
<td><p>short</p></td>
<td><p>High cut frequency.</p></td>
</tr>
<tr class="even">
<td><p>153-154</p></td>
<td><p>lcs</p></td>
<td><p>short</p></td>
<td><p>Low cut slope.</p></td>
</tr>
<tr class="odd">
<td><p>155-156</p></td>
<td><p>hcs</p></td>
<td><p>short</p></td>
<td><p>High cut slope.</p></td>
</tr>
<tr class="even">
<td><p>157-158</p></td>
<td><p><strong>year</strong></p></td>
<td><p>short</p></td>
<td><p>Year data recorded (four digit integer).</p></td>
</tr>
<tr class="odd">
<td><p>159-160</p></td>
<td><p><strong>day</strong></p></td>
<td><p>short</p></td>
<td><p>Day of year.</p></td>
</tr>
<tr class="even">
<td><p>161-162</p></td>
<td><p><strong>hour</strong></p></td>
<td><p>short</p></td>
<td><p>Hour of day (24 hour clock).</p></td>
</tr>
<tr class="odd">
<td><p>163-164</p></td>
<td><p><strong>minute</strong></p></td>
<td><p>short</p></td>
<td><p>Minute of hour.</p></td>
</tr>
<tr class="even">
<td><p>165-166</p></td>
<td><p><strong>sec</strong></p></td>
<td><p>short</p></td>
<td><p>Second of minute.</p></td>
</tr>
<tr class="odd">
<td><p>167-168</p></td>
<td><p>timbas</p></td>
<td><p>short</p></td>
<td><p>Time basis code: 1 = local 2 = GMT 3 = other</p></td>
</tr>
<tr class="even">
<td><p>169-170</p></td>
<td><p><strong>trwf</strong></p></td>
<td><p>short</p></td>
<td><p>Trace weighting factor,defined as 2-N volts for the least significant bit.(N=0,1,.,32,767)</p></td>
</tr>
<tr class="odd">
<td><p>171-172</p></td>
<td><p>grnors</p></td>
<td><p>short</p></td>
<td><p>Geophone group number of roll switch position one.</p></td>
</tr>
<tr class="even">
<td><p>173-174</p></td>
<td><p>grnlof</p></td>
<td><p>short</p></td>
<td><p>Geophone group number of trace number one within original field record.</p></td>
</tr>
<tr class="odd">
<td><p>175-176</p></td>
<td><p>grnlof</p></td>
<td><p>short</p></td>
<td><p>Geophone group number of last trace within original field record.</p></td>
</tr>
<tr class="even">
<td><p>177-178</p></td>
<td><p>gaps</p></td>
<td><p>short</p></td>
<td><p>Gape size (total number of groups dropped).</p></td>
</tr>
<tr class="odd">
<td><p>179-180</p></td>
<td><p>otrav</p></td>
<td><p>short</p></td>
<td><p>Overtravel associated with taper at beginning or end of line: 1=down 2=up</p></td>
</tr>
<tr class="even">
<td><p>181-240</p></td>
<td><p>null</p></td>
<td><p>null</p></td>
<td><p>Unassigned-for optional information. <strong>cwp local assignments</strong></p></td>
</tr>
</tbody>
</table>
<p>其中粗体的变量是比较重要的，一般在SU/SEGY文件中都有值。另外需要说明的是，SEGY格式中有可选的 道头字（字节181-240）,这些道头字的使用没有标准。在SU格式中，这些字节用来存放一些绘图参数。</p>
<h2 id="su数据格式">SU数据格式</h2>
<p>SU数据格式是基于SEGY格式的数据道部分。SEGY道和SU道的主要不同在于SU格式的道数据是浮点型， 和你运行SU程序的计算机上的浮点格式一致，SU数据只有SEGY的道部分！SU格式中不保存EBCDIC和 二进制卷头。</p>
<p>因此，SU数据道头基本与SEGY中的数据道头相同，差别在于道头中的181-240字节在SEGY中并没有分配， 而在SU数据中，这部分用来存放绘图参数。</p>
<h3 id="su第181-240字节道头变量">SU第181-240字节道头变量</h3>
<p><strong>cwp local assignments</strong></p>
<table>
<colgroup>
<col width="11%">
<col width="14%">
<col width="9%">
<col width="64%">
</colgroup>
<thead>
<tr class="header">
<th>Bytes</th>
<th>Name</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>181-184</p></td>
<td><p>d1</p></td>
<td><p>float</p></td>
<td><p>sample spacing for non-seismic data</p></td>
</tr>
<tr class="even">
<td><p>185-188</p></td>
<td><p>f1</p></td>
<td><p>float</p></td>
<td><p>first sample location for non-seismic data</p></td>
</tr>
<tr class="odd">
<td><p>189-192</p></td>
<td><p>d2</p></td>
<td><p>float</p></td>
<td><p>sample spacing between traces</p></td>
</tr>
<tr class="even">
<td><p>193-196</p></td>
<td><p>f2</p></td>
<td><p>float</p></td>
<td><p>first trace location</p></td>
</tr>
<tr class="odd">
<td><p>197-200</p></td>
<td><p>ungpow</p></td>
<td><p>float</p></td>
<td><p>negative of power used for dynamic range compression</p></td>
</tr>
<tr class="even">
<td><p>201-204</p></td>
<td><p>unscale</p></td>
<td><p>float</p></td>
<td><p>reciprocal of scaling factor to normalize</p></td>
</tr>
<tr class="odd">
<td><p>205-208</p></td>
<td><p>ntr</p></td>
<td><p>int</p></td>
<td><p>number of traces</p></td>
</tr>
<tr class="even">
<td><p>209-210</p></td>
<td><p>mark</p></td>
<td><p>short</p></td>
<td><p>mark selected traces</p></td>
</tr>
<tr class="odd">
<td><p>211-212</p></td>
<td><p>shortpad</p></td>
<td><p>short</p></td>
<td><p>alignment padding</p></td>
</tr>
<tr class="even">
<td><p>213-240</p></td>
<td><p>unass[14]</p></td>
<td><p>short</p></td>
<td><p>unassigned</p></td>
</tr>
</tbody>
</table>
<h2 id="部分道头变量之间的关系">部分道头变量之间的关系</h2>
<p>先来重申以下以下几个变量：</p>
<ul>
<li><strong>fldr</strong>: Original field record number</li>
<li><strong>ep</strong>: Energy source point number</li>
<li><strong>tracl</strong>: Trace sequence number within LINE</li>
<li><strong>tracr</strong>: Trace sequence number within REEL(or file)</li>
<li><strong>tracf</strong>: Trace sequence number within original field record</li>
</ul>
<p>现在我们假设一个含有3道的地震记录。那么：</p>
<ul>
<li><strong>fldr</strong> 和 <strong>ep</strong> 相等，且从1开始。</li>
<li><strong>tracl</strong> 和 <strong>tracr</strong> 相等。</li>
</ul>
<p>如下图所示：</p>
<div class="figure">
<img src="/images/2016022901.png">

</div>
<h1 id="参考">参考</h1>
<ul>
<li><a href="http://www.geo.uib.no/eworkshop/index.php?n=Main.SeismicUnix" target="_blank" rel="noopener">USING SeismicUnix</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Exploration Seismology </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
            <tag> Seismic_Unix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux下安装Madagascar]]></title>
      <url>https://whu-pzhang.github.io/install-madagascar-under-linux.html</url>
      <content type="html"><![CDATA[<p>Madagascar 是与Seismic_Unix 以及 SEPlib 差不多的一套东西。</p>
<a id="more"></a>
<h2 id="依赖">依赖</h2>
<p>需要添加 <a href="https://fedoraproject.org/wiki/EPEL" target="_blank" rel="noopener">EPEL</a> 源 和 <a href="http://li.nux.ro/repos.html" target="_blank" rel="noopener">Nux Dextop</a> 源支持。</p>
<pre><code>$ sudo yum install -y epel-release
$ sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm</code></pre>
<h3 id="基础依赖包">基础依赖包</h3>
<pre><code>$ sudo yum install gcc libXaw-devel python</code></pre>
<p>值的注意的是，Madagascar只支持<code>Python2</code></p>
<h3 id="核心及开发依赖">核心及开发依赖</h3>
<pre><code>$ sudo yum install gcc-c++ gcc-gfortran       # c++和fortran
$ sudo yum install python-devel swig numpy    # Python API
$ sudo yum install java     # Java API</code></pre>
<p>要用到MATLAB API的话，自然得安装MATLAB</p>
<h3 id="图形和可视化">图形和可视化</h3>
<pre><code>$ sudo yum install libtiff-devel libjpeg-turbo-devel
$ sudo yum install freeglut freeglut-devel  # opengl
$ sudo yum install netpbm netpbm-devel      # ppm support
$ sudo yum install gd gd-devel              # PNG support
$ sudo yum install plplot plplot-devel      # plplot support
$ sudo yum install ffmpeg ffmpeg-devel      # need nux-dextop support
$ sudo yum install cairo cairo-devel        # cairo support</code></pre>
<p>分别为X11 graphics, vplot2gif, TIFF, JPEG, PLplot, OpenGL和ppm支持</p>
<h3 id="数值依赖包">数值依赖包</h3>
<pre><code>$ sudo yum install blas blas-devel atlas atlas-devel lapack lapack-devel
$ sudo yum install fftw fftw-devel
$ sudo yum install suitesparse suitesparse-devel    # 稀疏矩阵库</code></pre>
<p><code>mpi</code>环境的安装可以参看 <a href="linux-environment-for-seismology-research.html">CentOS7安装及配置</a> 中的并行计算部分</p>
<h3 id="其他">其他</h3>
<ul>
<li>Seismic_Unix</li>
<li>CurveLab, PyCurveLab</li>
<li></li>
</ul>
<h2 id="安装">安装</h2>
<h3 id="添加环境变量">添加环境变量</h3>
<p>将以下语句加入 <code>~/.bashrc</code> 或 <code>~/.zshrc</code> 中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RSFROOT=/opt/rsf <span class="comment"># 安装位置</span></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$&#123;RSFROOT&#125;</span>/share/madagascar/etc/env.sh</span><br></pre></td></tr></table></figure>
<h3 id="编译安装">编译安装</h3>
<ul>
<li>稳定版</li>
</ul>
<p><a href="http://sourceforge.net/projects/rsf/files/" target="_blank" rel="noopener">Download the source code distribution from Sourceforge</a></p>
<pre><code>$ tar jxvf madagascar-1.7.tar.bz2
$ cd madagascar-1.7
$ ./configure --preifx=/opt/rsf API=f90,python,matlab
$ make
$ sudo make install</code></pre>
<ul>
<li>最新版</li>
</ul>
<p>直接从 GitHub 克隆下来：</p>
<pre><code>$ git clone https://github.com/ahay/src.git RSF_SRC
$ cd RSF_SRC
$ ./configure --preifx=/opt/rsf API=f90,c++,python,matlab
$ make
$ sudo make install</code></pre>
<h2 id="卸载">卸载</h2>
<p>清除所有中间文件和安装文件</p>
<pre><code>$ scons -c install</code></pre>
<p>或者在源码文件夹中</p>
<pre><code>$ make distclean</code></pre>
<h2 id="测试">测试</h2>
<pre><code>$ sfspike n1=1000 k1=300 | sfbandpass fhi=2 phase=y | \
    sfwiggle clip=0.02 title=&quot;Welcome to Madagascar&quot; | sfpen</code></pre>
<p>不出错且出现如下图形即安装成功</p>
<div class="figure">
<img src="/images/2015102600.png">

</div>
<h2 id="出现的问题及解决方案">出现的问题及解决方案</h2>
<h3 id="blas">BLAS</h3>
<p>即使安装了<code>blas blas-devel lapack lapack-devel</code>，在<code>./configure</code>时还有如下提示：</p>
<pre><code>checking for BLAS ... no
checking for LAPACK ... no</code></pre>
<p>查看 <code>config.log</code> 后发现其利用的是 <code>cblas</code>，而在CentOS7中<code>cblas</code>为 <code>atlas</code> 包的 一部分，这样在调用<code>cblas</code>中的函数时，默认情况下在编译时需加上<code>-I/usr/include</code>来 包含<code>cblas.h</code>，链接时，则需加上<code>-L/usr/lib64/atlas -lsatlas</code>或 者<code>-L/usr/lib64/atlas -ltatlas</code>。其中,<code>s</code>表示<code>single</code>;<code>t</code>表示<code>multi-threaded</code>。</p>
<p>有了如上信息，我们可以有如下两种解决方案：</p>
<h4 id="自己创建一个cblas库文件">自己创建一个cblas库文件</h4>
<p>这种方法是在不修改Madagascar源文件的前提下进行的。</p>
<p>第一步，将<code>satlas</code>或<code>tatlas</code>库软链接成<code>cblas</code>库：</p>
<pre><code>$ sudo ln -s /usr/lib64/atlas/libsatlas.so /usr/lib64/libcblas.so</code></pre>
<p>第二步，<code>./configure</code>时侯，加上<code>BLAS=cblas</code></p>
<pre><code>$ ./configure --preifx=/home/pzhang/src.import/rsf API=f90,c++,python,matlab BLAS=cblas</code></pre>
<h4 id="修改frameworkconfigure.py">修改<code>framework/configure.py</code></h4>
<p>打开<code>framework/configure.py</code>文件，找到<code>check_all(context)</code>函数，可以发现其调 用<code>blas(context)</code>来对<code>BLAS</code>库进行检查，再定位到<code>blas(context)</code>函数，修改以下 语句：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Line 1014</span></span><br><span class="line">LIBS.append(<span class="string">'f77blas'</span>)</span><br><span class="line">LIBS.append(<span class="string">'cblas'</span>)</span><br><span class="line">LIBS.append(<span class="string">'atlas'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Line 1066</span></span><br><span class="line">mylibs = [<span class="string">'f77blas'</span>,<span class="string">'cblas'</span>,<span class="string">'atlas'</span>]</span><br></pre></td></tr></table></figure>
<p>为： <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#LIBS.append('f77blas') # 因为CentOS7系统上blas库都集成到atlas中了</span></span><br><span class="line"><span class="comment">#LIBS.append('cblas')</span></span><br><span class="line">LIBS.append(<span class="string">'satlas'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#mylibs = ['f77blas','cblas','atlas']</span></span><br><span class="line">mylibs = [<span class="string">'satlas'</span>]</span><br></pre></td></tr></table></figure></p>
<p>上面两种方法任取一种即可！</p>
<h3 id="plplot">plplot</h3>
<p>在安装了<code>plplot</code>和<code>plplot-devel</code>后，<code>configure</code>时<code>plplot</code>仍然是 <code>no</code>。</p>
<p>同样的，我们查看<code>config.log</code>可以发现是在链接时找不到名为<code>ltdl</code>的库。</p>
<pre><code>$ ls /usr/lib64 | grep ltdl
libltdl.so.7
libltdl.so.7.3.0</code></pre>
<p>也就是说，没有名为<code>libltdl.so</code> 的动态库文件，要解决的话也很简单，找不到库文件我 们自己造一个：</p>
<pre><code>$ sudo ln -s /usr/lib64/libltdl.so.7 /usr/lib64/libltdl.so</code></pre>
<p><strong>PS: 类似其他的<code>checking NO</code> 的问题，都可以在<code>config.log</code>中找到原因！</strong></p>
<h2 id="其他可能出现的问题">其他可能出现的问题</h2>
<p>在研究所里的曙光超算(<code>CentOS5.5 Final, gcc-4.1.2, scons-2.3.1,python2.4</code>)上 安装时出现的问题。</p>
<p>在该环境下，直接<code>./configure</code>时，会报如下错误： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">checking for C compiler ... (cached) gcc</span><br><span class="line">checking if gcc works ... (cached) no</span><br><span class="line"></span><br><span class="line">  Fatal missing dependency</span><br><span class="line">------------------------</span><br></pre></td></tr></table></figure></p>
<p>Google后发现这个报错是由<code>scons-2.3.1</code>对<code>Python-2.6</code>之前版本存在兼容性问题 而导致的。</p>
<p>有如下三种解决办法：</p>
<ol style="list-style-type: decimal">
<li><p>升级<code>Python</code>到较新的版本(2.7)</p></li>
<li><p>降级<code>Scons</code>(2.3.0)</p></li>
<li><p>编辑 <code>/usr/local/lib/scons-2.3.1/SCons/Node/__init__.py</code> 文件，Line 1004 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> list(chain.from_iterable(filter(<span class="keyword">None</span>, [self.sources, self.depends, self.implicit])))</span><br></pre></td></tr></table></figure></p></li>
</ol>
<p>替代为: <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> self.implicit <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">    <span class="keyword">return</span> self.sources + self.depends</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> self.sources + self.depends + self.implicit</span><br></pre></td></tr></table></figure></p>
<h2 id="参考">参考</h2>
<ul>
<li><a href="http://www.ahay.org/wiki/Installation#Precompiled_binary_packages" target="_blank" rel="noopener">Madagascar Installation</a></li>
<li><a href="http://www.ahay.org/wiki/Advanced_Installation#Platform-specific_installation_advice%3E" target="_blank" rel="noopener">Advanced Installation</a></li>
<li><a href="https://groups.google.com/forum/#!topic/osdeve_mirror_geophysics_rsf-user/AwnyyKjJ2SI" target="_blank" rel="noopener">How can I install Madagascar when the gcc version is 4.1.2</a></li>
</ul>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-10-26： 初稿</li>
<li>2016-07-19： 更新存在的问题</li>
<li>2016-10-07： 更新问题的解决方案</li>
<li>2016-11-10： 添加BLAS库找不到的另一种解决方案</li>
<li>2016-11-14： 添加在曙光超算上出现的问题</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Exploration Seismology </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 安装 </tag>
            
            <tag> Madagascar </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一些有用的算法收集]]></title>
      <url>https://whu-pzhang.github.io/useful-algorithms.html</url>
      <content type="html"><![CDATA[<p>收集了一些可能会用到的小算法。</p>
<h2 id="判断字节序">判断字节序</h2>
<p>在处理数据是常常会碰到字节序(Byte Endian)的问题</p>
<p>Linux下可以直接用Shell命令查看：</p>
<pre><code>lscpu | grep -i byte</code></pre>
<a id="more"></a>
<h3 id="c语言版">C语言版</h3>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> test = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (*(<span class="keyword">char</span> *)&amp;test)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Little endian!\n"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Big endian!\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其原理为：取整形变量test的地址强制转换为字符型指针 <code>(char *)</code>，这个地址 就只指向一个字节的内存块，其为四个字节中的最低地址，最后取这一字节内存块的值。</p>
<p>如果系统字节序为Little endian，则保存1的那一位必定在这一字节中，其值为1；</p>
<p>若为Big endian，则低位取出来的值为0.</p>
<h3 id="bash版">bash版</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -n I | od -to2 | head -n1 | cut -f2 -d<span class="string">" "</span> | cut -c6</span><br></pre></td></tr></table></figure>
<p>输出1为Little endian；</p>
<p>0为Big endian.</p>
<h3 id="python版">Python版</h3>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">"import sys;print(0 if sys.byteorder=='big' else 1)"</span></span><br></pre></td></tr></table></figure>
<p>写成脚本形式可以为：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line"><span class="keyword">if</span> pack(<span class="string">'@h'</span>, <span class="number">1</span>) == pack(<span class="string">'&lt;h'</span>, <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Little Endian"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Big Endian"</span></span><br></pre></td></tr></table></figure>
<h2 id="判断是否为2的次方">判断是否为2的次方</h2>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;  // need c99 support</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPowerOfTwo</span> <span class="params">(<span class="keyword">unsigned</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !(x &amp; (x<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原理：一个数若为2的次方，其二进制形式最高位肯定为1，其余位都为0.那么该数减去1的话，得到的二进制表示则恰恰相反， 最高位为0，其余位为1.这样的话，就可以通过按位与来判断了。</p>
<h2 id="产生一定范围内的随机数">产生一定范围内的随机数</h2>
<p>最显然的办法就是::</p>
<pre><code>rand() % N</code></pre>
<p>产生0到N-1之间的随机数，但是很多随机数生成器在数字低位上并不是随机的。更好的办法是</p>
<pre><code>(int)((double)rand() / ((double)RAND_MAX + 1) * N)</code></pre>
<p>看例子</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[N], b[N];</span><br><span class="line">    <span class="keyword">float</span> c[N], d[N];</span><br><span class="line"></span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;N; i++) &#123;</span><br><span class="line">        a[i] = rand() % N;  <span class="comment">// POOR!</span></span><br><span class="line">        b[i] = (<span class="keyword">int</span>)((<span class="keyword">double</span>)rand() / ((<span class="keyword">double</span>)RAND_MAX + <span class="number">1</span>) * N);  <span class="comment">// 产生0~N-1之间的整数</span></span><br><span class="line">        c[i] = (<span class="keyword">float</span>)rand() / ((<span class="keyword">float</span>)RAND_MAX / N + <span class="number">1</span>);   <span class="comment">// 产生0~N-1之间的浮点数</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"a[%d] = %d; b[%d] = %d; c[%d] = %f\n"</span>,</span><br><span class="line">            i, a[i], i, b[i], i, c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出::</p>
<pre><code>$ ./rand_test 
a[0] = 9; b[0] = 3; c[0] = 4.707045
a[1] = 4; b[1] = 5; c[1] = 1.947819
a[2] = 9; b[2] = 3; c[2] = 8.725301
a[3] = 1; b[3] = 6; c[3] = 2.441400
a[4] = 7; b[4] = 0; c[4] = 7.176581
a[5] = 1; b[5] = 2; c[5] = 5.303668
a[6] = 6; b[6] = 2; c[6] = 3.098936
a[7] = 0; b[7] = 3; c[7] = 5.129158
a[8] = 5; b[8] = 9; c[8] = 3.879813
a[9] = 3; b[9] = 6; c[9] = 7.315299</code></pre>
<p>总结下来，要产生[M, N]之间的随机数，可以按照以下的公式::</p>
<pre><code>M + rand()/(RAND_MAX / (N-M+1) + 1)</code></pre>
<h2 id="参考">参考</h2>
<ul>
<li><a href="http://serverfault.com/questions/163487/how-to-tell-if-a-linux-system-is-big-endian-or-little-endian" target="_blank" rel="noopener">How to tell if a Linux system is big endian or little endian?</a></li>
<li><a href="http://www.exploringbinary.com/ten-ways-to-check-if-an-integer-is-a-power-of-two-in-c/" target="_blank" rel="noopener">Ten Ways to Check if an Integer Is a Power Of Two in C</a></li>
<li><a href="http://c-faq.com/lib/randrange.html" target="_blank" rel="noopener">Get random integers in certain range</a></li>
</ul>
<h2 id="修改">修改</h2>
<ul>
<li>2015-10-16： 初稿</li>
<li>2016-04-14： 增加随机数部分</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Programming </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C </tag>
            
            <tag> Python </tag>
            
            <tag> 算法，Bash </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux安装Sublime Text 3]]></title>
      <url>https://whu-pzhang.github.io/install-sublime-text-3-under-linux.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>已全面转向 Atom，本文不再更新。</strong></p>
</blockquote>
<p>Sublime Text 3作为一款跨平台的编辑器，支持多种插件，语法高亮齐全，而且还有vi模式， 在Window环境下一直用的是这款编辑器。本文记录在CentOS7下安装，配置Sublime Text 3的过程。</p>
<a id="more"></a>
<h2 id="安装">安装</h2>
<p>从 <a href="http://www.sublimetext.com/3" target="_blank" rel="noopener">Sublime Text 3</a> 官网选择相应的版本下载。</p>
<p>我下载的是64位的 <code>tarball for other Linux distributions</code> 版本。</p>
<p>下载完成解压到指定目录下</p>
<pre><code>$ sudo tar jxvf sublime_text_3_build_3083_x64.tar.bz2 -C /opt/</code></pre>
<p>然后建立软连接到 <code>/usr/bin/</code> 目录下以便可以在终端启动</p>
<pre><code>$ sudo ln -s /opt/sublime_text_3/sublime_text /usr/bin/sublime</code></pre>
<p>加入应用程序列表</p>
<pre><code>$ sudo cp /opt/sublime_text_3/sublime_text.desktop /usr/share/applications/</code></pre>
<p>修改该文本:</p>
<pre><code>$ sudo vi /usr/share/applications/sublime_text.desktop</code></pre>
<p>将 <code>Exec</code> 和 <code>Icon</code> 这项改为：</p>
<pre><code>Exec=/opt/sublime_text_3/sublime_text
Icon=/opt/sublime_text_3/Icon/48x48/sublime-text.png</code></pre>
<p>其他的可以根据自己需求来修改。</p>
<p>修改完成后即可在 <code>Gnome应用程序 &gt; 编程</code> 中找到 sublime</p>
<ul>
<li><p>加入右键菜单</p>
<p>$ sublime ~/.local/share/applications/mimeapps.list</p></li>
</ul>
<p>加入以下内容：</p>
<pre><code>text/plain=sublime.desktop;</code></pre>
<h2 id="基础设置">基础设置</h2>
<p>sublime text 3自带的配置已经可以用了，加上自己的一些设置会更好。</p>
<p>其设置方式为：</p>
<p><code>Preferences--&gt;Settings-User</code> 打开配置文件，配置文件是以Python字典的格式存在的。</p>
<p>以下为个人的一些设置，每个选项的值可以在 <code>Preferences--&gt;Settings-Default</code> 中查看</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"color_scheme"</span>: <span class="string">"Packages/Monokai Extended/Monokai Extended.tmTheme"</span>,   <span class="comment"># 安装Monokai Extended后的主题设置</span></span><br><span class="line">    <span class="string">"default_line_ending"</span>: <span class="string">"unix"</span>,                      <span class="comment"># 以UNIX格式的"\n"为行结尾，而不是doc的 "\r\n"</span></span><br><span class="line">    <span class="string">"font_face"</span>: <span class="string">"Yahei Consolas Hybrid"</span>,               <span class="comment"># 字体设置</span></span><br><span class="line">    <span class="string">"font_size"</span>: <span class="number">13</span>,                                    <span class="comment"># 字号</span></span><br><span class="line">    <span class="string">"highlight_line"</span>: true,</span><br><span class="line">    <span class="string">"ignored_packages"</span>:</span><br><span class="line">    [</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"line_padding_bottom"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">"line_padding_top"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">"show_encoding"</span>: true,                              <span class="comment"># 状态栏显示编码</span></span><br><span class="line">    <span class="string">"show_line_endings"</span>: true,</span><br><span class="line">    <span class="string">"tab_size"</span>: <span class="number">4</span>,                                      <span class="comment"># tabwidth: 4个空格</span></span><br><span class="line">    <span class="string">"translate_tabs_to_spaces"</span>: true,</span><br><span class="line">    <span class="string">"vintage_ctrl_keys"</span>: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="插件管理">插件管理</h2>
<p>管理插件最简单的方法就是安装包管理器。</p>
<h3 id="安装-1">安装</h3>
<ul>
<li><p><strong>自动安装</strong></p></li>
<li><p>组合键 <code>ctrl+``或者</code>View &gt; Show Console` 打开控制台，输入以下 Python 代码</p></li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure>
<p>这段代码会下载 <code>Package Control.sublime-package</code> 到 Installed Packages 文件夹（若没有的话会创建）。</p>
<ul>
<li><p><strong>手动安装</strong></p></li>
<li>Preferences &gt; Browse Packages</li>
<li>进入 Installed Packages 文件夹</li>
<li>下载 <a href="https://packagecontrol.io/Package%20Control.sublime-package" target="_blank" rel="noopener">Package Control.sublime-package</a> 至该文件夹</li>
<li><p>重启 Sublime Text 3</p></li>
</ul>
<h3 id="使用">使用</h3>
<p>组合键 <code>Ctrl+Shift+P</code> 打开包管理器，输入 <code>PCI</code> 即可搜索安装插件包</p>
<h3 id="常用插件列表">常用插件列表</h3>
<ul>
<li>IMESupport: 解决中文输入框不跟随的问题</li>
<li>Monokai Extended: 增强的Monokai主题</li>
<li>MinimalFortran: Fortran语法高亮</li>
</ul>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://www.sublimetext.com/docs/3/" target="_blank" rel="noopener">Sublime Text 3 Documentation</a></li>
<li><a href="http://docs.sublimetext.info/en/latest/index.html" target="_blank" rel="noopener">Sublime Text Unofficial Documentation</a></li>
<li><a href="https://packagecontrol.io/installation" target="_blank" rel="noopener">Package Control</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[getopt用法]]></title>
      <url>https://whu-pzhang.github.io/usage-of-getopt.html</url>
      <content type="html"><![CDATA[<h2 id="getopt介绍">getopt介绍</h2>
<p><code>getopt</code> 为Linux下处理命令行参数的函数，相对于自己编写代码来解析命令行参数， getopt提供了更为方便和友好的方式。</p>
<p>函数 <code>getopt</code> 包含于系统头文件 <code>unistd.h</code> 中，其函数原型为:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getopt</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *<span class="keyword">const</span> argv[], <span class="keyword">const</span> <span class="keyword">char</span> *optstring)</span></span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> *optarg;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> optind, opterr, optopt;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>其中，<code>argc</code> 和 <code>argv</code> 是由 <code>main()</code> 函数传递的参数个数和内容， <code>optstring</code> 代表待处理的选项字符串;</p>
<ul>
<li><code>optarg</code>: 指向当前选项参数的指针</li>
<li><code>optind</code>: 再次调用 <code>getopt()</code> 时，下一个 <code>argv</code> 指针的索引</li>
<li><code>opterr</code>: 非零时， <code>getopt</code> 会向标准错误输出错误信息</li>
<li><code>optopt</code>: 遭遇未知选项或者遗漏必须参数的选项时，用来存储该选项</li>
</ul>
<p><code>optstring</code> 中内容的意义（例如 <code>getopt(argc, argv, &quot;ab:c::&quot;)</code>）</p>
<ul>
<li>单个字符: 表示选项,例如a，b和c</li>
<li>单个字符后一个冒号： 表示该选项后必须跟一个参数。参数紧跟在选项后或者以空格隔开，该参数指针赋值给optarg</li>
<li>单个字符后两个冒号： 表示该选项后可以跟一个参数也可以不跟。若跟一个参数，则该参数必须紧跟在选项后而不能以空格隔开。</li>
</ul>
<p>若 <code>getopt</code> 遇到一个不包括于 <code>argv</code> 中的选项，或是一个没有参数的选项，将会返回 <code>?</code> 并将全局变量 <code>optopt</code> 设置为该选项字符； 若选项首字符为一个冒号 <code>:</code> ，getopt返回 <code>:</code> 代替 <code>?</code> 来表明没有选项参数。</p>
<h2 id="实例说明">实例说明</h2>
<p>getopt 的通常用法如下：</p>
<ul>
<li><code>getopt</code> 在循环中调用，当其返回-1时表明没有选项了，循环就此结束</li>
<li><code>switch</code> 语句用来对getopt返回的值进行分派</li>
<li>利用第二个循环来处理余下的非选项参数</li>
</ul>
<p>多说无益，看实例：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *agrv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> aflag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> bflag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> *cvalue = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">int</span> index, i;</span><br><span class="line"></span><br><span class="line">    opterr = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((c=getopt(argc, argv, <span class="string">"abc:"</span>)) != <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">switch</span> (c) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                aflag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'b'</span>:</span><br><span class="line">                bflag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'c'</span>:</span><br><span class="line">                cvalue = optarg;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'?'</span>:</span><br><span class="line">                <span class="keyword">if</span> (optopt == <span class="string">'c'</span>)</span><br><span class="line">                    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Option -%c requires an argument.\n"</span>, optopt);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isprint</span>(optopt))</span><br><span class="line">                    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unknow option -%c.\n"</span>, optopt);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Unknown option character '\\x%x'.\n"</span>, optopt); <span class="comment">// 以16进制输出未知选项</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">abort</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"aflag = %d, bflag = %d, cvalue = %s\n"</span>,</span><br><span class="line">                aflag, bflag, cvalue);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (index = optind; index&lt;argc; index++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Non-option argument %s\n"</span>, argv[index]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译链接成可执行文件，运行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$ ./testopt</span><br><span class="line">aflag = 0, bflag = 0, cvalue = (null)</span><br><span class="line"></span><br><span class="line">$ ./testopt -a -b</span><br><span class="line">aflag = 1, bflag = 1, cvalue = (null)</span><br><span class="line"></span><br><span class="line">$ ./testopt -ab</span><br><span class="line">aflag = 1, bflag = 1, cvalue = (null)</span><br><span class="line"></span><br><span class="line">$ ./testopt -c foo</span><br><span class="line">aflag = 0, bflag = 0, cvalue = foo</span><br><span class="line"></span><br><span class="line">$ ./testopt -cfoo</span><br><span class="line">aflag = 0, bflag = 0, cvalue = foo</span><br><span class="line"></span><br><span class="line">$ ./testopt arg1</span><br><span class="line">aflag = 0, bflag = 0, cvalue = (null)</span><br><span class="line">Non-option argument arg1</span><br><span class="line"></span><br><span class="line">$ ./testopt -a arg1</span><br><span class="line">aflag = 1, bflag = 0, cvalue = (null)</span><br><span class="line">Non-option argument arg1</span><br><span class="line"></span><br><span class="line">$ ./testopt -c foo arg1</span><br><span class="line">aflag = 0, bflag = 0, cvalue = foo</span><br><span class="line">Non-option argument arg1</span><br><span class="line"></span><br><span class="line">$ ./testopt -a -- -b</span><br><span class="line">aflag = 1, bflag = 0, cvalue = (null)</span><br><span class="line">Non-option argument -b</span><br><span class="line"></span><br><span class="line">$ ./testopt -a -</span><br><span class="line">aflag = 1, bflag = 0, cvalue = (null)</span><br><span class="line">Non-option argument -</span><br><span class="line"></span><br><span class="line">$ ./testopt -a -我</span><br><span class="line">Unknown option character <span class="string">'\xffffffce'</span>.</span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<ul>
<li><a href="http://www.gnu.org/software/libc/manual/html_node/Getopt.html#Getopt" target="_blank" rel="noopener">The GNU C Library</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Programming </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C语言中二维数组的动态分配]]></title>
      <url>https://whu-pzhang.github.io/dynamic-allocate-2d-array.html</url>
      <content type="html"><![CDATA[<p>在C语言中，数组是最常用到的。分为静态数组和动态数组。 静态数据即数组长度预先定义好，一旦给定大小就无法再改变长度，静态数组用完后会自动释放 内存。</p>
<p>动态数组的长度则是随程序的需要来指定的。其需要的内存由内存分配函数 <code>malloc</code> 或 <code>calloc</code> 从堆（heap）上分配，用完后需要程序员自己释放内存。</p>
<p>标准C语言中提供了一维数组动态分配和释放的函数，包含于头文件 <code>stdlib.h</code> 中。</p>
<a id="more"></a>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> *<span class="title">malloc</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num_bytes)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> *<span class="title">calloc</span><span class="params">(<span class="keyword">int</span> num_elems, <span class="keyword">int</span> elem_size)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> *<span class="title">realloc</span><span class="params">(<span class="keyword">void</span> *mem_address, <span class="keyword">unsigned</span> <span class="keyword">int</span> newsize)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">free</span><span class="params">(<span class="keyword">void</span> *p)</span></span>;</span><br></pre></td></tr></table></figure>
<p>对于一维数组，直接使用这四个函数就可以了。但有的时候，我们需要动态的创建 二维数组或者三维数组。这时候就需要自行在这些函数的基础上，编写多维数组分配的函数。</p>
<h2 id="分配内存不连续的空间">分配内存不连续的空间</h2>
<p>以二维整型数组 <code>int array[m][n]</code> 为例。</p>
<p>遵循从外到里，也就是从变化慢的维到变化快的维，逐层申请的原则。</p>
<p>最外层的指针就是数组名<code>array</code>，为一个指针的指针。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给二维数组动态分配内存</span></span><br><span class="line"><span class="keyword">int</span> **p;</span><br><span class="line"><span class="comment">// 指针p指向数组array的第一维，有m个元素</span></span><br><span class="line">p = (<span class="keyword">int</span> **)<span class="built_in">malloc</span>(m * <span class="keyword">sizeof</span>(<span class="keyword">int</span> *));</span><br></pre></td></tr></table></figure>
<p>次层指针为 <code>array[]</code>, 是一个一维指针，直接对其分配内存就行了。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    p[i] = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br></pre></td></tr></table></figure>
<p>综合这两步：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> **<span class="title">alloc2int</span><span class="params">(<span class="keyword">size_t</span> n1, <span class="keyword">size_t</span> n2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> **p;</span><br><span class="line">    <span class="keyword">if</span> ((p = (<span class="keyword">int</span> **)<span class="built_in">malloc</span>(n1 * <span class="keyword">sizeof</span>(<span class="keyword">int</span> *))) == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n1; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((p[i] = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n2 * <span class="keyword">sizeof</span>(<span class="keyword">int</span>))) == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">free2int</span><span class="params">(<span class="keyword">int</span> **p, <span class="keyword">size_t</span> n1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n1; i++) &#123;</span><br><span class="line">        <span class="built_in">free</span>(p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="测试">测试</h3>
<p>我们可以测试看看，这样分配二维数组是否可行</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROW 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COL 3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> **<span class="title">alloc2int</span><span class="params">(<span class="keyword">size_t</span> n1, <span class="keyword">size_t</span> n2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">free2int</span><span class="params">(<span class="keyword">int</span> **p, <span class="keyword">size_t</span> n1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> **m;</span><br><span class="line"></span><br><span class="line">    m = alloc2int(ROW, COL);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i=<span class="number">0</span>; i&lt;ROW; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> j=<span class="number">0</span>; j&lt;COL; j++) &#123;</span><br><span class="line">            m[i][j] = i+j;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i1=<span class="number">0</span>; i1&lt;ROW; i1++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"m[%d] = %p\n"</span>, i1, m[i1]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i2=<span class="number">0</span>; i2&lt;COL; i2++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"&amp;m[%d][%d] = %p; m[%d][%d] = %d\n"</span>, i1, i2, &amp;(m[i1][i2]),</span><br><span class="line">                i1, i2, m[i1][i2]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    free2int(m, ROW);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译链接：</p>
<pre><code>$ gcc -Wall -std=c99 test.c alloc.c
$ ./a.out
m[0] = 0x1433030
&amp;m[0][0] = 0x1433030; m[0][0] = 0
&amp;m[0][1] = 0x1433034; m[0][1] = 1
&amp;m[0][2] = 0x1433038; m[0][2] = 2

m[1] = 0x1433050
&amp;m[1][0] = 0x1433050; m[1][0] = 1
&amp;m[1][1] = 0x1433054; m[1][1] = 2
&amp;m[1][2] = 0x1433058; m[1][2] = 3</code></pre>
<p>可以看到，在二维数组的第一行和第二行中，内存是连续的，但是行与行之间内存就不连续了。 这样的话，我们就不能以一维数组指针的形式来对其进行取值，<code>*(*(a+i)+j)</code> 的值就不等于 <code>a[i][j]</code> 了。</p>
<h2 id="分配内存连续的空间">分配内存连续的空间</h2>
<p>我们知道，在静态的二维数组中，内存是连续的，也就是说可以将二维数组当作 特殊的一维数组来进行遍历。上面的方法明显做不到这一点。</p>
<p>为了使得内存连续。还需另外一种思路。</p>
<p>上述第一种方法内存不连续的原因在于，二维数组行指针的分配的在循环中依次分别进行的， 不能保证每个行指针之间相隔 <code>sizeof(int)*COL</code> 个字节。</p>
<p>那么，为了使得动态分配的二维数组内存也同静态二维数组一样是连续的，我们就需要将 每个行指针联系起来。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> **<span class="title">alloc2int</span><span class="params">(<span class="keyword">size_t</span> n1, <span class="keyword">size_t</span> n2)</span></span></span><br><span class="line"><span class="function"><span class="comment">// allocate a int matrix</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> **m;</span><br><span class="line">    <span class="comment">// allocate pointers to rows (m is actually a pointer to an array)</span></span><br><span class="line">    <span class="comment">// m 为一个行指针</span></span><br><span class="line">    <span class="keyword">if</span> ((m = (<span class="keyword">int</span> **)<span class="built_in">malloc</span>(n1*<span class="keyword">sizeof</span>(<span class="keyword">int</span> *))) == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">// allocate rows and set pointers to them</span></span><br><span class="line">    <span class="comment">// m[0] 指向整个数组内存块的首地址</span></span><br><span class="line">    <span class="keyword">if</span> ((m[<span class="number">0</span>] = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n1*n2*<span class="keyword">sizeof</span>(<span class="keyword">int</span>))) == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i1=<span class="number">1</span>; i1&lt;n1; i1++) m[i1]=m[i1<span class="number">-1</span>]+n2;</span><br><span class="line">    <span class="comment">// return pointers to array of pointers to rows</span></span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">free2int</span><span class="params">(<span class="keyword">int</span> **m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">free</span>(m[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">free</span>(m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="测试-1">测试</h3>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROW 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COL 3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> **<span class="title">alloc2int</span><span class="params">(<span class="keyword">size_t</span> n1, <span class="keyword">size_t</span> n2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">free2int</span><span class="params">(<span class="keyword">int</span> **p)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> **m;</span><br><span class="line"></span><br><span class="line">    m = alloc2int(ROW, COL);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ROW; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;COL; j++) &#123;</span><br><span class="line">            m[i][j] = i+j;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> *start = *m; <span class="comment">// *m = &amp;m[0][0]</span></span><br><span class="line">    <span class="keyword">int</span> * <span class="keyword">const</span> end = start + ROW*COL;</span><br><span class="line">    <span class="keyword">for</span> ( ; start != end; start++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%p -&gt; %d\n"</span>, start, *start);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//printf("%p\n", m[0]+4);</span></span><br><span class="line"></span><br><span class="line">    free2int(m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译链接：</p>
<pre><code>$ gcc -Wall -std=c99 test.c alloc.c
$ ./a.out
0x135d030 -&gt; 0
0x135d034 -&gt; 1
0x135d038 -&gt; 2
0x135d03c -&gt; 1
0x135d040 -&gt; 2
0x135d044 -&gt; 3</code></pre>
<p>可以看到，现在的二维数组内存是连续的了，我们用一个循环便可以遍历整个数组。</p>
<h2 id="总结">总结</h2>
<p>对与二维动态数组的分配，我们要了解C语言中数组和指针的联系和区别，具体可以参考 <a href="/array-and-pointers.html">数组和指针</a></p>
<p>上述两种方法都可行，但是推荐用第二种方法！</p>
]]></content>
      
        <categories>
            
            <category> Programming </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[数组和指针]]></title>
      <url>https://whu-pzhang.github.io/array-and-pointers.html</url>
      <content type="html"><![CDATA[<h2 id="数组名和指针">数组名和指针</h2>
<p>在C语言中，数组和指针是紧密联系在一起的，对于数组来说，数组名就是数组第一个元素的地址， 不同的是数组名是一个常量，而指针则是变量。这是两者之间的最主要区别。</p>
<p>事实上，数组名和指针除了上述区别外，还有其他的一些不同：</p>
<ol style="list-style-type: decimal">
<li><p>在声明时，只有作为函数参数的数组名编译器会将其转化成指针。其他情况下，数组名和指针是完全不一样的。</p></li>
<li><p>在引用上，数组名只需访问内存一次；而指针需要访问内存两次。</p></li>
<li><p>若a是一个数组名，p为指向该数组的指针变量，使用 <code>a</code> 和 <code>&amp;a</code> 得到的值是一样的。对 <code>p</code> 来说则不一样</p></li>
<li><p><code>sizeof a</code> 得到的是整个数组所占字节的大小，而 <code>sizeof p</code> 得到的是指针所占字节的大小(32位系统为4个字节，64位系统为8个字节)</p></li>
<li><p>尽管 <code>a</code>和 <code>&amp;a[0]</code> 得到的地址是一样的，但是其意义是不一样的，<code>a</code>表示的是存储数组这块连续内存空间的首地址而 <code>&amp;a[0]</code>表示的是数组第一个元素的首地址。</p></li>
</ol>
<a id="more"></a>
<p>举例说明：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_arr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span></span>; <span class="comment">// const是为了保护数组内容</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum_arr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span></span>; <span class="comment">// 这里和int sum_arr(const int *a, int n)是一样的</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[SIZE];</span><br><span class="line">    <span class="keyword">int</span> *p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;SIZE; i++) <span class="comment">// 初始化 产生10以内的随机数</span></span><br><span class="line">        a[i] = rand()%<span class="number">10</span> + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    p = a; <span class="comment">// 将指针变量指向数组</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %p\n&amp;a = %p\n"</span>, a, &amp;a); <span class="comment">// a和&amp;a都为数组开始的地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"p = %p\n&amp;p = %p\n\n"</span>, p, &amp;p); <span class="comment">// p指向数组开始，&amp;p则为存储指针p的地址</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"sizeof a = %d\n"</span>, <span class="keyword">sizeof</span> a); <span class="comment">// 数组a包含int类型的5个元素</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"sizeof p = %d\n\n"</span>, <span class="keyword">sizeof</span> p); <span class="comment">// 指针占字节数与系统位数有关，64位系统占8个字节</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The contents of array are: \n"</span>);</span><br><span class="line">    show_arr(a, SIZE);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\nSum of all elements is: %d\n"</span>, sum_arr(a, SIZE));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_arr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%3d "</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum_arr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        total += a[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译: <code>gcc -Wall -std=c99 test.c</code></p>
<p>输出如下：</p>
<pre><code>a = 000000000022FE30
&amp;a = 000000000022FE30
p = 000000000022FE30
&amp;p = 000000000022FE28

sizeof a = 20
sizeof p = 8

The contents of array are:
  2   8   5   1  10
Sum of all elements is: 26</code></pre>
<h2 id="指针数组和数组指针">指针数组和数组指针</h2>
<p>常常被这两个概念弄晕，其实用英文更加好理解。</p>
<ul>
<li><strong>指针数组</strong>: an array of pointers, 首先它是一个数组，数组元素都为指针</li>
<li><strong>数组指针</strong>： a pointer to an array, 首先它是一个指针，指向一个数组，也称行指针</li>
</ul>
<p>其用法区别如下：</p>
<ul>
<li><code>int *ar[10]</code>
<ul>
<li>指针数组</li>
<li>表示： ar是包含10个int类指针的数组</li>
<li>元素表示： <code>*ar[i]</code> 和 <code>*(ar[i])</code> 是一样的, <code>[]</code> 优先级高于 <code>*</code></li>
</ul></li>
<li><code>int (*pt)[10]</code>
<ul>
<li>数组指针</li>
<li>表示： pt为指向包含10个int值数组的指针</li>
<li>元素表示： <code>(*ar)[i]</code></li>
</ul></li>
</ul>
<div class="figure">
<img src="/images/2015073100.png">

</div>
<p>指针数组比较好理解，就是用来存储指针的数组。举例说明：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> *a[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数组a用来存储两个指针</span></span><br><span class="line">    a[<span class="number">0</span>] = &amp;i; <span class="comment">// a[0]和a[1]分别指向i和j</span></span><br><span class="line">    a[<span class="number">1</span>] = &amp;j;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"*a[0] = %d\n*a[1] = %d\n"</span>, *a[<span class="number">0</span>], *a[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出如下::</p>
<pre><code>*a[0] = 1
*a[1] = 2</code></pre>
<p>但是数组指针就看起看有点奇怪了。</p>
<p>我们平时定义指针都是在数据类型后面加上指针变量名，但是数组指针为什么却是按 <code>int (*pt)[10]</code> 来定义？其实数组指针的原型是这样的： <code>int (*)[10] pt</code> , <code>int (*)[10]</code> 是指针类型，表示指针变量 <code>pt</code> 指向一个包含有10个int值的数组； <code>pt</code> 每加1，就跳过 <code>10 * sizeof(int)</code> 个字节。</p>
<p>将数组指针当作 <strong>行指针</strong> 也比较好理解，举例：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROWS 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COLS 2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[ROWS][COLS] = &#123; &#123;<span class="number">2</span>,<span class="number">4</span>&#125;, &#123;<span class="number">6</span>,<span class="number">8</span>&#125;, &#123;<span class="number">1</span>,<span class="number">3</span>&#125;, &#123;<span class="number">5</span>,<span class="number">7</span>&#125; &#125;;</span><br><span class="line">    <span class="keyword">int</span> (*p)[<span class="number">2</span>]; <span class="comment">// 声明数组指针</span></span><br><span class="line"></span><br><span class="line">    p = a;</span><br><span class="line">    <span class="comment">// 将其指向数组a,这里p指向第一个含有两个int值的数组,即a[0]</span></span><br><span class="line">    <span class="comment">// 那么 p+1 指向第二个大小为2个int的数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ROWS; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"p+%d = %p\n"</span>, i, p+i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ROWS; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*p+%d = %p\n"</span>, i, *p+i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ROWS; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;COLS; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"*(*(p+%d)+%d) = %d\t"</span>, i, j, *(*(p+i)+j));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> *start = *p; <span class="comment">// *p == &amp;a[0][0]</span></span><br><span class="line">    <span class="keyword">int</span> * <span class="keyword">const</span> end = start + ROWS*COLS;</span><br><span class="line">    <span class="comment">// 将二维数组当成一维数组来循环</span></span><br><span class="line">    <span class="keyword">for</span> ( ; start != end; start++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%-3d"</span>, *start);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出:</p>
<pre><code>p+0 = 000000000022FE00
p+1 = 000000000022FE08
p+2 = 000000000022FE10
p+3 = 000000000022FE18
*p+0 = 000000000022FE00
*p+1 = 000000000022FE04
*p+2 = 000000000022FE08
*p+3 = 000000000022FE0C
*(*(p+0)+0) = 2 *(*(p+0)+1) = 4
*(*(p+1)+0) = 6 *(*(p+1)+1) = 8
*(*(p+2)+0) = 1 *(*(p+2)+1) = 3
*(*(p+3)+0) = 5 *(*(p+3)+1) = 7
2  4  6  8  1  3  5  7</code></pre>
<p>从这段代码结果我们可以看出：</p>
<ol style="list-style-type: decimal">
<li><p>p每加1都跳过 <code>2 * sizeof(int)</code> 个字节；而 <code>*p</code> 每加1则只跳过 <code>sizeof(int)</code> 个字节</p></li>
<li><p><code>p+1</code> 和 <code>*(p+1)</code> 值是一样的，但是意义不同，与数组中 <code>a</code> 和 <code>&amp;a[0]</code> 的关系类似,前者表示的是整个数组内存块开始的地址，后者表示的是每个数组首元素的地址。</p></li>
<li><p>可以将数组指针理解为指针的指针，需要两次取值运算才能得到存储的值。</p></li>
<li><p>数组指针p的用法和二维数组名a的用法是一样的，尽管其为一个指针变量，仍然可以使用<code>p[2][1]</code>这样的符号。表示单个元素的时候，数组名和数组指针都可行： <code>a[m][n] = *(*(a+m)+n)</code> 或 <code>p[m][n] = *(*(p+m)+n)</code></p></li>
<li><p>二维数组可以当作特殊的一维数组，上述代码利用一个for循环就遍历了一个二维数组也说明了这一点。</p></li>
</ol>
<h2 id="总结">总结</h2>
<p>其实不论是指针数组还是数组指针，都是复合类型声明。搞明白复合类型声明的规则就都 很好理解。</p>
<p>最简单的办法就是 <strong>从右至左来阅读声明，离变量名最近的符号对变量的类型有最直接的影响。</strong></p>
<p>举一个简单的例子: <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *ptrs[<span class="number">10</span>]</span><br></pre></td></tr></table></figure></p>
<p>从右至左： 首先知道我们定义的是一个大小为10的数组，它的名字为<code>ptrs</code>，然后知道 数组中存放的是指向<code>int</code>的指针。</p>
<p>但是对于: <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> (*pArray)[<span class="number">10</span>]</span><br></pre></td></tr></table></figure></p>
<p>这种有括号的声明，需要先考虑括号内的部分。</p>
<p>由内而外，从右至左：首先是圆括号内的部分，<code>*pArray</code>意味着<code>pArray</code>是一个指针， 接下来观察右边，可知道<code>pArray</code>是指向大小为10的数组的指针，最后观察左边，知道数组 的元素是‵int‵类型，这样最终的含义就清楚了，<code>pArray</code> 是一个指针，它指向一个<code>int</code> 数组，数组中包含有10个元素。</p>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://blog.csdn.net/touch_2011/article/details/6966980" target="_blank" rel="noopener">数组指针和指针数组</a></li>
<li><a href="http://www.informit.com/store/c-primer-plus-9780321928429" target="_blank" rel="noopener">C Primer Plus, 6th Edition</a></li>
<li><a href="http://www.cnblogs.com/mq0036/p/3382732.html" target="_blank" rel="noopener">数组指针和指针数组的区别</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-07-31 初稿</li>
<li>2017-05-26 添加总结</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Programming </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地球物理学家列表]]></title>
      <url>https://whu-pzhang.github.io/geophysicist.html</url>
      <content type="html"><![CDATA[<p>欢迎补充。</p>
<h2 id="天然地震">天然地震</h2>
<table>
<thead>
<tr class="header">
<th align="left">Name</th>
<th align="left">Keywords</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left"><a href="http://eqseis.geosc.psu.edu/~cammon/" target="_blank" rel="noopener">Charles J. Ammon</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.mantleplumes.org/DLA.html%3E" target="_blank" rel="noopener">Don L. Anderson</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geos.ed.ac.uk/homes/acurtis/" target="_blank" rel="noopener">Andrew Curtis</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://bullard.esc.cam.ac.uk/~chapman/" target="_blank" rel="noopener">Chris Chapman</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://web.gps.caltech.edu/~clay/" target="_blank" rel="noopener">Robert W. Clayton</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.phys.uconn.edu/~cormier" target="_blank" rel="noopener">Vernon F. Cormier</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geo.uu.nl/~deuss/" target="_blank" rel="noopener">Arwen Deuss</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://web.mst.edu/~sgao/" target="_blank" rel="noopener">Stephen Shangxing Gao</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.mpl.ucsd.edu/people/pgerstoft/" target="_blank" rel="noopener">Peter Gerstoft</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.ualberta.ca/~ygu/" target="_blank" rel="noopener">Yu Jeffrey Gu</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.gps.caltech.edu/content/donald-v-helmberger" target="_blank" rel="noopener">Donald V. Helmberger</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://eaps4.mit.edu/faculty/Hilst/" target="_blank" rel="noopener">Robert van der Hilst</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geo.titech.ac.jp/lab/hirose/en/home.html" target="_blank" rel="noopener">Kei Hirose</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.seismology.harvard.edu/ishii.html" target="_blank" rel="noopener">Miaki Ishii</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geol.ucsb.edu/faculty/ji/" target="_blank" rel="noopener">Chen Ji</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://quake.utah.edu/koper/Home.html" target="_blank" rel="noopener">Keith D. Koper</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://igppweb.ucsd.edu/~gabi/" target="_blank" rel="noopener">Gabi Laske</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://web.gps.caltech.edu/~linf/" target="_blank" rel="noopener">Fan-Chi Lin</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://es.ucsc.edu/~thorne/" target="_blank" rel="noopener">Thorne Lay</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://igppweb.ucsd.edu/~guy/" target="_blank" rel="noopener">Guy Master</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://earthscience.rice.edu/faculty/niu/" target="_blank" rel="noopener">Fenglin Niu</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://geophysics.eas.gatech.edu/people/zpeng/" target="_blank" rel="noopener">Zhigang Peng</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://seismo.berkeley.edu/~barbara/" target="_blank" rel="noopener">Barbara Romanowicz</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.earth.lsa.umich.edu/~jritsema/" target="_blank" rel="noopener">Jeroen Ritsema</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://ciei.colorado.edu/ritzwoller_m" target="_blank" rel="noopener">Michael Ritzwoller</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://homepages.see.leeds.ac.uk/~earsro" target="_blank" rel="noopener">Sebatian Rost</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://seismolab.gso.uri.edu/~savage/" target="_blank" rel="noopener">Brian Savage</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.geol.umd.edu/~nschmerr" target="_blank" rel="noopener">Nicholas Schmerr</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://mahi.ucsd.edu/shearer/" target="_blank" rel="noopener">Peter M. Shearer</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://inside.mines.edu/~rsnieder/" target="_blank" rel="noopener">Roel Snieder</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.geology.illinois.edu/people/xsong/Sites/index.html" target="_blank" rel="noopener">Xiaodong Song</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.jamstec.go.jp/res/ress/stan/TanakaHome/Welcome.html" target="_blank" rel="noopener">Satoru Tanaka</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://rses.anu.edu.au/~hrvoje/" target="_blank" rel="noopener">Hrvoje Tkalčić</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://web.utah.edu/thorne/index.html" target="_blank" rel="noopener">Michael Thorne</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.princeton.edu/geosciences/tromp/index.xml" target="_blank" rel="noopener">Jeroen Tromp</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://web.gps.caltech.edu/~tsai/" target="_blank" rel="noopener">Victor C. Tsai</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://earthweb.ess.washington.edu/vidale/John_Vidale/Home.html" target="_blank" rel="noopener">John Vidale</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://seis.ustc.edu.cn/" target="_blank" rel="noopener">Lianxing Wen</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://www.cuhk.edu.hk/sci/essc/people/yang.html" target="_blank" rel="noopener">Hongfeng Yang</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://staff.ustc.edu.cn/~hjyao/" target="_blank" rel="noopener">Huajian Yao</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://staff.ustc.edu.cn/~zhang11/" target="_blank" rel="noopener">Haijiang Zhang</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.aob.gp.tohoku.ac.jp/kazan/zhao_English.html" target="_blank" rel="noopener">Dapeng Zhao</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="http://anquetil.colorado.edu/szhong/" target="_blank" rel="noopener">Shijie Zhong</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="noopener">Lupei Zhu</a></td>
<td align="left"></td>
</tr>
</tbody>
</table>
<h2 id="勘探地震">勘探地震</h2>
<table>
<thead>
<tr class="header">
<th align="left">Name</th>
<th align="left">Keywords</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left"><a href="http://www.cwp.mines.edu/~norm/" target="_blank" rel="noopener">Norman Bleistein</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"><a href="http://newton.mines.edu/paul/home.php" target="_blank" rel="noopener">Paul Sava</a></td>
<td align="left"></td>
</tr>
<tr class="odd">
<td align="left"><a href="https://www.jsg.utexas.edu/researcher/sergey_fomel/" target="_blank" rel="noopener">Sergey Formel</a></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"></td>
<td align="left"></td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Python多版本共存之pyenv]]></title>
      <url>https://whu-pzhang.github.io/python-pyenv.html</url>
      <content type="html"><![CDATA[<p>经常遇到这样的情况：</p>
<ul>
<li>系统自带的Python是2.6，自己需要Python 2.7中的某些特性；</li>
<li>系统自带的Python是2.x，自己需要Python 3.x；</li>
</ul>
<p>此时需要在系统中安装多个Python，但又不能影响系统自带的Python，即需要实现Python的多版本共存。<a href="https://github.com/yyuu/pyenv" target="_blank" rel="noopener">pyenv</a> 就是这样一个Python版本管理器。</p>
<h2 id="安装pyenv">安装pyenv</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git://github.com/yyuu/pyenv.git ~/.pyenv</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'export PYENV_ROOT="$HOME/.pyenv"'</span> &gt;&gt; ~/.bashrc</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'export PATH="$PATH:$PYENV_ROOT/bin"'</span> &gt;&gt; ~/.bashrc</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'eval "$(pyenv init -)"'</span> &gt;&gt; ~/.bashrc</span><br><span class="line">$ <span class="built_in">exec</span> <span class="variable">$SHELL</span> -l</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装python">安装Python</h2>
<h3 id="查看可安装的版本">查看可安装的版本</h3>
<p>$ pyenv install –list</p>
<p>该命令会列出可以用pyenv安装的Python版本，仅列举几个::</p>
<pre><code>2.7.8   # Python 2最新版本
3.4.1   # Python 3最新版本
anaconda-2.0.1  # 支持Python 2.6和2.7
anaconda3-2.0.1 # 支持Python 3.3和3.4</code></pre>
<p>其中形如 <code>x.x.x</code> 这样的只有版本号的为Python官方版本，其他的形如 <code>xxxxx-x.x.x</code> 这种既有名称又有版本后的属于“衍生版”或发行版。</p>
<h3 id="安装python的依赖包">安装Python的依赖包</h3>
<p>在安装Python时需要首先安装其依赖的其他软件包，已知的一些需要预先安装的库如下。</p>
<p>在CentOS/RHEL/Fedora下::</p>
<pre><code>sudo yum install readline readline-devel readline-static
sudo yum install openssl openssl-devel openssl-static
sudo yum install sqlite-devel
sudo yum install bzip2-devel bzip2-libs</code></pre>
<h3 id="安装指定版本">安装指定版本</h3>
<p>使用如下命令即可安装python 3.4.1：</p>
<pre><code>$ pyenv install 3.4.1 -v</code></pre>
<p>该命令会从github上下载python的源代码，并解压到/tmp目录下，然后在/tmp中执行编译工作。若依赖包没有安装，则会出现编译错误，需要在安装依赖包后重新执行该命令。</p>
<p>对于科研环境，更推荐安装专为科学计算准备的Anaconda发行版，<code>pyenv install anaconda-2.1.0</code> 安装2.x版本，<code>pyenv install anaconda3-2.1.0</code> 安装3.x版本；</p>
<p>Anacoda很大，用pyenv下载会比较慢，可以自己到Anaconda官方网站下载，并将下载得到的文件放在 <code>~/.pyenv/cache</code> 目录下，则pyenv不会重复下载。</p>
<h3 id="更新数据库">更新数据库</h3>
<p>安装完成之后需要对数据库进行更新：</p>
<pre><code>$ pyenv rehash</code></pre>
<h3 id="查看当前已安装的python版本">查看当前已安装的python版本</h3>
<pre><code>$ pyenv versions
* system (set by /home/seisman/.pyenv/version)
3.4.1</code></pre>
<p>其中的星号表示当前正在使用的是系统自带的python。</p>
<h3 id="设置全局的python版本">设置全局的python版本</h3>
<pre><code>$ pyenv global 3.4.1
$ pyenv versions
system
* 3.4.1 (set by /home/seisman/.pyenv/version)</code></pre>
<p>当前全局的python版本已经变成了3.4.1。也可以使用 <code>pyenv local</code> 或 <code>pyenv shell</code> 临时改变python版本。</p>
<h3 id="确认python版本">确认python版本</h3>
<pre><code>$ python
Python 3.4.1 (default, Sep 10 2014, 17:10:18)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt;</code></pre>
<h2 id="使用python">使用python</h2>
<ul>
<li>输入 <code>python</code> 即可使用新版本的python；</li>
<li>系统自带的脚本会以 <code>/usr/bin/python</code> 的方式直接调用老版本的python，因而不会对系统脚本产生影响；</li>
<li>使用 <code>pip</code> 安装第三方模块时会安装到 <code>~/.pyenv/versions/3.4.1</code> 下，不会和系统模块发生冲突。</li>
<li>使用 <code>pip</code> 安装模块后，可能需要执行 <code>pyenv rehash</code> 更新数据库；</li>
</ul>
<h2 id="更新">更新</h2>
<p>更新至最近的pyenv版本，可以用git的pull命令</p>
<pre><code>$ cd ~/.pyenv
$ git pull</code></pre>
<p>想要更新至某个特定的pyenv版本，也行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> ~/.pyenv</span><br><span class="line">$ git fetch</span><br><span class="line">$ git tag  <span class="comment"># 会显示出所有可用的版本号</span></span><br><span class="line">v0.1.0</span><br><span class="line">v0.1.1</span><br><span class="line">v0.1.2</span><br><span class="line">v0.2.0</span><br><span class="line">v0.2.1</span><br><span class="line">v0.3.0</span><br><span class="line">v0.4.0</span><br><span class="line">v0.4.0-20130613</span><br><span class="line">v0.4.0-20130726</span><br><span class="line">v0.4.0-20131023</span><br><span class="line">v0.4.0-20131116</span><br><span class="line">v0.4.0-20131216</span><br><span class="line">v0.4.0-20131217</span><br><span class="line">v0.4.0-20140110</span><br><span class="line">v0.4.0-20140110.1</span><br><span class="line">...</span><br><span class="line">$ git checkout v0.1.0</span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<ol>
<li>https://github.com/yyuu/pyenv</li>
<li>http://seisman.info/python-pyenv.html</li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2015-07-22：初稿取自Seisman；</li>
<li>2015-09-01：添加了更新pyenv部分</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Programming </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> 安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://whu-pzhang.github.io/hello-world.html</url>
      <content type="html"><![CDATA[<p>Hello World! 欢迎来到 pzhang 的个人博客。</p>
<p>博客成立于2015年，主要关注地震学的基础知识、相关软件以及编程语言和工具。</p>
<a id="more"></a>
<p>本博客使用基于<a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a> 的 <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> 作为静态博客生成引擎，主题来自 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">NexT</a>。 源文件使用 Markdown 标记语言写作。托管在 <a href="https://github.com/whu-pzhang/whu-pzhang.github.io" target="_blank" rel="noopener">GitHub</a> 上。</p>
<p>对这些提供开源且免费的服务表示感谢。</p>
]]></content>
      
        <categories>
            
            <category> 杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7安装及配置]]></title>
      <url>https://whu-pzhang.github.io/linux-environment-for-seismology-research.html</url>
      <content type="html"><![CDATA[<p><strong>转载于 Seisman <a href="https://seisman.info/linux-environment-for-seismology-research.html" target="_blank" rel="noopener">用 CentOS 7 打造合适的科研环境</a></strong>， 部分小节按照自己需求有更改。</p>
<p>这篇博文记录了我用 CentOS 7 搭建 <strong>地震学科研环境</strong> 的过程，供我个人在未来重装系统时参考。 对于其他地震学科研人员，也许有借鉴意义。</p>
<p>阅读须知：</p>
<ol style="list-style-type: decimal">
<li>本文适用于个人电脑，不适用于服务器；</li>
<li><strong>不推荐刚接触 Linux 的人使用 CentOS 发行版</strong>；</li>
<li>本文尽量写的浅显易懂，但要求读者掌握 Linux 基础知识；</li>
<li>本文所有操作均在 CentOS 7 下完成，其他发行版或多或少与 CentOS 7 不同，因而仅供参考；</li>
<li>本文所安装的软件纯粹出于个人习惯及喜好，读者应自己判断，按需安装；</li>
</ol>
<a id="more"></a>
<h2 id="安装-centos">安装 CentOS</h2>
<p>CentOS 7 的安装与其他 Linux 发行版的安装差不多，个别地方稍有不同。</p>
<h3 id="准备工作">准备工作</h3>
<ol style="list-style-type: decimal">
<li>准备材料
<ul>
<li>U 盘：容量 700M 以上，用于制作 U 盘启动盘，因为在制作启动盘时会格式化 U 盘，所以 U 盘内不要包含重要资料</li>
<li><a href="http://mirrors.ustc.edu.cn/centos/7/isos/x86_64/CentOS-7-x86_64-LiveGNOME-1511.iso" target="_blank" rel="noopener">CentOS 7.2 LiveCD ISO 镜像文件</a></li>
<li><a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/" target="_blank" rel="noopener">Universal USB installer</a>：Windows 下的 U 盘启动盘制作工具</li>
<li>一个已安装 Windows 的电脑：用于制作 U 盘启动盘</li>
</ul></li>
<li>运行 Universal USB installer 并制作 U 盘启动盘</li>
<li>将 U 盘插入计算机，重启，进入 BIOS 选择从 U 盘启动，即可进入 CentOS 的 LiveCD</li>
<li>进入 LiveCD 后，点击桌面的 “Install to Hard Drive” 即可安装</li>
</ol>
<p>注：Linux 下可以通过 <code>dd</code> 命令制作启动盘，但由于对原理不够了解，偶尔会导致制作失败， 或制作成功后 U 盘容量有问题，还是用 Windows 下的 Universal USB installer 比较靠谱。</p>
<h3 id="安装过程">安装过程</h3>
<ol style="list-style-type: decimal">
<li>选择安装过程中使用的语言，这里应 <strong>使用英语，不要使用汉语</strong>。若安装界面使用汉语，最终安装的系统中会出现两个比较麻烦的问题：
<ol style="list-style-type: decimal">
<li>家目录下的系统文件夹，比如 Downloads、Desktop 等会以中文表示，这使得在命令行 <code>cd</code> 变得很麻烦；</li>
<li>终端中某些字符用英文字体，某些字符用中文字体，效果非常差，需要自己修改终端字体方可；</li>
<li>可在安装完成后，在设置-&gt;区域和语言中将语言改为汉语,然后在重启时选择保留原文件夹名称。</li>
</ol></li>
<li>选择区域和城市：Asia 和 Shanghai</li>
<li>键盘使用 English(US) 而不是 English(UK)</li>
<li>Hostname 可以改也可以不改，我用 <code>mars.geolab</code></li>
<li>安装的目的地，选择要使用的硬盘，在 “Other Storage Options” 处选择“I will configure partioning”，即手动分区</li>
</ol>
<h3 id="分区">分区</h3>
<p>CentOS7 的分区似乎比较特别，自认为经验很丰富的我在第一次安装 CentOS7 时还是在分区上耽误了很多时间。后来找到比较合适的分区方法，如下：</p>
<ul>
<li>点击 “Click here to create them automatically”，即让安装程序帮忙分区</li>
<li>默认的分区方案是使用 LVM，其好处在于 “当机器有多块硬盘时，在使用的时候看上去只有一块”</li>
<li>默认的文件系统为 XFS 而不是以前常用的 EXT4；</li>
<li>自动分区完成后，再根据自己的需求，手动修改分区细节
<ul>
<li><code>/boot</code> ：CentOS 自动分配，一定不要乱改；</li>
<li><code>/</code> ：根目录，合理使用并及时清理的话 15G 就够了，不过建议 30G 以上；</li>
<li><code>swap</code> ：与物理内存大小一致即可</li>
<li><code>/opt</code> ：个人习惯是将第三方软件都安装在 <code>/opt</code> 下，所以分了 70G</li>
<li><code>/home</code> ：余下的全部空间</li>
</ul></li>
<li>点击 “Begin to Install” 开始安装</li>
</ul>
<h3 id="真正的安装">真正的安装</h3>
<ol style="list-style-type: decimal">
<li>设置 root 密码</li>
<li>创建一般用户</li>
<li>等待安装完成</li>
<li>安装完成，重启</li>
<li>重启后，同意 License 即可</li>
</ol>
<h2 id="对系统的若干修改">对系统的若干修改</h2>
<h3 id="若干原则">若干原则</h3>
<p>为了搭建一个稳定的系统，尽量避免因为各种瞎折腾而导致的系统问题，需要专门确定一些原则。</p>
<p>总的原则就是<strong>不要瞎折腾</strong>。</p>
<h3 id="给一般账号-root-权限">给一般账号 root 权限</h3>
<p>默认情况下，一般账号是没有 root 权限的。为什么不直接用 root 账号，而是要给一般账号 root 权限呢？</p>
<ul>
<li><strong>日常工作中使用 root 账号，是非常糟糕且危险的习惯！无论是服务器还是个人电脑都是如此。</strong></li>
<li>安装软件时需要 root 权限，只能 <code>su</code> 切换到 root 账户再安装。对于习惯使用 <code>sudo</code> 的人来说，还是有些麻烦。</li>
</ul>
<p>假设账户名为 seisman，要授予他 root 权限，则要修改配置文件 <code>/etc/sudoers</code> :</p>
<pre><code>$ su
# echo &#39;pzhang ALL=(ALL) ALL&#39;&gt;&gt; /etc/sudoers # 向配置文件中加入语句
# tail -1 /etc/sudoers  # 检查一下是否正确
pzhang ALL=(ALL) ALL</code></pre>
<p>其中 pzhang 为当前用户名。</p>
<h3 id="添加第三方源">添加第三方源</h3>
<p>CentOS 由于很追求稳定性，所以官方源中自带的软件不多，因而需要一些第三方源，比如 EPEL、ATrpms、ELRepo、Nux Dextop、RepoForge 等。根据上面提到的软件安装原则，为了尽 可能保证系统的稳定性，此处大型第三方源只添加 EPEL 源、Nux Dextop 和 ELRepo 源。</p>
<h4 id="epel">EPEL</h4>
<p><a href="https://fedoraproject.org/wiki/EPEL" target="_blank" rel="noopener">EPEL</a> 即 Extra Packages for Enterprise Linux， 为 CentOS 提供了额外的 10000 多个软件包，而且在不替换系统组件方面下了很多功夫，因而可以放心使用。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-release</span><br></pre></td></tr></table></figure>
<p>执行完该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>epel.repo</code> 文件。</p>
<h4 id="nux-dextop">Nux Dextop</h4>
<p><a href="http://li.nux.ro/repos.html" target="_blank" rel="noopener">Nux Dextop</a> 中包含了一些与多媒体相关的软件包，作者尽量 保证不覆盖 base 源。官方说明中说该源与 EPEL 兼容，实际上个别软件包存在冲突，但基本不会造成影响:</p>
<pre><code>sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm</code></pre>
<p>完成该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>nux-dextop.repo</code> 文件。</p>
<h4 id="elrepo">ELRepo</h4>
<p>ELRepo 包含了一些硬件相关的驱动程序，比如显卡、声卡驱动:</p>
<pre><code>sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</code></pre>
<p>完成该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>elrepo.repo</code> 文件。</p>
<h3 id="安装-yum-axelget">安装 yum-axelget</h3>
<p><a href="https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/yum-axelget.html" target="_blank" rel="noopener">yum-axelget</a> 是 EPEL 提供的一个 yum 插件。使用该插件后用 yum 安装软件时可以并行下载，大大提高了软件的下载速度，减少了下载的等待时间:</p>
<pre><code>sudo yum install yum-axelget</code></pre>
<p>安装该插件的同时会安装另一个软件 axel。axel 是一个并行下载工具，在下载 http、ftp 等简单协议的文件时非常好用。</p>
<h3 id="第一次全面更新">第一次全面更新</h3>
<p>在进一步操作之前，先把已经安装的软件包都升级到最新版:</p>
<pre><code>sudo yum update</code></pre>
<p>要更新的软件包有些多，可能需要一段时间。不过有了 yum-axelget 插件，速度已经快了很多啦。</p>
<h3 id="重启">重启</h3>
<p>此处建议重启。</p>
<h3 id="删除多余的-kernel">删除多余的 kernel</h3>
<p>在前面的 <code>yum update</code> 执行之后，可能会将 kernel 也一起更新，则在启动 CentOS 时启动项中会有很多项。</p>
<p>确认当前使用的 kernel 版本号:</p>
<pre><code>$ uname -r
3.10.0-123.9.3.el7.x86_64</code></pre>
<p>查找当前系统安装的所有 kernel:</p>
<pre><code>$ rpm -qa | grep kernel | sort
kernel-3.10.0-123.8.1.el7.x86_64
kernel-3.10.0-123.9.2.el7.x86_64
kernel-3.10.0-123.9.3.el7.x86_64
kernel-devel-3.10.0-123.8.1.el7.x86_64
kernel-devel-3.10.0-123.9.2.el7.x86_64
kernel-devel-3.10.0-123.9.3.el7.x86_64
kernel-headers-3.10.0-123.9.3.el7.x86_64
kernel-tools-3.10.0-123.9.3.el7.x86_64
kernel-tools-libs-3.10.0-123.9.3.el7.x86_64</code></pre>
<p>可以看出有三个版本的 kernel，123.8.1、123.9.2 和 123.9.3。除了最新的 kernel 外，建议多保留一个旧 kernel， 以免新 kernel 出现问题时可以通过旧 kernel 进入系统。因而此处删除 123.8.1 版本的 kernel:</p>
<pre><code>sudo yum remove kernel-3.10.0-123.8.1.el7.x86_64
sudo yum remove kernel-devel-3.10.0-123.8.1.el7.x86_64</code></pre>
<h2 id="基础开发环境">基础开发环境</h2>
<h3 id="gcc-系列">GCC 系列</h3>
<pre><code>sudo yum install gcc                     # C 编译器
sudo yum install gcc-c++                 # C++ 编译器
sudo yum install gcc-gfortran            # Fortran 编译器
sudo yum install compat-gcc-44           # 兼容 gcc 4.4
sudo yum install compat-gcc-44-c++       # 兼容 gcc-c++ 4.4
sudo yum install compat-gcc-44-gfortran  # 兼容 gcc-fortran 4.4
sudo yum install compat-libf2c-34        # g77 3.4.x 兼容库</code></pre>
<h3 id="软件开发辅助工具">软件开发辅助工具</h3>
<pre><code>sudo yum install make
sudo yum install scons
sudo yum install gdb     # 代码调试器
sudo yum install cmake   # Cmake
sudo yum install git     # 版本控制
sudo yum install tig     # git 的文本模式接口
sudo yum install git-svn # git 的 svn 插件</code></pre>
<h2 id="驱动程序">驱动程序</h2>
<!-- ### 显卡驱动

Linux 默认只使用开源的显卡驱动，就目前的情况来看，开源驱动的效果还是不错的，但跟官方的闭源驱动相比还是有一定差距。最明显的区别是，在使用 SAC 的 ppk 功能放大波形时，使用开源驱动会出现延迟，而使用官方闭源则整个过程非常顺畅。

关于显卡驱动的安装，请参考 [Linux 下安装 nvidia 显卡驱动](/install-nvidia-drivers-under-linux.html)
一文中的 “从 ELRepo 源中安装驱动” 部分。

**注意**：目前的显卡驱动似乎有问题，安装后终端有时会出现屏幕闪烁、一屏文字上下重复跳动的情况，稍微有些影响用 vim 写代码。是否要安装显卡驱动自己决定。 -->
<h3 id="ntfs-驱动">NTFS 驱动</h3>
<p>CentOS 下默认无法挂载 NTFS 格式的硬盘。需安装 nfts-3g 即可实现即插即用:</p>
<pre><code>sudo yum install ntfs-3g</code></pre>
<h2 id="进阶开发环境">进阶开发环境</h2>
<h3 id="java-环境">Java 环境</h3>
<p>Java 的一大特色在于跨平台，安装了 Java 运行环境，即可运行 Java 程序:</p>
<pre><code>sudo yum install java                        # java 运行环境</code></pre>
<h3 id="clang-系列">Clang 系列</h3>
<p>Clang 可以认为是 GCC 的替代品，可以用于编译 C、C++、Objective-C 和 Objective-C++。其提供了更友好的 报错信息，在有些方面比 GCC 更友好，同时其提供了一个代码静态分析器，可以用于分析代码中可能出现的 bug 和内存溢出问题。</p>
<pre><code>sudo yum install clang             # clang 编译器
sudo yum install clang-analyzer    # clang 静态分析器</code></pre>
<!-- ### Intel 系列

Intel 的大部分软件都是非开源且收费的，但同时部分软件也提供了 Linux 下的非商业免费版。比如 icc、mkl 数学库以及代码性能分析工具等。

Intel 软件的申请以及安装参考《[Intel 非商业免费开发工具](/intel-non-commercial-software.html)》。

还有一点需要注意的是，Intel 也提供了并行相关的几个命令，比如 mpicc、mpirun。所以 openmpi、mpich
和 intel 三者，在并行时只能用其中一个。 -->
<h3 id="并行计算">并行计算</h3>
<p>并行可以用 openmpi，也可以用 mpich，二者应该是并列的。但是由于二者提供了几乎一样的命令， 所以二者可以同时安装，但是不可以同时处于使用状态。</p>
<h4 id="openmpi">openmpi</h4>
<p>安装 openmpi:</p>
<pre><code>sudo yum install openmpi openmpi-devel</code></pre>
<p>安装后，二进制文件位于 <code>/usr/lib64/openmpi/bin</code> 下，动态库文件位于 <code>/usr/lib64/openmpi/lib</code> 下，因而实际使用的话还需要额外的配置，在 <code>.bashrc</code> 中加入如下语句:</p>
<pre><code>export PATH=/usr/lib64/openmpi/bin/:${PATH}
module load mpi/openmpi-x86_64</code></pre>
<p>PS：要使用 <code>module</code> 命令需要先安装 <code>environment-modules</code> 包。</p>
<h4 id="mpich">mpich</h4>
<p>安装 mpich:</p>
<pre><code>sudo yum install mpich mpich-devel</code></pre>
<p>安装后，二进制文件位于 <code>/usr/lib64/mpich/bin</code> 下，动态库文件位于 <code>/usr/lib64/mpich/lib</code> 下， 因而实际使用的话还需要额外的配置，在 <code>.bashrc</code> 中加入如下语句:</p>
<pre><code>export PATH=/usr/lib64/mpich/bin/:${PATH}
module load mpi/mpich-x86_64</code></pre>
<h2 id="脚本语言环境">脚本语言环境</h2>
<h3 id="perl">Perl</h3>
<p>CentOS 7.0 自带了 Perl 5.16.3（2013 年 03 月 11 日发布），目前的最新版本为 5.20.1（2014 年 09 月 14 日发布）。</p>
<h4 id="系统自带-perl">系统自带 Perl</h4>
<p>系统自带 Perl，就目前来看，版本不算老，基本够用。官方源和 EPEL 源中提供了 1000 多个模块，可以直接用 yum 安装:</p>
<pre><code>sudo yum install perl-Parallel-ForkManager  # 并行模块</code></pre>
<p>若源中没有已打包好的模块，也可以使用 perl 自带的 cpan 来安装模块。</p>
<p>优先级：yum &gt; cpan。</p>
<h4 id="plenv-管理新版本">plenv 管理新版本</h4>
<p>若需要使用最新版本的 perl，可以使用 <a href="https://github.com/tokuhirom/plenv" target="_blank" rel="noopener">plenv</a> 安装新版本的 perl，并使用 plenv 提供的 cpanm 命令安装模块:</p>
<pre><code>cpanm install Parallel::ForkManager # 并行模块</code></pre>
<h3 id="python">Python</h3>
<p>CentOS 7.0 自带 Python 2.7.5，目前 Python 2 的最新版本为 2.7.8，Python 3 的最新版本为 3.5.2。</p>
<h4 id="系统自带-python">系统自带 Python</h4>
<p>系统自带的 Python 2.7.5，基本已经够用，Python 2 常用的模块在官方源或 EPEL 源中 也有有编译好的包，因而直接通过 yum 安装即可。 <!--
    sudo yum install python-matplotlib  # 2D 绘图库
    sudo yum install PyQt4  # Qt4 的 Python 绑定
    sudo yum install numpy  # 数组操作库
    sudo yum install scipy  # 科学计算库
    sudo yum install python-requests  # 网页请求
    sudo yum install python-docopt  # 命令行参数分析器
    sudo yum install gdal-python    # gdal 的 Python 绑定 --></p>
<h4 id="pyenv-管理-python3">pyenv 管理 Python3</h4>
<p>Python2 与 Python3 之间是不完全兼容的，而我以 Python3 为主，所以需要安装一个 Python3。</p>
<p>首先，安装 <a href="/python-pyenv.html">pyenv</a> 来管理多个 Python 版本，然后利用 pyenv 安装 anaconda3（即 Python3.4）。anaconda 自带了众多科学计算所需的包， 免去了安装的麻烦，对于额外需要安装的包，首先利用conda 安装，conda库没有的 再利用pip 安装。</p>
<pre><code>conda install requests
conda install docopt</code></pre>
<h2 id="编程相关软件">编程相关软件</h2>
<h3 id="编辑器">编辑器</h3>
<ol style="list-style-type: decimal">
<li>vim</li>
</ol>
<p>安装 <a href="https://github.com/VundleVim/Vundle.vim" target="_blank" rel="noopener">Vundle</a> vim 插件管理器</p>
<pre><code>$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code></pre>
<p>然后在 <code>~/.vimrc</code> 中设置好需要哪些插件，然后安装插件：</p>
<pre><code>$ vim +PluginInstall +qall</code></pre>
<p><code>YouCompleteMe</code> 插件需要自行编译才能使用，先安装 <code>clang</code> 和 <code>clang-analyzer</code>：</p>
<pre><code>$ cd ~/vim/bundle/YouCompleteMe
$ ./install --clang-completer</code></pre>
<p>安装好后还需配置 <code>ycm_extra_conf.py</code> 这个文件。</p>
<ol start="2" style="list-style-type: decimal">
<li>sublime text 3</li>
</ol>
<p>安装见<a href="/install-sublime-text-3-under-linux.html">Linux下安装Sublime Text 3</a></p>
<h3 id="ide">IDE</h3>
<ul>
<li>Python IDE：<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">PyCharm Community Edition</a></li>
</ul>
<h2 id="日常软件">日常软件</h2>
<h3 id="office-套件">Office 套件</h3>
<p>大多数 Linux 发行版（包括CentOS 7）都自带 LibreOffice:</p>
<pre><code>sudo yum install libreoffice
sudo yum install libreoffice-langpack-zh-Hans</code></pre>
<p>LibreOffice 与 Microsoft Office 的兼容性不太好，操作界面与 MS Office 也有较大差异，让人不太习惯。</p>
<h3 id="pspdf-阅读器">PS/PDF 阅读器</h3>
<p>系统自带的 evince 阅读器，可以打开 PS 和 PDF 文件，基本足够日常的使用了。</p>
<h4 id="zathura">zathura</h4>
<p>zathura 可以查看 PS、PDF、djvu 格式的文件，可以作为 evince 的替代品:</p>
<pre><code>sudo yum install zathura zathura-plugins-all</code></pre>
<h4 id="ghostscript">ghostscript</h4>
<pre><code>sudo yum install ghostscript</code></pre>
<h4 id="master-pdf-editor">master-pdf-editor</h4>
<p>官方网站: <a href="https://code-industry.net/free-pdf-editor/" class="uri" target="_blank" rel="noopener">https://code-industry.net/free-pdf-editor/</a></p>
<pre><code>sudo yum localinstall http://get.code-industry.net/public/master-pdf-editor3-3.2.62-1.x86_64.rpm</code></pre>
<h3 id="tex-live-2016">TeX Live 2016</h3>
<p>系统是自带了 TeXLive，但是功能不完全且版本较老，推荐安装最新版的TeX Live套件。</p>
<p>参考 <a href="http://seisman.info/install-texlive-under-linux.html" target="_blank" rel="noopener">Linux 下安装 TeXLive</a> 一文。</p>
<h3 id="mendeley">Mendeley</h3>
<p>Mendeley 是一个跨平台的文献管理软件，其内部自带了一个可以添加注释的 PDF 阅读器。</p>
<p>下载 Generic Linux (64 bits)：http://www.mendeley.com/download-mendeley-desktop</p>
<p>安装:</p>
<pre><code>tar -xvf mendeleydesktop-1.12.3-linux-x86_64.tar.bz2  # 解压
sudo mv mendeleydesktop /opt  # 复制到 / opt 下
cd /opt/mendeleydesktop/bin   # cd 进去
./install-mendeley-link-handler.sh /opt/mendeleydesktop/bin/mendeleydesktop
sudo yum install qtwebkit  # 安装依赖包</code></pre>
<p>注销重新登陆，在 Application-&gt;Education 下即可看到 mendeley 的相关项目。不过是 没有软件的图标的，强迫症不能忍，用下面的命令解决:</p>
<pre><code>cp /opt/mendeleydesktop/share/icons/hicolor/128x128/apps/mendeleydesktop.png ~/.local/share/icons/</code></pre>
<h3 id="google-chrome-浏览器">Google Chrome 浏览器</h3>
<p>Google 官方源在国内可能无法正常访问，这里添加 Fedora 中文社区提供的镜像源:</p>
<pre><code>sudo wget http://repo.fdzh.org/chrome/google-chrome-mirrors.repo -P /etc/yum.repos.d/</code></pre>
<p>安装:</p>
<pre><code>sudo yum install google-chrome-stable</code></pre>
<h3 id="flash-插件">Flash 插件</h3>
<p>Flash 插件主要是看在线视频的时候要用。Google 浏览器自带了 Flash 插件，所以这里安装的 flash 插件主要是为了 firefox。</p>
<pre><code>sudo rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm
sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux
sudo yum install flash-plugin</code></pre>
<h3 id="解压软件">解压软件</h3>
<p>解压 7z 或 zip 格式需要 p7zip，由 EPEL 提供:</p>
<pre><code>sudo yum install p7zip</code></pre>
<p>解压 rar 格式需要 unrar，该软件由 Nux Dextop 提供:</p>
<pre><code>sudo yum install unrar</code></pre>
<h3 id="ftp-客户端">FTP 客户端</h3>
<p>FTP 客户端，还是有界面的 filezilla 比较方便些。</p>
<pre><code>sudo yum install filezilla</code></pre>
<h2 id="效率类软件">效率类软件</h2>
<p>这一类工具能够在不同方面提高科研的效率，也提高了使用者的体验。</p>
<h3 id="终端模拟器">终端模拟器</h3>
<p>Gnome 自带的终端模拟器是 gnome-terminal。经常会需要开十几个终端，切换和管理起来比较麻烦。</p>
<h4 id="terminator">terminator</h4>
<p>terminator 有很多功能，我只用到了终端分割的功能。 <code>Ctrl+Shift+O</code> 对终端水平分隔， <code>Ctrl+Shift+E</code> 对终端垂直分隔， <code>Alt + 上下左右</code> 可以在各子终端中切换。terminator 由 EPEL 提供:</p>
<pre><code>sudo yum install terminator</code></pre>
<h4 id="guake">guake</h4>
<p>有些时候需要临时执行一两个命令，但是又不想额外启动一个终端的情况下，guake 是个不错的选择。</p>
<pre><code>sudo yum install guake</code></pre>
<p>安装完成后，在 Application-&gt;System Tools 里找到 guake Terminal 即可启动。按下 F12 即可呼出 guake，再次按下 F12 即可隐藏。也可在终端执行 <code>guake-prefs</code> 对 gauke 进行配置。</p>
<h3 id="zsh-与-oh-my-zsh">zsh 与 oh my zsh</h3>
<p>Linux 下有很多 shell，比如最常见的 bash，除此之外还有 csh、ksh。zsh 也是一个 shell。</p>
<p>zsh 的特点在于：</p>
<ul>
<li>语法基本完全兼容于 bash，一般用户完全体会不到其区别</li>
<li>zsh 提供命令补全特性，比 bash 的补全要更好用</li>
<li>可配置性强</li>
</ul>
<p>完全不经配置的 zsh 已经很好用了，一般用户也没必要花时间研究配置。 <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">oh my zsh</a> 是一群人一起维护的一套 zsh 配置文件。 直接用这个配置文件，稍稍了解一点会有更好的体验。</p>
<p>安装 zsh:</p>
<pre><code>sudo yum install zsh</code></pre>
<p>安装 oh my zsh:</p>
<pre><code>curl -L http://install.ohmyz.sh | sh</code></pre>
<p>上面的命令，做了如下几件事情：</p>
<ul>
<li>下载 <code>oh my zsh</code> 到 <code>~/.oh-my-zsh</code></li>
<li>备份已有的 zsh 配置文件 <code>~/.zshrc</code> ，并复制新的 <code>.zshrc</code> 文件</li>
<li>将当前用户的默认 shell 由 bash 改成 zsh</li>
</ul>
<p>第三步中，会报错如下： <code>chsh: &quot;/usr/bin/zsh&quot; is not listed in /etc/shells.</code> ，需要手动修改默认 shell:</p>
<pre><code>chsh -s /bin/zsh</code></pre>
<p>chsh 命令修改的是 login shell，因而需要退出当前用户并重新登陆，以后用户的默认 shell 就从 bash 变成了 zsh，所有的配置都不用写到 <code>.bashrc</code> 而要写到 <code>.zshrc</code> 中。</p>
<p>在 <code>.zshrc</code> 中可以选择喜欢的主题，以及适当数量的插件。下面列出我在用的插件:</p>
<ol style="list-style-type: decimal">
<li><p>git</p>
<p>该插件为 git 的众多常用命令提供了更简单的别名，比如 <code>git status</code> 的别名是 <code>gst</code>， 大大减少了击键数。但该插件中 <code>git mergetool --no-prompt</code> 的别名是 <code>gmt</code>， 与 GMT 软件冲突，需要将该插件的目录 git 复制到 custom/plugins 下，然后删除其中的 gmt 别名；</p></li>
<li>命令补全插件: pip, pyenv</li>
<li>sudo：按两下 <code>ESC</code> 即可在当前命令前加上 <code>sudo</code></li>
<li><p>yum：为常见的 yum 命令提供别名</p></li>
</ol>
<h3 id="autojump">autojump</h3>
<p><a href="https://github.com/joelthelion/autojump" target="_blank" rel="noopener">autojump</a> 是一个非常智能的目录快速切换的工具。</p>
<p>安装</p>
<pre><code>$ sudo yum install -y autojump autojump-zsh</code></pre>
<p>简单演示如下:</p>
<pre><code>$ pwd
/home/seisman
$ cd Desktop
$ cd /opt
$ cd /usr/local

# 用 j 命令迅速从 / usr/local 跳转到与 des 匹配的目录，这里只有 Desktop 可以匹配
$ j des
$ pwd
/home/seisman/Desktop
# jo 可以直接用文件管理器打开文件夹而不是在终端跳转
$ jo dek</code></pre>
<p>用法差不多就这样，具体看项目主页。</p>
<h3 id="中文输入法">中文输入法</h3>
<p>刚安装的系统可能是没有中文输入法的，源中带的中文输入法应该是 ibus，使用效果一般。</p>
<pre><code>sudo yum install &quot;@Chinese Support&quot;
sudo yum install ibus ibus-libpinyin
sudo yum install libpinyin</code></pre>
<p>然后在区域键盘中选择汉语拼音。</p>
<h3 id="hosttool">HostTool</h3>
<p>科学上网几乎已经成为每个搞科研的人的必备技能。</p>
<p>科学上网的方式有很多，这里只说 HostTool： <a href="https://hosts.huhamhire.com/" class="uri" target="_blank" rel="noopener">https://hosts.huhamhire.com/</a></p>
<p>HostTool 科学上网本质上就是用最新的 host 文件替代了系统自带的 host 文件。</p>
<p>下载解压后，进入目录，直接 <code>sudo python2 hoststool.py</code> 即可运行，具体的用法自己研究一下。</p>
<h3 id="等宽字体">等宽字体</h3>
<p>编程要用等宽字体，这点是常识了。一款适合编程的等宽字体，至少要满足如下几个要求：</p>
<ol style="list-style-type: decimal">
<li>易于区分 “1”、“i” 和“l”</li>
<li>易于区分 “0”、“o” 和“O”</li>
<li>易于区分中文下的左引号和右引号</li>
<li>中英文混排美观</li>
</ol>
<p>目前选择的 [Inziu Iosevka]https://be5invis.github.io/Iosevka/inziu.html。将解压后的字体文件放在 <code>~/.fonts</code> 目录下， 并修改终端、gedit 以及其他编辑器、IDE 等的默认字体。</p>
<h2 id="虚拟机">虚拟机</h2>
<p>有时候可能需要在 Windows 下做一些操作，如果机器性能足够好的话，可以安装虚拟机。</p>
<h3 id="virtualbox-虚拟机">VirtualBox 虚拟机</h3>
<p>VirtuabBox 的安装:</p>
<pre><code>wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo
sudo mv virtualbox.repo /etc/yum.repos.d/
sudo yum install VirtualBox-5.0</code></pre>
<p>需要注意两点：</p>
<ul>
<li>若机器性能不够，虚拟机的使用体验会非常差，所以不建议在老机器上使用；</li>
<li>更新 kernel 之后需要执行 <code>sudo /etc/init.d/vboxdrv setup</code> ；</li>
<li>在 VirtualBox 安装虚拟系统后，记得使用 “设备”-&gt;“安装增强功能”，使用效果会更好；</li>
</ul>
<h2 id="同步网盘">同步网盘</h2>
<p>网盘根据功能大概可以分为两类：同步网盘和备份网盘。既然是同步网盘，Linux 下 的客户端必不可少。就目前已知的情况来看，CentOS7 下能使用的同步网盘只有三个： Dropbox、MEGA 和坚果云。</p>
<p>我主要用同步网盘将 Linux 机器上的 PDF 文献同步到 iPad 上。</p>
<h3 id="dropbox">Dropbox</h3>
<p>又是一个被墙的工具，熟练掌握科学上网技巧的人可以使用，一般人还是不要用了。</p>
<pre><code>wget https://www.dropbox.com/download?dl=packages/fedora/nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm
sudo rpm -i nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm</code></pre>
<h3 id="mega">MEGA</h3>
<p>MEGA： <a href="https://mega.co.nz/" class="uri" target="_blank" rel="noopener">https://mega.co.nz/</a></p>
<p>免费容量 50G，作为同步盘来说基本是够用了。</p>
<pre><code># 下载主程序
wget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/megasync-CentOS_7.x86_64.rpm
# 下载文件管理器扩展（可选）
wget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/nautilus-megasync-CentOS_7.x86_64.rpm
sudo yum localinstall megasync-CentOS_7.x86_64.rpm
sudo yum localinstall nautilus-megasync-CentOS_7.x86_64.rpm</code></pre>
<h3 id="坚果云">坚果云</h3>
<p>国内的全平台同步网盘，不限空间，但限制每月上传流量 1G，下载流量 3G。</p>
<pre><code># 坚果云依赖于 notify-python
sudo yum install notify-python
# 下载
wget https://jianguoyun.com/static/exe/installer/fedora/nautilus_nutstore_amd64.rpm
sudo rpm -i nautilus_nutstore_amd64.rpm</code></pre>
<h2 id="工具软件">工具软件</h2>
<h3 id="视频下载工具">视频下载工具</h3>
<p><a href="https://github.com/soimort/you-get" target="_blank" rel="noopener">you-get</a> 和 <a href="https://github.com/rg3/youtube-dl" target="_blank" rel="noopener">youtube-dl</a> 是两个用于从视频网站上下载视频文件的工具。其中，后者支持的网站更多，但前者对国内的视频网站支持更好。</p>
<pre><code>pip install you-get
pip install youtube-dl
# EPEL 中提供了 youtube-dl 包，因而也可以使用 yum 安装。一般来说，pip 安装的版本更新一些</code></pre>
<h3 id="pdf-处理工具">PDF 处理工具</h3>
<p><a href="http://community.coherentpdf.com/" target="_blank" rel="noopener">cpdf</a> 是一个跨平台的 PDF 处理工具，可以完成常见的 PDF 合并、 切割、加密解密、书签、水印等功能。</p>
<p>下载已编译好的 <a href="https://github.com/coherentgraphics/cpdf-binaries/archive/master.zip" target="_blank" rel="noopener">二进制包</a>， 解压，并将与自己的平台对应的二进制文件复制到 <code>${HOME}/bin</code> 目录下即可使用。</p>
<h3 id="bt-软件">BT 软件</h3>
<p>transmission 是 Linux 下常用的 Torrent 下载软件:</p>
<pre><code>sudo yum install transmission</code></pre>
<p>在 “Application”-&gt;“Internet”-&gt; 中可以启动 transmission。</p>
<h3 id="uget">uGet</h3>
<p><a href="http://ugetdm.com/" class="uri" target="_blank" rel="noopener">http://ugetdm.com/</a></p>
<p>uGet 是 Linux 下的一个下载工具，支持 HTTP、HTTPS、FTP、Torrent 等，支持多连接，并可以监视剪贴板:</p>
<pre><code>sudo yum --enablerepo=epel-testing install uget aria2</code></pre>
<h3 id="截图软件-shutter">截图软件 shutter</h3>
<p>GNOME 自带了截图工具。 <code>PrtScn</code> 为截取整个屏幕； <code>Alt+PrtScn</code> 为截取当前窗口； <code>Shift+PrtScn</code> 为自定义截屏区域。</p>
<p><a href="http://shutter-project.org/" target="_blank" rel="noopener">shutter</a> 是一个功能更强大的截图工具，支持不同的截图方式、 图片格式，还支持图片的简单编辑与注释:</p>
<pre><code>sudo yum install shutter</code></pre>
<p>可以通过 <a href="http://shutter-project.org/faq-help/set-shutter-as-the-default-screenshot-tool/" target="_blank" rel="noopener">修改快捷键使 shutter 成为默认的截图工具</a>。</p>
<h3 id="其他工具">其他工具</h3>
<pre><code>sudo yum install nfs-utils     # 挂载 NFS 文件系统所必须
sudo yum install xclip         # 终端的文本复制工具
sudo yum install ImageMagick   # 其中的 import 和 convert 命令很有用
sudo yum install dos2unix unix2dos  # Windows 和 Linux 换行符互相转换
sudo yum install meld          # 图形界面下的文件差异比较工具</code></pre>
<h2 id="娱乐">娱乐</h2>
<h3 id="影音播放器">影音播放器</h3>
<p>Nux Dextop 提供了 mplayer 和 VLC，可以用于播放常见格式的音频和视频，二者选其一安装即可:</p>
<pre><code>sudo yum install mplayer
sudo yum install vlc</code></pre>
<h2 id="参考">参考</h2>
<ol style="list-style-type: decimal">
<li><a href="http://elrepo.org/tiki/tiki-index.php" target="_blank" rel="noopener">ELRepo 官方网站</a></li>
<li><a href="http://elrepo.org/tiki/kmod-nvidia" target="_blank" rel="noopener">ELRepo kmod-nvidia</a></li>
<li><a href="http://wiki.centos.org/zh/AdditionalResources/Repositories/GoogleYumRepos" target="_blank" rel="noopener">CentOS Yum 软件库样例</a></li>
</ol>
<h2 id="修订历史">修订历史</h2>
<ul>
<li>2014-07-15：初稿转自 <a href="https://seisman.info" target="_blank" rel="noopener">Seisman 博客</a>，有所删减；</li>
<li>2016-06-15：修改Libreoffice部分：添加中文语言包部分</li>
<li>2016-06-16：修改Termintor部分：该包现由 EPEL 提供</li>
<li>2016-07-20：添加了vim插件管理部分</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Perl </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地球物理相关软件]]></title>
      <url>https://whu-pzhang.github.io/geo-software.html</url>
      <content type="html"><![CDATA[<p><strong>转载于 <a href="http://seisman.info/geo-software.html" target="_blank" rel="noopener">Seisman</a></strong>。</p>
<h2 id="通用数据处理">通用数据处理</h2>
<ul>
<li><a href="http://www.iris.edu/ds/nodes/dmc/forms/sac/" target="_blank" rel="noopener">SAC</a>: Seismic Analysis Code，地震学数据处理的常用软件。</li>
<li><a href="http://www.eas.slu.edu/eqc/eqccps.html" target="_blank" rel="noopener">CPS330</a></li>
<li><a href="https://github.com/obspy/obspy/wiki" target="_blank" rel="noopener">ObsPy</a>: 基于 Python 的地震学数据处理框架</li>
</ul>
<h2 id="数据格式转换">数据格式转换</h2>
<ul>
<li><a href="http://www.iris.edu/ds/nodes/dmc/forms/rdseed/" target="_blank" rel="noopener">rdseed</a>: SEED 格式转换为 SAC 等地震数据格式</li>
<li><a href="http://www.hinet.bosai.go.jp/REGS/manual/dlDialogue.php?r=win32tools" target="_blank" rel="noopener">win32tools</a>: Hi-net 提供的工具，用于将 WIN32 格式的数据转换为 SAC 格式</li>
<li><a href="https://seiscode.iris.washington.edu/projects/mseed2sac" target="_blank" rel="noopener">mseed2sac</a>: 将 miniSEED 格式转换为 SAC 格式</li>
<li><a href="https://seiscode.iris.washington.edu/projects/dataselect" target="_blank" rel="noopener">dataselect</a>: miniSEED 数据处理</li>
</ul>
<h2 id="数据获取工具">数据获取工具</h2>
<ul>
<li><a href="http://ds.iris.edu/ds/nodes/dmc/software/downloads/jweed/" target="_blank" rel="noopener">jweed</a>: 用 Java 实现的 IRIS 数据申请客户端。</li>
<li><a href="http://www.seis.sc.edu/sod" target="_blank" rel="noopener">SOD</a>: 数据自动下载命令行工具。</li>
</ul>
<h2 id="绘图类">绘图类</h2>
<ul>
<li><a href="http://gmt.soest.hawaii.edu/" target="_blank" rel="noopener">GMT</a>: 地球物理方向绘制地图必备神器。</li>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="noopener">pssac</a>: 利用 GMT 强大的绘图库直接绘制地震图</li>
<li><a href="http://www.isti2.com/JPlotResp/" target="_blank" rel="noopener">JPlotResp</a>: 绘制 RESP 仪器响应文件的振幅相位响应谱。可以直接联网查询某台网某台站某个时间的仪器响应，也可以直接处理本地的 RESP 文件。</li>
<li><a href="http://www.larskrieger.de/mopad/" target="_blank" rel="noopener">MoPad</a>: 地震矩分析和绘图软件，可以做地震矩的各种分解以及分析，绘制各种类型的震源球，可控性非常强，比 GMT 的 psmeca 命令要灵活，且可以与 GMT 联合使用</li>
<li><a href="http://emolch.github.io/gmtpy/" target="_blank" rel="noopener">GmtPy</a>: GMT4 的非官方 Python 接口。</li>
</ul>
<h2 id="通用辅助类">通用辅助类</h2>
<ul>
<li><a href="http://www.seis.sc.edu/software/distaz/" target="_blank" rel="noopener">distaz</a>: 给定震中和台站经纬度，计算震中距、方位角和反方位角的经典代码。</li>
<li><a href="http://www.seis.sc.edu/taup/" target="_blank" rel="noopener">TauP</a>: 强大的走时计算器，不过其功能可不仅仅只是计算走时这么简单。射线参数、射线路径、反射点、投射点都可以计算，支持自定义速度模型、支持不常见的震相。</li>
<li><a href="http://emolch.github.io/pyrocko/current/cake_doc.html" target="_blank" rel="noopener">Cake</a>: Python 写的走时计算工具，支持自定义速度模型，支持更复杂的震相路径。</li>
<li><a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/anisotime.html" target="_blank" rel="noopener">ANISOtime</a>: 横向各向同性球状对称模型下的射线走时工具。</li>
<li><a href="http://www.seismology.harvard.edu/research/DigitSeis.html" target="_blank" rel="noopener">DigitSeis</a>: 利用图像处理技术将模拟地震仪记录到的波形图片转换成数字信号（Matlab）</li>
</ul>
<h2 id="理论地震图">理论地震图</h2>
<ul>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="noopener">fk</a>: 频率 - 波数法，计算水平分层各向同性介质下理论地震图位移静态解和动态解</li>
<li><a href="http://www.gfz-potsdam.de/en/section/physics-of-earthquakes-and-volcanoes/data-products-services/downloads-software/" target="_blank" rel="noopener">QSEIS</a>: 层状粘弹介质下的理论地震图</li>
<li><a href="http://svn.geophysik.uni-muenchen.de/trac/shaxi" target="_blank" rel="noopener">SHaxi</a>: 有限差分方法计算全球尺度高精度 SH 波场。</li>
<li><a href="http://www.gfz-potsdam.de/en/section/physics-of-earthquakes-and-volcanoes/data-products-services/downloads-software/" target="_blank" rel="noopener">QSSP</a>: Normal modes 方法计算球形地球下的理论地震图</li>
<li><a href="https://github.com/geodynamics/mineos" target="_blank" rel="noopener">Mineos</a>: Normal modes 方法计算球对称非旋转地球模型下的合成地震图</li>
<li><a href="https://seiscode.iris.washington.edu/projects/yaseis" target="_blank" rel="noopener">yaseis</a>: 频率 - 波数法，球状分层介质下的理论地震图</li>
<li><a href="http://seis.earth.ox.ac.uk/axisem/" target="_blank" rel="noopener">AxiSEM</a>: 球层介质中的 3D 弹性、非弹性、各向异性、声波理论地震图</li>
<li><a href="http://instaseis.net/" target="_blank" rel="noopener">Instaseis</a>: 用 Python 写的，基于 AxiSEM 的地震图合成工具</li>
<li><a href="http://www.quest-itn.org/library/software/gemini-greens-function-of-the-earth-by-minor-integration" target="_blank" rel="noopener">GEMINI</a>:</li>
<li><a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/software/software.htm" target="_blank" rel="noopener">DSM</a>: Direct Solution Method (<a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/software/software/tish-1.9.0.tar.gz" target="_blank" rel="noopener">tish</a>, <a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/software/software/tipsv-1.8.0.tar.gz" target="_blank" rel="noopener">tipsv</a>, <a href="http://www-solid.eps.s.u-tokyo.ac.jp/~dsm/software/software/spcsac-v1.0.0.tar.gz" target="_blank" rel="noopener">spcsac</a>)</li>
<li><a href="https://git.scc.kit.edu/GPIAG-Software/SOFI2D/" target="_blank" rel="noopener">SOFI2D</a>: 二维有限差分计算 (粘) 弹性介质下的 PSV 波场</li>
<li><a href="https://git.scc.kit.edu/GPIAG-Software/SOFI2D_sh" target="_blank" rel="noopener">SOFI2D-sh</a>: 二维有限差分计算 (粘) 弹性介质下的 SH 波场</li>
<li><a href="https://git.scc.kit.edu/GPIAG-Software/SOFI3D" target="_blank" rel="noopener">SOFI3D</a>: 三维有限差分计算 (粘) 弹性介质下的波场</li>
<li><a href="https://geodynamics.org/cig/software/specfem2d/" target="_blank" rel="noopener">SPECFEM2D</a>: 谱元法 2D</li>
<li><a href="https://geodynamics.org/cig/software/specfem3d/" target="_blank" rel="noopener">SPECFEM3D</a>: 谱元法 3D(笛卡尔坐标系)</li>
<li><a href="https://geodynamics.org/cig/software/specfem3d_globe/" target="_blank" rel="noopener">SPECFEM3D Global</a>: 谱元法 3D(球坐标系)</li>
</ul>
<h2 id="震源机制">震源机制</h2>
<ul>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="noopener">gcap</a>: 通用 Cut and Paste 方法反演震源机制</li>
<li><a href="https://github.com/fabriziobernardi/pydmt" target="_blank" rel="noopener">pyTDMT</a>: 时间域震源机制反演的 Python 实现</li>
<li><a href="http://eost.u-strasbg.fr/wphase/" target="_blank" rel="noopener">WPhase</a>: W Phase 方法反演震源机制</li>
<li><a href="https://seiscode.iris.washington.edu/projects/focmec" target="_blank" rel="noopener">focmec</a>: 确定并绘制震源机制</li>
</ul>
<h2 id="特定功能类">特定功能类</h2>
<ul>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="noopener">hk</a>: 用于接收函数研究的代码。</li>
<li><a href="http://www.eas.slu.edu/People/LZhu/home.html" target="_blank" rel="noopener">CCP</a>: 共转换点地震数据叠加，用于接收函数研究。</li>
<li><a href="http://rses.anu.edu.au/~hrvoje/IRFFMv1.1.html" target="_blank" rel="noopener">IRFFM</a>: 带界面的接收函数软件包。</li>
<li><a href="http://rses.anu.edu.au/seismology/soft/astack/index.html" target="_blank" rel="noopener">astack</a>: 自适应迭代以实现震相对齐。</li>
<li><a href="http://www.lasif.net/" target="_blank" rel="noopener">LASIF</a>: 基于 Python 的大规模全波形反演框架，似乎是层析成像。</li>
<li><a href="http://splitting.gm.univ-montp2.fr/" target="_blank" rel="noopener">SplitLab</a>: 基于 Matlab 的 S 波分裂处理工具</li>
</ul>
<h2 id="数学处理类">数学处理类</h2>
<ul>
<li><a href="https://github.com/SHTOOLS/SHTOOLS" target="_blank" rel="noopener">SHTOOLS</a>: 实现球谐相关操作，包括变换、重建、旋转、谱分析等。</li>
</ul>
<h2 id="函数库">函数库</h2>
<ul>
<li><a href="https://seiscode.iris.washington.edu/projects/libmseed" target="_blank" rel="noopener">libmseed</a>: 用于读写 miniSEED 格式的 C 函数库</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 地球物理相关资源 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 理论地震图 </tag>
            
            <tag> SAC </tag>
            
            <tag> GMT </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
