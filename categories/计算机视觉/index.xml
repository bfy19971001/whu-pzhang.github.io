<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机视觉 on PzNotes - Learning and Sharing</title>
    <link>https://whu-pzhang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/</link>
    <description>Recent content in 计算机视觉 on PzNotes - Learning and Sharing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://whu-pzhang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>cs231n作业3笔记</title>
      <link>https://whu-pzhang.github.io/cs231n-assignment3/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://whu-pzhang.github.io/cs231n-assignment3/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;在作业 2 中手撸 CNN 后，cs231n 讲述了 RNN，LSTM，GRU 以及语言模型、图像标注、检测、定位、分割、识别等多方面的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cs231n作业2笔记</title>
      <link>https://whu-pzhang.github.io/cs231n-assignment2/</link>
      <pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://whu-pzhang.github.io/cs231n-assignment2/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;Assignment1中我们分别采用 &lt;code&gt;kNN&lt;/code&gt;、线性分类器、&lt;code&gt;SVM&lt;/code&gt;、&lt;code&gt;Softmax&lt;/code&gt;分类以及简单两层神经网络对CIFAR-10数据集进行了分类。&lt;/p&gt;

&lt;p&gt;来到Assignment2中，需要自己搭建卷积神经网络（CNN）来进行图像分类。&lt;/p&gt;

&lt;p&gt;Assignment2主要分为5个部分：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fully-connected Nerual Network&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这部分为作业1中两层神经网络的延续，需要将各个隐藏层的&lt;code&gt;forward&lt;/code&gt;以及&lt;code&gt;backward&lt;/code&gt;过程模块化，以便搭建任意层数的神经网络。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Batch Normalization&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为了使深度神经网络的训练更快，一种策略是寻找更好的优化方法；另一种思路便是改变网络的架构使其训练更快。我们知道，机器学习方法对于白化（特征之间无相关性，零均值，单位方差）的输入数据有着更好的效果。&lt;/p&gt;

&lt;p&gt;对数据的预处理（去均值、归一化、PCA以及白化）只能保证第一层的输入满足条件，但随着网络的逐步深入，深层网络的激活输入就不再满足条件了。更糟的是，随着训练加深，每层的特征分布还会随着权重的更新而偏移。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/1502.03167&#34;&gt;loffe 2015&lt;/a&gt;提出的Batch Normalization便是为了解决这个问题的。具体可以参考论文。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dropout&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dropout 是缓解过拟合的一种方法。会按比例随机的丢掉一部分激活值，达到缓解过拟合的目的。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Convolutional Networks&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这部分需要完成CNN的各个组件，然后组合在一起，搭建一个完整的CNN网络。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PyTorch/TensofFlow on CIFAR-10&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要是这两个框架的练习。&lt;/p&gt;

&lt;p&gt;我的代码实现&lt;a href=&#34;https://github.com/whu-pzhang/cs231n/tree/master/assignment2&#34;&gt;whu-pzhang/cs231n&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cs231n作业1笔记</title>
      <link>https://whu-pzhang.github.io/cs231n-assignment1/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://whu-pzhang.github.io/cs231n-assignment1/</guid>
      <description>&lt;h2 id=&#34;课程简介&#34;&gt;课程简介&lt;/h2&gt;

&lt;p&gt;这段时间刷了一遍斯坦福的&lt;a href=&#34;http://cs231n.stanford.edu/&#34;&gt;cs231n&lt;/a&gt;计算机视觉课程。其作业难度相比Andrew Ng在Coursera上的机器学习而言大得多。&lt;/p&gt;

&lt;p&gt;Assignment主页： &lt;a href=&#34;https://cs231n.github.io/&#34;&gt;CS231n Convolutional Neural Networks for Visual Recognition&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今年Spring 2018的作业分为3个部分，都是在Python3环境下进行的。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cs231n.github.io/assignments2018/assignment1/&#34;&gt;Assignment #1: Image Classification, kNN, SVM, Softmax, Neural Network&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cs231n.github.io/assignments2018/assignment2/&#34;&gt;Assignment #2: Fully-Connected Nets, Batch Normalization, Dropout, Convolutional Nets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cs231n.github.io/assignments2018/assignment3/&#34;&gt;Assignment #3: Image Captioning with Vanilla RNNs, Image Captioning with LSTMs, Network Visualization, Style Transfer, Generative Adversarial Networks&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;assignment1简介&#34;&gt;Assignment1简介&lt;/h2&gt;

&lt;p&gt;Assignment1从最简单的kNN分类器开始，到基本的线性分类器，逐步实现SVM以及Softmax分类器，直到最后需要手写一个简单的双层神经网络分类器。&lt;/p&gt;

&lt;p&gt;我的代码实现&lt;a href=&#34;https://github.com/whu-pzhang/cs231n&#34;&gt;whu-pzhang/cs231n&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>卡尔曼滤波</title>
      <link>https://whu-pzhang.github.io/kalman-filter/</link>
      <pubDate>Thu, 27 Sep 2018 22:20:58 +0800</pubDate>
      
      <guid>https://whu-pzhang.github.io/kalman-filter/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;

&lt;p&gt;最近项目需要，要做目标跟踪以及轨迹预测的算法，翻了翻论文，应用比较多的就是卡尔曼滤波了。以前本科的时候就听过卡尔曼滤波，学大地测量的做卫星轨道预测时好像经常会用到这个，不过那时本身用不到，也就没关注。现在需要用到了，就去学习了一下，这里算是将其总结记录一下吧。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>