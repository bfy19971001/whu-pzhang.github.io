<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C/C&#43;&#43; on PzNotes - Learning and Sharing</title>
    <link>https://whu-pzhang.github.io/tags/c-c&#43;&#43;/</link>
    <description>Recent content in C/C&#43;&#43; on PzNotes - Learning and Sharing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Apr 2018 16:01:06 +0800</lastBuildDate>
    
	<atom:link href="https://whu-pzhang.github.io/tags/c-c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>macOS 安装 OpenCV</title>
      <link>https://whu-pzhang.github.io/install-opencv-on-macos/</link>
      <pubDate>Sat, 07 Apr 2018 16:01:06 +0800</pubDate>
      
      <guid>https://whu-pzhang.github.io/install-opencv-on-macos/</guid>
      <description>&lt;p&gt;记录macOS上安装OpenCV。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C/C&#43;&#43; 中的 define 和 typedef</title>
      <link>https://whu-pzhang.github.io/define-and-typedef/</link>
      <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://whu-pzhang.github.io/define-and-typedef/</guid>
      <description>&lt;p&gt;c语言中，&lt;code&gt;#define&lt;/code&gt; 和 &lt;code&gt;typedef&lt;/code&gt; 均是用来定义别名的符号，但又有明显的不同。
&lt;code&gt;#define&lt;/code&gt; 定义的宏只是简单的文本替换，&lt;code&gt;typedef&lt;/code&gt; 则是类型别名。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>添加程序到Madagascar中</title>
      <link>https://whu-pzhang.github.io/add-new-program-to-mada/</link>
      <pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://whu-pzhang.github.io/add-new-program-to-mada/</guid>
      <description>&lt;p&gt;有时候自己利用Madagascar编写了一些数据处理的程序，每次调用都需要将源码放到需要用的目
录重新编译，然后再在SConstruct中调用,类似这样：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prog = Program(&#39;Mcode.c&#39;)
exe = str(prog[0])
# proj = Project()
# prog = proj.Program(&#39;Mcode.c&#39;)
Flow(&#39;out&#39;, [&#39;inp1&#39;, &#39;inp2&#39;, exe],
    &#39;&#39;&#39;
    ${SOURCES[2].abspath} inp2=${SOURCES[1]}
    &#39;&#39;&#39;)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>